{"id":"l3x-dac-layer","kind":"DAC","type":"DaLayer","systemCategory":"custom","fallback":{"value":"Ethereum","secondLine":"Blobs","sentiment":"good","description":"The data is posted to Ethereum as blobs.","fallbackDescription":"In case posting is not possible for some reason, there is a fallback mechanism to Ethereum."},"display":{"name":"L3X DAC","slug":"l3x","description":"Set of parties responsible for signing and attesting to the availability of data.","links":{"websites":["https://l3x.com/"],"apps":["https://bridge.arbitrum.io/?destinationChain=l3x-network&sourceChain=arbitrum-one"],"documentation":["https://docs.l3x.com/"],"explorers":["https://explorer.l3x.com/"],"repositories":[],"socialMedia":["https://t.me/l3x_protocol","https://x.com/l3x_protocol"]}},"technology":{"description":"\n    ## Architecture\n    ![Anytrust architecture](/images/da-layer-technology/anytrust/architecture1.png#center)\n\n    The DAC uses a data availability solution built on the AnyTrust protocol. It is composed of the following components:\n    - **Sequencer Inbox**: Main entry point for the Sequencer submitting transaction batches.\n    - **Data Availability Committee (DAC)**: A group of members responsible for storing and providing data on demand.\n    - **Data Availability Certificate (DACert)**: A commitment ensuring that data blobs are available without needing full data posting on the L1 chain. \n\n    \n    Committee members run servers that support APIs for storing and retrieving data blobs. \n    The Sequencer API allows the rollup Sequencer to submit data blobs for storage, while the REST API enables anyone to fetch data by hash. \n    When the Sequencer produces a data batch, it sends the batch along with an expiration time to Committee members, who store it and sign it. \n    Once enough signatures are collected, the Sequencer aggregates them into a valid DACert and posts it to the L1 chain inbox. \n    If the Sequencer fails to collect enough signatures, it falls back to posting the full data to the L1 chain. \n\n\n    A DACert includes a hash of the data block, an expiration time, and proof that the required threshold of Committee members have signed off on the data. \n    The proof consists of a hash of the Keyset used in signing, a bitmap indicating which members signed, and a BLS aggregated signature. \n    L2 nodes reading from the sequencer inbox verify the certificateâ€™s validity by checking the number of signers, the aggregated signature, and that the expiration time is at least two weeks ahead of the L2 timestamp. \n    If the DACert is valid, it provides a proof that the corresponding data is available from honest committee members.\n    ","references":[{"text":"Inside AnyTrust - Arbitrum Docs","href":"https://docs.arbitrum.io/how-arbitrum-works/inside-anytrust"}]},"bridges":[{"id":"l3x-dac-bridge","type":"DAC","usedIn":[{"id":"l3x","name":"L3X","slug":"l3x"}],"createdAt":1723211933,"contracts":{"addresses":{"ethereum":[{"name":"SequencerInbox","isVerified":true,"address":"0xB9450b512Fd3454e9C1a2593C5DF9E71344b5653","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x29994207C5AeDc83F27c5dc16E468f328832d42d"],"implementations":["0x18ed2d5bF7c5943bFd20a2995b9879E30c9E8dDa"]},"chain":"arbitrum","description":"The DA bridge and entry point for the Sequencer submitting transaction batches."}]},"risks":[]},"permissions":{"arbitrum":[{"name":"Sequencers","accounts":[{"address":"0xd987004738Ae33732ecf68613b1b7aFd1df7C11c","type":"EOA"}],"description":"Central actors allowed to relay transaction batches to the DA bridge (Sequencer Inbox).","chain":"arbitrum"},{"name":"RollupOwner","accounts":[{"address":"0x5e31608B400F45846043E93747D72A1a02c5a2f5","type":"EOA"}],"description":"Address that can upgrade the DA bridge, upgrade authorized batch posters (relayers), and change the Committee members by updating the valid keyset (via UpgradeExecutor)."},{"name":"UpgradeExecutor","accounts":[{"address":"0x4D0D8724ff2303A1679689a9Cc8e2A62f821e0E3","type":"Contract"}],"description":"The contract used to manage the upgrade of the DA bridge and other contracts."}]},"chain":42161,"requiredMembers":1,"membersCount":1,"transactionDataType":{"type":"TransactionDataCompressed","value":"Transaction data (compressed)","description":"TODO"},"display":{"name":"DA Bridge","slug":"dac","description":"L3X DAC on Ethereum.","redWarning":"Only one signer is required to attest to the availability of the data.","links":{"apps":[],"documentation":[],"explorers":[],"repositories":[],"socialMedia":[],"websites":[]}},"technology":{"description":"\n    ## DA Bridge Architecture\n    ![Anytrust bridge architecture](/images/da-bridge-technology/anytrust/architectureL3.png#center)\n\n\n    The DA commitments are posted to the L2 through the sequencer inbox, using the inbox as a DA bridge.\n    The DA commitment consists of Data Availability Certificate (DACert), including a hash of the data block, an expiration time, and a proof that the required threshold of Committee members have signed off on the data.\n    The sequencer distributes the data and collects signatures from Committee members offchain. Only the DACert is posted by the sequencer to the L2 chain inbox (the DA bridge), achieving L3 transaction ordering finality in a single onchain transaction.\n    ","risks":[{"category":"Funds can be lost if","text":"a malicious committee attests to an invalid data availability certificate."},{"category":"Funds can be lost if","text":"the bridge contract or its dependencies receive a malicious code upgrade. There is no delay on code upgrades."}]},"risks":{"committeeSecurity":{"type":"Auto","value":"1/1","sentiment":"bad","description":"The committee does not meet basic security standards, either due to insufficient size, lack of member diversity, or poorly defined threshold parameters. The system lacks an effective DA bridge and it is reliant on the assumption of an honest sequencer, creating significant risks to data integrity and availability."},"upgradeability":{"type":"LowOrNoDelay","value":"No delay","sentiment":"bad","description":"There is no delay in the upgradeability of the bridge. Users have no time to exit the system before the bridge implementation update is completed."},"relayerFailure":{"type":"NoMechanism","value":"No mechanism","sentiment":"bad","description":"The relayer role is permissioned, and the DA bridge does not have a Security Council or a governance mechanism to propose new relayers. In case of relayer failure, the DA bridge will halt and be unable to recover without the intervention of a centralized entity."}}}],"risks":{"economicSecurity":{"type":"Unknown","value":"None","sentiment":"bad","description":"There are no onchain assets at risk of being slashed in case of a data withholding attack, and the committee members are not publicly known."},"fraudDetection":{"type":"NoFraudDetection","value":"None","sentiment":"bad","description":"There is no fraud detection mechanism in place. A data withholding attack can only be detected by nodes downloading the full data from the DA layer."}}}