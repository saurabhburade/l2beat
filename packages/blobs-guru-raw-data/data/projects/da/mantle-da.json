{"id":"mantle-da","type":"DaLayer","kind":"DAC","systemCategory":"custom","display":{"name":"Mantle DA","slug":"mantle","description":"Mantle DA is a data availability solution built on EigenDA contracts, which have been forked and significantly modified.","links":{"websites":[],"apps":[],"documentation":[],"explorers":[],"repositories":[],"socialMedia":[]}},"technology":{"description":"\n    ## Architecture\n\n    ![MantleDA architecture](/images/da-layer-technology/mantleda/architecture.png#center)\n\n    Mantle DA is an independent DA module that is built on top of an early version of EigenDA smart contracts.\n    The system is made up of two main component: onchain smart contracts for storing and verifying data commitments, and an offchain network of permissioned nodes storing the data.\n    The permissioned set of nodes is tasked with providing data availability to the Mantle network. \n    They receive Mantle network transaction data, sign it using a BLS signature scheme, and send back signatures to the sequencer to post commitments to the DataLayrServiceManager (DA Bridge) contract on Ethereum.\n    The DA DataLayrServiceManager acts as a verifier smart contract,  verifying that the signatures provided by the sequencer are indeed from node operators who have agreed to be in the quorum.\n    To become members of the DA network, node operators are required to stake 100,000 MNT tokens, and can only be registered by an authorized entity. There is no slashing mechanism in place for misbehaving nodes.\n    "},"bridges":[{"id":"mantleDABridge","createdAt":1723022143,"type":"DAC","display":{"name":"DA Bridge","slug":"dac","description":"There is a Mantle DA bridge on Ethereum storing data availability commitments.","links":{"websites":["https://mantle.xyz"],"documentation":["https://docs.mantle.xyz/network/introduction/concepts/data-availability"],"repositories":["https://github.com/mantlenetworkio"],"apps":[],"explorers":["https://explorer.mantle.xyz/mantle-da"],"socialMedia":["https://twitter.com/0xMantle","https://t.me/mantlenetwork"]}},"contracts":{"addresses":{"ethereum":[{"name":"DataLayrServiceManager","isVerified":true,"address":"0x5BD63a7ECc13b955C4F57e3F12A64c10263C14c1","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x47D58744D8515d9aaEAf961bc03625118bd91EBb"],"implementations":["0xAB42127980a3bff124E6465e097a5fC97228827e"]},"chain":"ethereum","description":"The DA bridge and the entry point for data availability commitments. It is responsible for storing transaction data headers and confirming the data store by verifying operators signatures."},{"name":"BLSRegistry","isVerified":true,"address":"0x1eD35B793d887e028493dAC4a11AA5Feb811dd67","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x47D58744D8515d9aaEAf961bc03625118bd91EBb"],"implementations":["0x64F4244eEA17a361bb919A28F614C3ad1aC565ad"]},"chain":"ethereum","description":"This contract stores the number of Mantle DA operators and their public keys. It also store the quorum threshold and the minimum stake required to be part of the quorum."},{"name":"RegistryPermission","isVerified":true,"address":"0xBcF6d8273DAF842b6Fc288b08E48C438Fa911D01","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x2Cd33d3DC4d6Ea24B6941e4741F4Bf4772929e83"],"implementations":["0xAb00B934DE01c1b4931047125C2ba5B3d6186b85"]},"chain":"ethereum","description":"This contract is used to manage permissions for the BLSRegistry contract."},{"name":"PauserRegistry","isVerified":true,"address":"0x075a48633dc6845f92339741E9c96b88f1b2A86f","chain":"ethereum","description":"This contract is used to manage permissions for the DataLayrServiceManager contract."}]},"risks":[]},"technology":{"description":" \n    ![MantleDA bridge](/images/da-bridge-technology/mantleda/architecture.png#center)\n\n    The DA bridge contract is used for storing transaction data headers and confirming the data store by verifying operators signatures.\n      The Mantle sequencer posts the data hash as a commitment to the DataLayrServiceManager contract on Ethereum through an InitDataStore() transaction.\n      Once the commitment is posted, the sequencer sends the data to the permissioned set of nodes, who sign the data and send back the signatures to the sequencer.\n      The sequencer then posts the signatures to the DataLayrServiceManager contract on Ethereum through a confirmDataStore() transaction.\n      The confirmDataStore() function verify the signatures and if the quorum is reached, the data is considered available.\n    "},"permissions":{"ethereum":[{"name":"MantleEngineeringMultisig","description":"A Gnosis Safe with 3 / 7 threshold.  The owner of the DA bridge. This entity is responsible for managing the bridge, it can pause the bridge and change various parameters such as the quorum threshold and service fee for node operators.","accounts":[{"address":"0x2F44BD2a54aC3fB20cd7783cF94334069641daC9","type":"MultiSig"}],"chain":"ethereum","participants":[{"address":"0xC37642355c18ec9c3b3268AAC67e33516aa115eb","type":"EOA"},{"address":"0x207E804758e28F2b3fD6E4219671B327100b82f8","type":"EOA"},{"address":"0x5a021DC06A9630bb56099b8aEdfaDC2dEa7eB317","type":"EOA"},{"address":"0x00da2F87c56C3a19BD863613995705095F55b524","type":"EOA"},{"address":"0xbE73dea9c8DcDdB6b03F7e5797b85982065fe34e","type":"EOA"},{"address":"0x3Dc5FcB0Ad5835C6059112e51A75b57DBA668eB8","type":"EOA"},{"address":"0x915dc866e2e5E64f912A5ac1D40E3be4597F172a","type":"EOA"}]},{"name":"Permissioned Operators","description":"List of addresses authorized to sign data commitments for the DA bridge.","accounts":[{"address":"0x1888e4aC2Ab37A73B33448B87bABdD1ce1dcBAbe","type":"EOA"},{"address":"0x717c3DC6Df69c316d6Ac593077BC84Cc86f214A4","type":"EOA"},{"address":"0x8BEF0466b7C2CbFD753eF340e062dF06E93ADA7f","type":"EOA"},{"address":"0x6cc5A6F5a9E4757790e4068Aa9757226Cb854B64","type":"EOA"},{"address":"0xc1dEd495E1dDf089B2b41d6397C0aBa04BDA1A21","type":"EOA"},{"address":"0x550b3CB2D5fB5E4F0A08322CaC7b04291558CDa8","type":"EOA"},{"address":"0xB61298691FE0df10634A67dd83b2253E74cbF7fb","type":"EOA"},{"address":"0xcEb157a9bB9c80a845d5924e8CEAA591Caf705a5","type":"EOA"},{"address":"0x0B6F2C77C3740A5e6f88A4eCdd02C10BE8a2e323","type":"EOA"},{"address":"0x8A3D6c77E5BAcE8cb0822B28E4Fc56FC06fB5645","type":"EOA"}]},{"name":"Permissioned Data Store","description":"List of relayers authorized to post data commitments to the DA bridge.","accounts":[{"address":"0x2f40D796917ffB642bD2e2bdD2C762A5e40fd749","type":"EOA"},{"address":"0x50Fa427235C7C8cAA4A0C21b5009f5a0d015B23A","type":"EOA"}]},{"name":"Register Operator Manager","description":"Address authorized to register or change status of DA node operators.","accounts":[{"address":"0x207E804758e28F2b3fD6E4219671B327100b82f8","type":"EOA"}]}]},"chain":1,"transactionDataType":{"type":"TransactionData","value":"Transaction data","description":"TODO"},"requiredMembers":9,"membersCount":10,"usedIn":[{"id":"mantle","name":"Mantle","slug":"mantle"}],"risks":{"committeeSecurity":{"type":"NoDiversityCommitteeSecurity","value":"9/10","sentiment":"bad","description":"The committee requires an honest minority (less than 1/3) of members (or the network stake) to prevent the DA bridge from accepting an unavailable data commitment.\n    However, the committee is not diverse enough to prevent a single entity from controlling the majority of the committee.\n    "},"upgradeability":{"type":"LowOrNoDelay","value":"No delay","sentiment":"bad","description":"There is no delay in the upgradeability of the bridge. Users have no time to exit the system before the bridge implementation update is completed."},"relayerFailure":{"type":"NoMechanism","value":"No mechanism","sentiment":"bad","description":"The relayer role is permissioned, and the DA bridge does not have a Security Council or a governance mechanism to propose new relayers. In case of relayer failure, the DA bridge will halt and be unable to recover without the intervention of a centralized entity."}}}],"risks":{"economicSecurity":{"type":"OnChainNotSlashable","value":"No slashing","sentiment":"bad","description":"Although node operators are required to stake  MNT tokens to become members of the DA network, there is no slashing mechanism in place for misbehaving nodes."},"fraudDetection":{"type":"NoFraudDetection","value":"None","sentiment":"bad","description":"There is no fraud detection mechanism in place. A data withholding attack can only be detected by nodes downloading the full data from the DA layer."}}}