{"id":"taiko","createdAt":1680768480,"dataAvailability":[{"layer":{"value":"Ethereum","secondLine":"Blobs or Calldata","sentiment":"good","description":"The data is posted to Ethereum as calldata or blobs."},"bridge":{"value":"Enshrined","sentiment":"good","description":"The validating bridge has access to all the data, as it is posted onchain."},"mode":{"value":"Transaction data"}}],"badges":["EVM","EthereumBlobs","BasedSequencing"],"display":{"reasonsForBeingOther":[{"label":"No proofs","shortDescription":"The proof system isn't fully functional","description":"Projects without a proper proof system fully rely on single entities to safely update the state. A malicious proposer can finalize an invalid state, which can cause loss of funds."}],"name":"Taiko","slug":"taiko","provider":"Taiko","description":"Taiko is an Ethereum-equivalent Optimistic Rollup on the Ethereum network. In the future it aims to add zkVerifier making it a hybrid, optimistic-zk construction. Taiko combines based sequencing and a contestation mechanism with multi-proofs.","purposes":["Universal"],"category":"Optimistic Rollup","links":{"websites":["https://taiko.xyz"],"apps":["https://bridge.taiko.xyz/"],"documentation":["https://docs.taiko.xyz/"],"explorers":["https://taikoscan.io","https://taikoscan.network/"],"repositories":["https://github.com/taikoxyz"],"socialMedia":["https://twitter.com/taikoxyz","https://discord.gg/taikoxyz","https://taiko.mirror.xyz","https://community.taiko.xyz","https://youtube.com/@taikoxyz"],"rollupCodes":"https://rollup.codes/taiko"},"activityDataSource":"Blockchain RPC","liveness":{"explanation":"Taiko is an Optimistic rollup that posts blocks of L2 transaction data directly to the L1. For a transaction to be considered final, both a block and its parent block have to be proven on the L1. State updates are a three step process: first blocks are proposed to L1, then they are proved, and lastly finalized after the challenge period has elapsed."}},"config":{"associatedTokens":["TAIKO"],"escrows":[{"address":"0xd60247c6848B7Ca29eDdF63AA924E53dB6Ddd8EC","sinceTimestamp":1714550603,"tokens":["ETH"],"chain":"ethereum"},{"address":"0x996282cA11E5DEb6B5D122CC3B9A1FcAAD4415Ab","sinceTimestamp":1714550603,"tokens":"*","chain":"ethereum"}],"transactionApi":{"type":"rpc","defaultUrl":"https://rpc.mainnet.taiko.xyz","defaultCallsPerMinute":500,"startBlock":1},"trackedTxs":[{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"functionCall","address":"0x06a9Ab27c7e2255df1815E6CC0168d7755Feb19a","selector":"0xef16e845","functionSignature":"function proposeBlock(bytes _params, bytes _txList) payable returns (tuple(bytes32 l1Hash, bytes32 difficulty, bytes32 blobHash, bytes32 extraData, bytes32 depositsHash, address coinbase, uint64 id, uint32 gasLimit, uint64 timestamp, uint64 l1Height, uint16 minTier, bool blobUsed, bytes32 parentMetaHash, address sender) meta_, tuple(address recipient, uint96 amount, uint64 id)[] deposits_)","sinceTimestamp":1716620627}},{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"functionCall","address":"0x06a9Ab27c7e2255df1815E6CC0168d7755Feb19a","selector":"0x648885fb","functionSignature":"function proposeBlockV2(bytes _params, bytes _txList) returns (tuple meta_)","sinceTimestamp":1730602883}},{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"functionCall","address":"0x06a9Ab27c7e2255df1815E6CC0168d7755Feb19a","selector":"0x0c8f4a10","functionSignature":"function proposeBlocksV2(bytes[] _paramsArr, bytes[] _txListArr) returns (tuple[] metaArr_)","sinceTimestamp":1730602883}},{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0x06a9Ab27c7e2255df1815E6CC0168d7755Feb19a","selector":"0x10d008bd","functionSignature":"function proveBlock(uint64 _blockId, bytes _input)","sinceTimestamp":1716620627}},{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0x06a9Ab27c7e2255df1815E6CC0168d7755Feb19a","selector":"0x440b6e18","functionSignature":"function proveBlocks(uint64[] _blockIds, bytes[] _inputs, bytes _batchProof)","sinceTimestamp":1730602883}}]},"chainConfig":{"name":"taiko","chainId":167000,"explorerUrl":"https://taikoscan.io","explorerApi":{"url":"https://api.taikoscan.io/api","type":"etherscan"},"minTimestampForTvl":1716620627},"type":"layer2","riskView":{"stateValidation":{"description":"A multi-tier proof system is used. The tiers are SGX, ZK (RISC0, SP1), Minority Guardian, and Guardian (highest tier). A higher tier proof can challenge a lower one within the challenge period.\n        The system allows for an invalid state to be finalized by compromised Guardians (the highest tier) and does not enforce ZK proofs.","sentiment":"bad","value":"Multi-proofs","secondLine":"4h challenge period"},"dataAvailability":{"value":"Onchain","description":"All of the data needed for proof construction is published on Ethereum L1.","sentiment":"good","definingMetric":null},"exitWindow":{"description":"There is no window for users to exit in case of an unwanted upgrade since contracts are instantly upgradable.","sentiment":"bad","value":"None"},"sequencerFailure":{"description":"The system uses a based (or L1-sequenced) rollup sequencing mechanism. Users can propose L2 blocks directly on the Taiko L1 contract. The TaikoAdmin multisig can pause block proposals without delay.","sentiment":"good","value":"Self sequence"},"proposerFailure":{"description":"Provers can examine the proposed blocks on the TaikoL1 contract, and generate SGX proofs for them. Currently, any prover providing a valid SGX attestation can register a SGX instance and create proofs for proposed blocks.","sentiment":"good","value":"Self propose"}},"stage":{"stage":"Stage 0","missing":{"nextStage":"Stage 1","requirements":["The proof system is still under development.","Users' withdrawals can be censored by the permissioned operators.","Upgrades executed by actors with more centralized control than a Security Council provide less than 7d for users to exit if the permissioned operator is down or censoring.","The Security Council is not properly set up."]},"summary":[{"stage":"Stage 0","requirements":[{"satisfied":true,"description":"The project calls itself a rollup."},{"satisfied":true,"description":"State roots are posted to Ethereum L1."},{"satisfied":true,"description":"Inputs for the state transition function are posted to Ethereum L1."},{"satisfied":true,"description":"A source-available node exists that can recreate the state from Ethereum L1 data. Please note that the L2BEAT team has not verified the validity of the node source code. [View code](https://github.com/taikoxyz/simple-taiko-node)"}]},{"stage":"Stage 1","requirements":[{"satisfied":false,"description":"The proof system is still under development."},{"satisfied":false,"description":"Users' withdrawals can be censored by the permissioned operators."},{"satisfied":false,"description":"Upgrades executed by actors with more centralized control than a Security Council provide less than 7d for users to exit if the permissioned operator is down or censoring."},{"satisfied":false,"description":"The Security Council is not properly set up."}]},{"stage":"Stage 2","requirements":[{"satisfied":false,"description":"Upgrades unrelated to onchain provable bugs provide less than 30d to exit."},{"satisfied":false,"description":"The Security Council's actions are not confined to onchain provable bugs."}]}]},"technology":{"stateCorrectness":{"name":"Multi-tier proof system","description":"Taiko uses a multi-tier proof system to validate state transitions. There are five tiers: The SGX tier, two ZK tiers with RISC0 and SP1 verifiers, the 1/8 Guardian tier and the 6/8 Guardian tier (from lowest to highest).\n      Since the Guardian tiers are the highest, validity proofs can generally be overwritten by a single Guardian. Consequently, there is no way to force the RISC0 or SP1 tiers.\n      \n      When proposing a batch (containing one or multiple L2 blocks), the proposer is assigned the designated prover role for that batch and is required to deposit a liveness bond (125.0 TAIKO) as a commitment to prove the batch, which will be returned once the batch is proven.\n      The default (lowest) SGX tier has a proving window of 5h, during which only the designated prover can submit the proof for the batch. Once elapsed, proving is open to everyone able to submit SGX proofs and a *validity bond*. The two ZK tiers have a proving window of 7h.\n      \n      After the proof is submitted and during its 4h *cooldown window*, anyone can contest the batch by submitting a *contest bond*. Provers have to submit a *validity bond* as a commitment to win a potential contest.\n      A *validity bond* is TAIKO 150.0 for SGX vs 225.0 for ZK tiers, while a *contest bond* is TAIKO 984.375 for SGX vs. 1476.5625 for the two ZK tiers. \n      For the Minority guardian tier, *validity* and *contest bonds* are set to 225.0 TAIKO and 1476.5625 TAIKO, respectively.\n      \n      It is not required to provide a proof for the batch to submit a contestation. When someone contests, a higher level tier has to step in to prove the contested batch. Decision of the highest tier (currently the 6/8 Guardian) is considered final.\n      If no one challenges the original SGX proof, it finalizes after 4h (the cooldown window).","references":[{"text":"MainnetTierRouter.sol - Etherscan source code, tier ids","href":"https://etherscan.io/address/0x394E30d83d020469a1F8b16E89D7fD5FdB1935b0#code#F1#L26"},{"text":"TaikoL1.sol - Etherscan source code, liveness bond","href":"https://etherscan.io/address/0x394E30d83d020469a1F8b16E89D7fD5FdB1935b0#code"}],"risks":[{"category":"Funds can be stolen if","text":"a malicious block is proven by a compromised SGX instance or approved by Guardians."}]},"dataAvailability":{"name":"All data required for proofs is published on chain","description":"All the data that is used to construct the system state is published on chain in the form of blobs. This ensures that it will be available for enough time.","references":[],"risks":[]},"operator":{"name":"The system uses a based sequencing mechanism","description":"The system uses a based (or L1-sequenced) sequencing mechanism. Anyone can sequence Taiko L2 blocks by proposing them directly on the TaikoL1 contract. \n        The proposer of a block is assigned the designated prover role, and will be the only entity allowed to provide a proof for the block during the initial proving window. \n        Currently, proving a block requires the block proposer to run an SGX instance. Proposing a block also requires depositing a liveness bond as a commitment to proving the block. \n        Unless the block proposer proves the block within the proving window, it will forfeit its liveness bond to the TaikoL1 smart contract.","references":[{"text":"TaikoL1.sol - Etherscan source code, proposeBlock function","href":"https://etherscan.io/address/0xe7c4B445D3C7C8E4D68afb85A068F9fAa18e9A5B#code"}],"risks":[]},"forceTransactions":{"name":"Users can force any transaction","description":"The system is designed to allow users to propose L2 blocks directly on L1. \n        Note that this would require the user to run an SGX instance to prove the block, or forfeit the liveness bond of 125.0 TAIKO.\n        The TaikoAdmin multisig can pause block proposals without delay.","references":[],"risks":[]},"exitMechanisms":[{"name":"Regular exit","description":"The user initiates the withdrawal by submitting a regular transaction on this chain. When the block containing that transaction is finalized the funds become available for withdrawal on L1. Finally the user submits an L1 transaction to claim the funds. This transaction requires a merkle proof.","risks":[],"references":[]}]},"contracts":{"addresses":[{"name":"TaikoL1Contract","isVerified":true,"address":"0x06a9Ab27c7e2255df1815E6CC0168d7755Feb19a","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F"],"implementations":["0xe7c4B445D3C7C8E4D68afb85A068F9fAa18e9A5B"]},"chain":"ethereum","description":"This contract provides functionalities for sequencing, proving, and verifying batches.","upgradableBy":["TaikoAdmin"],"upgradeDelay":"No delay"},{"name":"L1RollupAddressManager","isVerified":true,"address":"0x579f40D0BE111b823962043702cabe6Aaa290780","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F"],"implementations":["0x0079a79E5d8DDA67029051d505E5A11DE279B36D"]},"chain":"ethereum","description":"This contract manages the rollup addresses list, allowing to set the address for a specific chainId-name pair.","upgradableBy":["TaikoAdmin"],"upgradeDelay":"No delay"},{"name":"MainnetTierRouter","isVerified":true,"address":"0x394E30d83d020469a1F8b16E89D7fD5FdB1935b0","chain":"ethereum","description":"Contract managing and routing the multi-tier proof system.","upgradableBy":["TaikoAdmin"],"upgradeDelay":"No delay"},{"name":"SgxVerifier","isVerified":true,"address":"0xb0f3186FC1963f774f52ff455DC86aEdD0b31F81","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F"],"implementations":["0x81DFEA931500cdcf0460e9EC45FA283A6B7f0838"]},"chain":"ethereum","description":"Verifier contract for SGX proven batches.","upgradableBy":["TaikoAdmin"],"upgradeDelay":"No delay"},{"name":"Risc0Verifier","isVerified":true,"address":"0x55902b2D3DF2A65370A89C86Ae9dd71Ecd508edc","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F"],"implementations":["0xefe30A0D56a5804F695f971010597262CAd9A2c3"]},"chain":"ethereum","description":"Verifier contract for ZK-proven batches.","upgradableBy":["TaikoAdmin"],"upgradeDelay":"No delay"},{"name":"SP1Verifier","isVerified":true,"address":"0x5c44f2239925b0d86d2BFEe539f19CD0A08Af452","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F"],"implementations":["0x5f5b83Ca87E2fBc513B800FeD6cCD626536d7219"]},"chain":"ethereum","description":"Verifier contract for ZK-proven batches.","upgradableBy":["TaikoAdmin"],"upgradeDelay":"No delay"},{"name":"GuardianMinorityProver","isVerified":true,"address":"0x579A8d63a2Db646284CBFE31FE5082c9989E985c","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F"],"implementations":["0xB866E9046CAf4D75e2cbCD8b5eA3f07Ea74F7B47"]},"chain":"ethereum","description":"Verifier contract for batches proven by Guardian multisig minority.","upgradableBy":["TaikoAdmin"],"upgradeDelay":"No delay"},{"name":"GuardianProver","isVerified":true,"address":"0xE3D777143Ea25A6E031d1e921F396750885f43aC","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F"],"implementations":["0xB866E9046CAf4D75e2cbCD8b5eA3f07Ea74F7B47"]},"chain":"ethereum","description":"Verifier contract for Guardian multisig proven batches.","upgradableBy":["TaikoAdmin"],"upgradeDelay":"No delay"},{"name":"DAOFallbackProposer","isVerified":true,"address":"0x68d30f47F19c07bCCEf4Ac7FAE2Dc12FCa3e0dC9","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F"],"implementations":["0xd0d3f025D83D7122de7eC43e86331C57c8A4F30B"]},"chain":"ethereum","description":"A contract that holds TAIKO token and acts as a Taiko Labs owned proposer and prover proxy. This contract relays `proveBlock` calls to the TaikoL1 contract so that msg.sender doesn't need to hold any TKO. There are several instances of this contract operated by different entities.","upgradableBy":["TaikoAdmin"],"upgradeDelay":"No delay"},{"name":"SignalService","isVerified":true,"address":"0x9e0a24964e5397B566c1ed39258e21aB5E35C77C","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F"],"implementations":["0x45fed11Ba70D4217545F18E27DDAF7D76Ff499f3"]},"chain":"ethereum","description":"The SignalService contract serves as cross-chain message passing system. It defines methods for sending and verifying signals with merkle proofs.","upgradableBy":["TaikoAdmin"],"upgradeDelay":"No delay"},{"name":"AutomataDcapV3Attestation","isVerified":true,"address":"0x8d7C954960a36a7596d7eA4945dDf891967ca8A3","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F"],"implementations":["0x5f73f0AdC7dAA6134Fe751C4a78d524f9384e0B5"]},"chain":"ethereum","description":"Contract managing SGX attestation certificates.","upgradableBy":["TaikoAdmin"],"upgradeDelay":"No delay"},{"name":"TaikoToken","isVerified":true,"address":"0x10dea67478c5F8C5E2D90e5E9B26dBe60c54d800","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F"],"implementations":["0xcfe803378D79d1180EbF030455040EA6513869dF"]},"chain":"ethereum","description":"Taiko's native token. Used for block proposal rewards, proving bonds and rewards, and contesting bonds.","upgradableBy":["TaikoAdmin"],"upgradeDelay":"No delay"},{"name":"TaikoBridge","isVerified":true,"address":"0xd60247c6848B7Ca29eDdF63AA924E53dB6Ddd8EC","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F"],"implementations":["0x2705B12a971dA766A3f9321a743d61ceAD67dA2F"]},"chain":"ethereum","description":"Shared bridge for Taiko chains for bridged ETH.","upgradableBy":["TaikoAdmin"],"upgradeDelay":"No delay"},{"name":"SharedERC20Vault","isVerified":true,"address":"0x996282cA11E5DEb6B5D122CC3B9A1FcAAD4415Ab","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F"],"implementations":["0xb20C8Ffc2dD49596508d262b6E8B6817e9790E63"]},"chain":"ethereum","description":"Shared vault for Taiko chains for bridged ERC20 tokens.","upgradableBy":["TaikoAdmin"],"upgradeDelay":"No delay"}],"risks":[{"category":"Funds can be stolen if","text":"a contract receives a malicious code upgrade. There is no delay on code upgrades.","isCritical":true}]},"permissions":[{"name":"TaikoAdmin","description":"A Gnosis Safe with 3 / 4 threshold.  Currently also designated as the Security Council. Can upgrade proxies without delay, remove SGX attestation certificates, pause block proposals and block proving, among other permissions.","accounts":[{"address":"0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F","type":"MultiSig"}],"chain":"ethereum","participants":[{"address":"0xb47fE76aC588101BFBdA9E68F66433bA51E8029a","type":"MultiSig"},{"address":"0x7Cdd1c128Cd72dd252f569eeD942735330937F91","type":"EOA"},{"address":"0x3b1D1F89E0b6803174A2dE72e21A6f6f8464d5F1","type":"EOA"},{"address":"0x6B6072CE402F22fDcFbA1705383D8e280717Cb87","type":"EOA"}]},{"name":"GuardianProvers","description":"Guardians can prove blocks on the highest tier. Guardians are selected by the TaikoAdmin multisig. Acts as a 6/8 multisig.","accounts":[{"address":"0x000012dd12a6D9Dd2045f5E2594f4996b99A5d33","type":"EOA"},{"address":"0x0cAC6E2Fd10e92Bf798341Ad0A57b5Cb39DA8D0D","type":"EOA"},{"address":"0xd6BB974bc47626E3547426efa4CA2A8d7DFCccdf","type":"EOA"},{"address":"0xd26c4e85BC2fAAc27a320987e340971cF3b47d51","type":"EOA"},{"address":"0xC384B679c028787166b9B3725aC14A60da205861","type":"EOA"},{"address":"0x1602958A85494cd9C3e0D6672BA0eE42b95B4200","type":"EOA"},{"address":"0x5CfEb9a72256B1b49dc2C98b1b7b99d172D50B68","type":"EOA"},{"address":"0x1DB8Ac9f19AbdD60A6418383BfA56A4450aa80C6","type":"EOA"}]},{"name":"GuardianMinorityProver","description":"Minority guardians can prove blocks on the second highest tier. Guardians are selected by the TaikoAdmin multisig. Acts as a 1/8 multisig.","accounts":[{"address":"0x000012dd12a6D9Dd2045f5E2594f4996b99A5d33","type":"EOA"},{"address":"0x0cAC6E2Fd10e92Bf798341Ad0A57b5Cb39DA8D0D","type":"EOA"},{"address":"0xd6BB974bc47626E3547426efa4CA2A8d7DFCccdf","type":"EOA"},{"address":"0xd26c4e85BC2fAAc27a320987e340971cF3b47d51","type":"EOA"},{"address":"0xC384B679c028787166b9B3725aC14A60da205861","type":"EOA"},{"address":"0x1602958A85494cd9C3e0D6672BA0eE42b95B4200","type":"EOA"},{"address":"0x5CfEb9a72256B1b49dc2C98b1b7b99d172D50B68","type":"EOA"},{"address":"0x1DB8Ac9f19AbdD60A6418383BfA56A4450aa80C6","type":"EOA"}]},{"name":"ChainWatchdog","accounts":[{"address":"0xE3D777143Ea25A6E031d1e921F396750885f43aC","type":"MultiSig"}],"description":"The chain watchdog role can pause proving of blocks."},{"name":"SequencerBlockOne","accounts":[{"address":"0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045","type":"EOA"}],"description":"The authorized sequencer (in Taiko called “proposer”) of block one, hardcoded to vitalik.eth address."}],"milestones":[{"name":"TKO Token Airdrop","link":"https://taiko.mirror.xyz/VSOtILX2DQsc_6IMt5hBT1fEYSH8243pZ8IA_pBfHks","date":"2024-06-05T00:00:00.00Z","description":"TKO token launches.","type":"general"},{"name":"Taiko Mainnet Launch","link":"https://taiko.mirror.xyz/Pizjv30FvjsZUwEG-Da7Gs6F8qeDLc4CKKEBqy3pTt8","date":"2024-05-27T00:00:00.00Z","description":"Taiko is deployed on Ethereum mainnet.","type":"general"},{"name":"Taiko Based Sequencing Upgrade","link":"https://taiko.mirror.xyz/_oKlnpzKSOxGILyy4WlvpUmYEqD7BFxzmRo3XETlJqE","date":"2024-06-06T00:00:00.00Z","description":"Proposing blocks on Taiko is now permissionless.","type":"general"}]}