{"id":"witness-dac-layer","kind":"DAC","type":"DaLayer","systemCategory":"custom","display":{"name":"Witness Chain DAC","slug":"witness","description":"Set of parties responsible for signing and attesting to the availability of data.","links":{"websites":["https://witnesschain.com/"],"apps":["https://witnesschain-bridge.eu-north-2.gateway.fm"],"documentation":["https://docs.witnesschain.com/"],"explorers":["https://witnesschain-blockscout.eu-north-2.gateway.fm/"],"repositories":["https://github.com/witnesschain-com"],"socialMedia":["https://twitter.com/witnesschain","https://discord.gg/HwnzU5CYDp","https://docs.witnesschain.com/resources/technical-papers"]}},"technology":{"description":"\n    ## Architecture\n    ![polygoncdk architecture](/images/da-layer-technology/polygoncdk/architecture2.png#center)\n\n    Polygon CDK validiums utilize a data availability solution that relies on a Data Availability Committee (DAC) to ensure data integrity and manage off-chain transaction data. \n    This architecture comprises the following components:\n    - **Operator**: A trusted entity that collects transactions, computes hash values for the transaction batch, and then requests and collects signatures from Committee members.\n    - **Data Availability Committee (DAC)**: A group of nodes responsible for validating batch data against the hash values provided by the operator (sequencer), ensuring the data accurately represents the transactions.\n    - **PolygonCommittee Contract**: Contract responsible for managing the data committee members list.\n    Each DAC node independently validates the batch data, ensuring it matches the received hash values. \n    Upon successful validation, DAC members store the hash values locally and generate signatures endorsing the batch's integrity. \n    The sequencer collects these signatures and submits the transactions batch hash together with the aggregated signature on Ethereum.\n    The PolygonCommittee contract is used during batch sequencing to verify that the signature posted by the sequencer was signed off by the DAC members stored in the contract.\n    ","references":[{"text":"Polygon CDK Validium Documentation","href":"https://docs.polygon.technology/cdk/architecture/cdk-validium/#data-availability-committee-dac"}]},"bridges":[{"id":"witness-dac-bridge","type":"DAC","usedIn":[{"id":"witness","name":"Witness Chain","slug":"witness"}],"createdAt":1723211933,"contracts":{"addresses":{"ethereum":[{"name":"WitnessValidium","isVerified":true,"address":"0x42Ac57F24EC4C3AAC843f6DBAcd9282DAaeE9238","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x5132A183E9F3CB7C848b0AAC5Ae0c4f0491B7aB2"],"implementations":["0x10D296e8aDd0535be71639E5D1d1c30ae1C6bD4C"]},"chain":"ethereum","description":"The DA bridge and main contract of the WitnessValidium. Contains sequenced transaction batch hashes and signature verification logic for the signed data hash commitment.","upgradableBy":["RollupManager"],"upgradeDelay":"No delay"},{"name":"WitnessValidiumDAC","isVerified":true,"address":"0xB0FD8Ba20B1C178b14Dd2a02f4e72c03fdA626f8","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x8cC10554B5C7D322E6a7F33CBb584c7C5fdBA039"],"implementations":["0xD26B535AD58715C4c2ffFAC32908b13674533DAe"]},"chain":"ethereum","description":"Validium committee contract that allows the admin to setup the members of the committee and stores the required amount of signatures threshold.","upgradableBy":["DACProxyAdminOwner"],"upgradeDelay":"No delay"}]},"risks":[]},"permissions":{"ethereum":[{"name":"Committee Members","description":"List of addresses authorized to sign data commitments for the DA bridge.","accounts":[{"address":"0xcc543F5a2052eDf584216093A0547c4Acd84B80b","type":"EOA"},{"address":"0xef5F06e5C0493601829DacFA23f2fe30303b0166","type":"EOA"}]},{"name":"LocalAdmin","accounts":[{"address":"0xd0676f1Ee81d7C6fe9B0F2EEf9FF74C3E984f94b","type":"EOA"}],"description":"Admin of the WitnessValidium contract, can set core system parameters like replacing the sequencer (relayer), activate forced transactions and update the DA mode."},{"name":"RollupManager","accounts":[{"address":"0x5132A183E9F3CB7C848b0AAC5Ae0c4f0491B7aB2","type":"Contract"}],"description":"The RollupManager can upgrade the DA bridge contract implementation."},{"name":"DACProxyAdminOwner","accounts":[{"address":"0xb8605297399baEb6628C9E8F5D3E52A056492cfe","type":"EOA"}],"description":"Owner of the WitnessValidiumDAC's ProxyAdmin. Can upgrade the DAC members."}]},"chain":1,"requiredMembers":1,"membersCount":2,"transactionDataType":{"type":"TransactionData","value":"Transaction data","description":"TODO"},"display":{"name":"DA Bridge","slug":"dac","description":"Witness Chain DAC on Ethereum.","redWarning":"Only one signer is required to attest to the availability of the data.","links":{"apps":[],"documentation":[],"explorers":[],"repositories":[],"socialMedia":[],"websites":[]}},"technology":{"description":"\n    ## DA Bridge Architecture\n    ![polygoncdk bridge architecture](/images/da-bridge-technology/polygoncdk/architectureL2.png#center)\n    The DA commitments are posted to the L1 through the sequencer inbox, using the inbox as a DA bridge.\n    The DA commitment consists of a data availability message provided as transaction input, made up of a byte array containing the signatures and all the addresses of the committee in ascending order.\n    The sequencer distributes the data and collects signatures from Committee members offchain. Only the DA message is posted by the sequencer to the L1 chain inbox (the DA bridge).\n    A separate contract, the PolygonCommittee contract, is used to manage the committee members list and verify the signatures before accepting the DA commitment.\n    ","risks":[{"category":"Funds can be lost if","text":"a malicious committee signs a data availability attestation for an unavailable transaction batch."},{"category":"Funds can be lost if","text":"the bridge contract or its dependencies receive a malicious code upgrade. There is no delay on code upgrades."}]},"risks":{"committeeSecurity":{"type":"Auto","value":"1/2","sentiment":"bad","description":"The committee does not meet basic security standards, either due to insufficient size, lack of member diversity, or poorly defined threshold parameters. The system lacks an effective DA bridge and it is reliant on the assumption of an honest sequencer, creating significant risks to data integrity and availability."},"upgradeability":{"type":"LowOrNoDelay","value":"No delay","sentiment":"bad","description":"There is no delay in the upgradeability of the bridge. Users have no time to exit the system before the bridge implementation update is completed."},"relayerFailure":{"type":"NoMechanism","value":"No mechanism","sentiment":"bad","description":"The relayer role is permissioned, and the DA bridge does not have a Security Council or a governance mechanism to propose new relayers. In case of relayer failure, the DA bridge will halt and be unable to recover without the intervention of a centralized entity."}}}],"risks":{"economicSecurity":{"type":"Unknown","value":"None","sentiment":"bad","description":"There are no onchain assets at risk of being slashed in case of a data withholding attack, and the committee members are not publicly known."},"fraudDetection":{"type":"NoFraudDetection","value":"None","sentiment":"bad","description":"There is no fraud detection mechanism in place. A data withholding attack can only be detected by nodes downloading the full data from the DA layer."}}}