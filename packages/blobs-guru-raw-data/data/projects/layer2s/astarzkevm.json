{"type":"layer2","addedAt":1690815262,"id":"astarzkevm","capability":"universal","archivedAt":1743465600,"ecosystemInfo":{"id":"agglayer"},"display":{"name":"Astar zkEVM","slug":"astarzkevm","description":"Astar zkEVM is a Validium that leverages Polygon's CDK and zero-knowledge cryptography to enable off-chain transactions while maintaining EVM equivalence.","links":{"websites":["https://astar.network/blog/astar-evolution-phase-1-56"],"documentation":["https://docs.astar.network/docs/learn/zkEVM/"],"explorers":["https://astar-zkevm.explorer.startale.com/"],"repositories":["https://github.com/AstarNetwork"],"socialMedia":["https://twitter.com/AstarNetwork","https://discord.com/invite/astarnetwork","https://youtube.com/@AstarNetwork","https://t.me/PlasmOfficial"]},"upgradesAndGovernanceImage":"polygoncdk","purposes":["Universal"],"architectureImage":"polygon-cdk-validium","stacks":["Agglayer CDK"]},"proofSystem":{"type":"Validity","zkCatalogId":"zkprover"},"config":{"escrows":[{"address":"0x2a3DD3EB832aF982ec71669E178424b10Dca2EDe","sinceTimestamp":1679653127,"tokens":"*","contract":{"isVerified":true,"address":"eth:0x2a3DD3EB832aF982ec71669E178424b10Dca2EDe","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x0F99738B2Fc14D77308337f3e2596b63aE7BCC4A"],"implementations":["eth:0x75D28BfDfF93B3e4f20184b442d2634DC01cA48b"]},"chain":"ethereum"},"chain":"ethereum","includeInTotal":true,"sharedEscrow":{"type":"AggLayer","nativeAsset":"etherPreminted","premintedAmount":"340282366920938463463374607431768211455"}}],"liveness":{"duplicateData":{"from":"stateUpdates","to":"proofSubmissions"}}},"chainConfig":{"name":"astarzkevm","chainId":3776,"explorerUrl":"https://astar-zkevm.explorer.startale.com","sinceTimestamp":1708632059,"multicallContracts":[{"address":"0xcA11bde05977b3631167028862bE2a173976CA11","batchSize":150,"sinceBlock":183817,"version":"3"}],"apis":[],"gasTokens":["ETH"]},"dataAvailability":{"layer":{"value":"DAC","sentiment":"warning","description":"The data is posted off chain and a Data Availability Committee (DAC) is responsible for protecting and supplying it."},"bridge":{"value":"3/5 DAC Members","sentiment":"bad","description":"There is a threshold of 3/5 members that must sign and attest that the data is correct and available.","orderHint":-0.000010000000000000003},"mode":{"value":"Transaction data"}},"riskView":{"stateValidation":{"value":"Validity proofs (ST, SN)","description":"STARKs and SNARKs are zero knowledge proofs that ensure state correctness. STARKs proofs are wrapped in SNARKs proofs for efficiency. SNARKs require a trusted setup.","sentiment":"good","orderHint":null,"secondLine":"No execution delay"},"dataAvailability":{"value":"External (DAC)","description":"Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 3/5 that is tasked with protecting and supplying the data.","sentiment":"bad","orderHint":0.6},"exitWindow":{"value":"None","description":"Even though there is a 3d Timelock for upgrades, forced transactions are disabled.","sentiment":"bad","orderHint":-1,"warning":{"value":"The Security Council can remove the delay on upgrades.","sentiment":"bad"}},"sequencerFailure":{"value":"No mechanism","description":"There is no mechanism to have transactions be included if the sequencer is down or censoring. Although the functionality exists in the code, it is currently disabled.","sentiment":"bad"},"proposerFailure":{"value":"Cannot withdraw","description":"Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen.","sentiment":"bad","orderHint":null}},"stage":{"stage":"NotApplicable"},"technology":{"dataAvailability":{"name":"Data is not stored on chain","description":"The transaction data is not recorded on the Ethereum main chain. Transaction data is stored off-chain and only the hashes are posted onchain by the Sequencer, after being signed by the DAC members.","risks":[{"category":"Funds can be lost if","text":"the external data becomes unavailable.","isCritical":true}],"references":[{"title":"PolygonValidiumStorageMigration.sol - Etherscan source code, sequenceBatchesValidium function","url":"https://etherscan.io/address/0x10D296e8aDd0535be71639E5D1d1c30ae1C6bD4C#code#F1#L126"}]},"operator":{"name":"The system has a centralized sequencer","description":"Only a trusted sequencer is allowed to submit transaction batches. A mechanism for users to submit their own batches is currently disabled.","risks":[{"category":"MEV can be extracted if","text":"the operator exploits their centralized position and frontruns user transactions."},{"category":"Funds can be frozen if","text":"the sequencer refuses to include an exit transaction.","isCritical":true}],"references":[{"title":"Validium.sol - source code, onlyTrustedSequencer modifier","url":"https://etherscan.io/address/0x10D296e8aDd0535be71639E5D1d1c30ae1C6bD4C#code"}]},"forceTransactions":{"name":"Users can't force any transaction","description":"The mechanism for allowing users to submit their own transactions is currently disabled.","risks":[{"category":"Users can be censored if","text":"the operator refuses to include their transactions."}],"references":[{"title":"Validium.sol - source code, forceBatchAddress address","url":"https://etherscan.io/address/0x10D296e8aDd0535be71639E5D1d1c30ae1C6bD4C#code"}]},"exitMechanisms":[{"name":"Regular messaging","description":"The user initiates L2->L1 messages by submitting a regular transaction on this chain. When the block containing that transaction is settled, the message becomes available for processing on L1. ZK proofs are required to settle blocks.","risks":[],"references":[{"title":"PolygonSharedBridge.sol - source code, claimAsset function","url":"https://etherscan.io/address/0x75D28BfDfF93B3e4f20184b442d2634DC01cA48b#code"}]}],"otherConsiderations":[{"name":"Shared bridge and Pessimistic Proofs","description":"Polygon Agglayer uses a shared bridge escrow for Rollups, Validiums and external chains that opt in to participate in interoperability. Each participating chain needs to provide zk proofs to access any assets in the shared bridge. In addition to the full execution proofs that are used for the state validation of Rollups and Validiums, accounting proofs over the bridges state (Polygon calls them 'Pessimistic Proofs') are used by external chains ('cdk-sovereign'). Using the SP1 zkVM by Succinct, projects without a full proof system on Ethereum are able to share the bridge with the zkEVM Agglayer projects.","risks":[{"category":"Funds can be lost if","text":"the accounting proof system for the bridge (pessimistic proofs, SP1) is implemented incorrectly."}],"references":[{"title":"Pessimistic Proof - Polygon Knowledge Layer","url":"https://docs.polygon.technology/learn/agglayer/pessimistic_proof"},{"title":"Etherscan: PolygonRollupManager.sol - verifyPessimisticTrustedAggregator() function","url":"https://etherscan.io/address/0x42B9fF0644741e3353162678596e7D6aA6a13240#code#F1#L1280"}]}]},"stateDerivation":{"nodeSoftware":"Node software can be found [here](https://github.com/0xPolygon/cdk-validium-node).","compressionScheme":"No compression scheme yet.","genesisState":"The genesis state, whose corresponding root is accessible as Batch 0 root in the `getRollupBatchNumToStateRoot` method of PolygonRollupManager, is available [here](https://github.com/0xPolygonHermez/zkevm-contracts/blob/1ad7089d04910c319a257ff4f3674ffd6fc6e64e/tools/addRollupType/genesis.json).","dataFormat":"The trusted sequencer request signatures from DAC members off-chain, and posts hashed batches with signatures to the AstarValidium contract."},"stateValidation":{"description":"Each update to the system state must be accompanied by a ZK proof that ensures that the new state was derived by correctly applying a series of valid user transactions to the previous state. These proofs are then verified on Ethereum by a smart contract.","categories":[{"title":"Prover Architecture","description":"Polygon zkEVM proof system PIL-STARK can be found [here](https://github.com/0xPolygonHermez/pil-stark)."},{"title":"ZK Circuits","description":"Polygon zkEVM circuits are built from PIL (polynomial identity language) and are designed to replicate the behavior of the EVM. The source code can be found [here](https://github.com/0xPolygonHermez/zkevm-rom).","risks":[{"category":"Funds can be lost if","text":"the proof system is implemented incorrectly."}]},{"title":"Verification Keys Generation","description":"SNARK verification keys can be generated and checked against the Ethereum verifier contract using [this guide](https://github.com/0xPolygonHermez/zkevm-contracts/blob/main/verifyMainnetDeployment/verifyMainnetProofVerifier.md). The system requires a trusted setup."},{"title":"Pessimistic Proofs","description":"The pessimistic proofs that are used to prove correct accounting in the Agglayer shared bridge are using the [SP1 zkVM by Succinct](https://github.com/succinctlabs/sp1)."},{"title":"Validity proofs","description":"Each update to the system state must be accompanied by a ZK proof that ensures that the new state was derived by correctly applying a series of valid user transactions to the previous state. These proofs are then verified on Ethereum by a smart contract.","risks":[],"references":[{"title":"PolygonRollupManager.sol - source code, _verifyAndRewardBatches function","url":"https://etherscan.io/address/0x42B9fF0644741e3353162678596e7D6aA6a13240#code"}]}]},"permissions":{"ethereum":{"roles":[{"name":"Sequencer","description":"Allowed to commit transactions from the current layer to the host chain.","accounts":[{"address":"eth:0xA09F1c88C0194Da6b0a1c564CDBEcbF3AAd649E4","type":"EOA","isVerified":true,"name":"0xA09Fâ€¦49E4","url":"https://etherscan.io/address/0xA09F1c88C0194Da6b0a1c564CDBEcbF3AAd649E4"}],"chain":"ethereum","discoveryDrivenData":true},{"name":"Trusted Aggregator (Proposer)","description":"Permissioned to post new state roots and global exit roots accompanied by ZK proofs.","accounts":[{"address":"eth:0x20A53dCb196cD2bcc14Ece01F358f1C849aA51dE","type":"EOA","isVerified":true,"name":"0x20A5â€¦51dE","url":"https://etherscan.io/address/0x20A53dCb196cD2bcc14Ece01F358f1C849aA51dE"},{"address":"eth:0x6329Fe417621925C81c16F9F9a18c203C21Af7ab","type":"EOA","isVerified":true,"name":"0x6329â€¦f7ab","url":"https://etherscan.io/address/0x6329Fe417621925C81c16F9F9a18c203C21Af7ab"}],"chain":"ethereum","discoveryDrivenData":true}],"actors":[{"name":"PolygonAdminMultisig","description":"A Multisig with 5/12 threshold. \n* Can upgrade **with 3d delay**\n  * AggLayerGateway [via: Timelock with 3d delay (no delay if in emergency state) â†’ SharedProxyAdmin]\n  * PolygonSharedBridge [via: Timelock with 3d delay (no delay if in emergency state) â†’ SharedProxyAdmin]\n  * PolygonRollupManager [via: Timelock with 3d delay (no delay if in emergency state) â†’ SharedProxyAdmin]\n  * PolygonGlobalExitRootV2 [via: Timelock with 3d delay (no delay if in emergency state) â†’ SharedProxyAdmin]\n* Can interact with AggLayerGateway\n  * add new routes from proof selector to verifier / pessimisticVkey for pessimistic proofs **with 3d delay** [via: Timelock with 3d delay (no delay if in emergency state)]\n  * add or update default aggchain verification keys (aggchainVkey) for any given selectors \n  * freeze routes from proof selector to verifier / pessimisticVkey for pessimistic proofs \n* Can interact with PolygonSharedBridge\n  * upgrade the implementation of wrapped tokens deployed by the bridge **with 3d delay** [via: Timelock with 3d delay (no delay if in emergency state)]\n* Can interact with PolygonRollupManager\n  * deploy new projects that use predefined rollup types (implementations) and connect them or other Agglayer chains to the PolygonRollupManager \n  * manage all access control roles, add new rollup types (which are implementation contracts that can then be upgraded to by connected projects), update any connected projects to new rollup types, migrate to pessimistic proofs and rollback batches, connect existing rollups to the PolygonRollupManager **with 3d delay** [via: Timelock with 3d delay (no delay if in emergency state)]\n  * manage parameters like fees for all connected projects, set the trusted aggregator, stop the emergency state, update projects and obsolete rollup types \n* Can interact with Timelock\n  * propose, cancel and execute transactions in the timelock, manage all access control roles and change the minimum delay **with 6d delay or with 3d delay** [via: Timelock with 3d delay (no delay if in emergency state) with 3d delay (no delay if in emergency state) - or - acting directly with 3d delay (no delay if in emergency state)]","accounts":[{"address":"eth:0x242daE44F5d8fb54B198D03a94dA45B5a4413e21","type":"Contract","isVerified":true,"name":"0x242dâ€¦3e21","url":"https://etherscan.io/address/0x242daE44F5d8fb54B198D03a94dA45B5a4413e21"}],"chain":"ethereum","references":[],"participants":[{"address":"eth:0xcAB31b6A7b4d2eCd562A09e2BfA46535a18862f9","type":"EOA","isVerified":true,"name":"0xcAB3â€¦62f9","url":"https://etherscan.io/address/0xcAB31b6A7b4d2eCd562A09e2BfA46535a18862f9"},{"address":"eth:0xAb3506507449bF1880f3337825efd19ac89E235E","type":"EOA","isVerified":true,"name":"0xAb35â€¦235E","url":"https://etherscan.io/address/0xAb3506507449bF1880f3337825efd19ac89E235E"},{"address":"eth:0x54c401eD03D086fE13221E5422165f3b024265d9","type":"EOA","isVerified":true,"name":"0x54c4â€¦65d9","url":"https://etherscan.io/address/0x54c401eD03D086fE13221E5422165f3b024265d9"},{"address":"eth:0x21618593F7147235aC8D511d68A547C935F9d417","type":"EOA","isVerified":true,"name":"0x2161â€¦d417","url":"https://etherscan.io/address/0x21618593F7147235aC8D511d68A547C935F9d417"},{"address":"eth:0xED7cC82235A7757702475c8f77c7830c095FB5a2","type":"EOA","isVerified":true,"name":"0xED7câ€¦B5a2","url":"https://etherscan.io/address/0xED7cC82235A7757702475c8f77c7830c095FB5a2"},{"address":"eth:0xdFEd8373695a7b3DaF268CF91e71f6a7024A56Da","type":"EOA","isVerified":true,"name":"0xdFEdâ€¦56Da","url":"https://etherscan.io/address/0xdFEd8373695a7b3DaF268CF91e71f6a7024A56Da"},{"address":"eth:0xffbfc0c8331C5fc912DDA3C6D4A86eEB80203238","type":"EOA","isVerified":true,"name":"0xffbfâ€¦3238","url":"https://etherscan.io/address/0xffbfc0c8331C5fc912DDA3C6D4A86eEB80203238"},{"address":"eth:0xeD44D1CFfB91e163CB7126bdEeA83959f175dB37","type":"EOA","isVerified":true,"name":"0xeD44â€¦dB37","url":"https://etherscan.io/address/0xeD44D1CFfB91e163CB7126bdEeA83959f175dB37"},{"address":"eth:0x516eEcfb38aA308c5f1878497108c7d054fd46B7","type":"EOA","isVerified":true,"name":"0x516eâ€¦46B7","url":"https://etherscan.io/address/0x516eEcfb38aA308c5f1878497108c7d054fd46B7"},{"address":"eth:0x4c1665d6651ecEfa59B9B3041951608468b18891","type":"EOA","isVerified":true,"name":"0x4c16â€¦8891","url":"https://etherscan.io/address/0x4c1665d6651ecEfa59B9B3041951608468b18891"},{"address":"eth:0xA0B02B28920812324f1cC3255bd8840867d3f227","type":"EOA","isVerified":true,"name":"0xA0B0â€¦f227","url":"https://etherscan.io/address/0xA0B02B28920812324f1cC3255bd8840867d3f227"},{"address":"eth:0xEad77b01ea770839F7f576Cd1516Ff6A298d9dB2","type":"EOA","isVerified":true,"name":"0xEad7â€¦9dB2","url":"https://etherscan.io/address/0xEad77b01ea770839F7f576Cd1516Ff6A298d9dB2"}],"discoveryDrivenData":true},{"name":"AstarMultisig","description":"A Multisig with 3/6 threshold. \n* Can upgrade **with no delay**\n  * PolygonDataCommittee [via: ProxyAdmin]\n* Can interact with Validium\n  * set core system parameters like the trusted sequencer and manage forced transactions/batches \n  * sole address that can force batches \n* Can interact with PolygonDataCommittee\n  * manage the members of the data availability committee and the threshold for valid commitments ","accounts":[{"address":"eth:0xf98ee8c46baEa2B11e4f0450AD9D01861265F76E","type":"Contract","isVerified":true,"name":"0xf98eâ€¦F76E","url":"https://etherscan.io/address/0xf98ee8c46baEa2B11e4f0450AD9D01861265F76E"}],"chain":"ethereum","references":[],"participants":[{"address":"eth:0xe4D4fBC6e27B3AE9D881BD9400071FB6c62E4dfa","type":"EOA","isVerified":true,"name":"0xe4D4â€¦4dfa","url":"https://etherscan.io/address/0xe4D4fBC6e27B3AE9D881BD9400071FB6c62E4dfa"},{"address":"eth:0xEc24369A1269171e3cb0A323DD920F99Cb528Fb0","type":"EOA","isVerified":true,"name":"0xEc24â€¦8Fb0","url":"https://etherscan.io/address/0xEc24369A1269171e3cb0A323DD920F99Cb528Fb0"},{"address":"eth:0x127Bae6Fc751dC92111a359500ae91EB437f3dCb","type":"EOA","isVerified":true,"name":"0x127Bâ€¦3dCb","url":"https://etherscan.io/address/0x127Bae6Fc751dC92111a359500ae91EB437f3dCb"},{"address":"eth:0x83cC8195856b0463dEd5f052021009b7985FDa2C","type":"EOA","isVerified":true,"name":"0x83cCâ€¦Da2C","url":"https://etherscan.io/address/0x83cC8195856b0463dEd5f052021009b7985FDa2C"},{"address":"eth:0x4324c3960c7B2567D0C13ba17493bb364c407937","type":"EOA","isVerified":true,"name":"0x4324â€¦7937","url":"https://etherscan.io/address/0x4324c3960c7B2567D0C13ba17493bb364c407937"},{"address":"eth:0x6c4876Ecb5de33f76700f44d547C593065806dAC","type":"Contract","isVerified":true,"name":"GnosisSafe","url":"#GnosisSafe"}],"discoveryDrivenData":true},{"name":"PolygonSecurityCouncil","description":"A Multisig with 6/8 threshold. \n* Can interact with PolygonRollupManager\n  * activate the emergency state in the PolygonRollupManager and in the shared bridge immediately, effectively pausing all projects connected to them and making system contracts instantly upgradable ","accounts":[{"address":"eth:0x37c58Dfa7BF0A165C5AAEdDf3e2EdB475ac6Dcb6","type":"Contract","isVerified":true,"name":"0x37c5â€¦Dcb6","url":"https://etherscan.io/address/0x37c58Dfa7BF0A165C5AAEdDf3e2EdB475ac6Dcb6"}],"chain":"ethereum","references":[],"participants":[{"address":"eth:0xFe45baf0F18c207152A807c1b05926583CFE2e4b","type":"EOA","isVerified":true,"name":"0xFe45â€¦2e4b","url":"https://etherscan.io/address/0xFe45baf0F18c207152A807c1b05926583CFE2e4b"},{"address":"eth:0xaF46a0ddf80DFFB49C87656625E65A37499B261D","type":"EOA","isVerified":true,"name":"0xaF46â€¦261D","url":"https://etherscan.io/address/0xaF46a0ddf80DFFB49C87656625E65A37499B261D"},{"address":"eth:0xBDc235cC9d6Baa641c5ae306bc83962475A5FEFf","type":"EOA","isVerified":true,"name":"0xBDc2â€¦FEFf","url":"https://etherscan.io/address/0xBDc235cC9d6Baa641c5ae306bc83962475A5FEFf"},{"address":"eth:0x4c1665d6651ecEfa59B9B3041951608468b18891","type":"EOA","isVerified":true,"name":"0x4c16â€¦8891","url":"https://etherscan.io/address/0x4c1665d6651ecEfa59B9B3041951608468b18891"},{"address":"eth:0x3ab9f4b964eE665F7CDf1d65f1cEEc6196B0D622","type":"EOA","isVerified":true,"name":"0x3ab9â€¦D622","url":"https://etherscan.io/address/0x3ab9f4b964eE665F7CDf1d65f1cEEc6196B0D622"},{"address":"eth:0x49c15936864690bCd6af0ecaca8E874adFF30E86","type":"EOA","isVerified":true,"name":"0x49c1â€¦0E86","url":"https://etherscan.io/address/0x49c15936864690bCd6af0ecaca8E874adFF30E86"},{"address":"eth:0x9F7dfAb2222A473284205cdDF08a677726d786A0","type":"EOA","isVerified":true,"name":"0x9F7dâ€¦86A0","url":"https://etherscan.io/address/0x9F7dfAb2222A473284205cdDF08a677726d786A0"},{"address":"eth:0x21887c89368bf918346c62460e0c339113801C28","type":"EOA","isVerified":true,"name":"0x2188â€¦1C28","url":"https://etherscan.io/address/0x21887c89368bf918346c62460e0c339113801C28"}],"discoveryDrivenData":true},{"name":"PolygonCreateRollupMultisig","description":"A Multisig with 3/8 threshold. \n* Can interact with PolygonRollupManager\n  * deploy new projects that use predefined rollup types (implementations) and connect them or other Agglayer chains to the PolygonRollupManager ","accounts":[{"address":"eth:0xC74eFc7fdb3BeC9c6930E91FFDF761b160dF79dB","type":"Contract","isVerified":true,"name":"0xC74eâ€¦79dB","url":"https://etherscan.io/address/0xC74eFc7fdb3BeC9c6930E91FFDF761b160dF79dB"}],"chain":"ethereum","references":[],"participants":[{"address":"eth:0xAb3506507449bF1880f3337825efd19ac89E235E","type":"EOA","isVerified":true,"name":"0xAb35â€¦235E","url":"https://etherscan.io/address/0xAb3506507449bF1880f3337825efd19ac89E235E"},{"address":"eth:0x3038B4DBf022E80169b2A068290d4a3A8b87D3b5","type":"EOA","isVerified":true,"name":"0x3038â€¦D3b5","url":"https://etherscan.io/address/0x3038B4DBf022E80169b2A068290d4a3A8b87D3b5"},{"address":"eth:0xa43901c63f7702C407378E55E0d0EB4064a2AE31","type":"EOA","isVerified":true,"name":"0xa439â€¦AE31","url":"https://etherscan.io/address/0xa43901c63f7702C407378E55E0d0EB4064a2AE31"},{"address":"eth:0xD9478f759a13Bfa1d9dAB3cDF5ff0C099d5EfCFC","type":"EOA","isVerified":true,"name":"0xD947â€¦fCFC","url":"https://etherscan.io/address/0xD9478f759a13Bfa1d9dAB3cDF5ff0C099d5EfCFC"},{"address":"eth:0xCE27d8BCee45dB3E457EcF8629264Ca7893AAaAc","type":"EOA","isVerified":true,"name":"0xCE27â€¦AaAc","url":"https://etherscan.io/address/0xCE27d8BCee45dB3E457EcF8629264Ca7893AAaAc"},{"address":"eth:0x0B84d2e66192448B680BBd06813efF9e5923Ca77","type":"EOA","isVerified":true,"name":"0x0B84â€¦Ca77","url":"https://etherscan.io/address/0x0B84d2e66192448B680BBd06813efF9e5923Ca77"},{"address":"eth:0x0185fb2F27f2Acda3e2a6B8530b342333e9f22A6","type":"EOA","isVerified":true,"name":"0x0185â€¦22A6","url":"https://etherscan.io/address/0x0185fb2F27f2Acda3e2a6B8530b342333e9f22A6"},{"address":"eth:0x7316DeD96c4Ff756c74D1D9c4178f6921Aff4496","type":"EOA","isVerified":true,"name":"0x7316â€¦4496","url":"https://etherscan.io/address/0x7316DeD96c4Ff756c74D1D9c4178f6921Aff4496"}],"discoveryDrivenData":true},{"name":"GnosisSafe","description":"A Multisig with 1/3 threshold. \nMember of AstarMultisig.\n","accounts":[{"address":"eth:0x6c4876Ecb5de33f76700f44d547C593065806dAC","type":"Contract","isVerified":true,"name":"0x6c48â€¦6dAC","url":"https://etherscan.io/address/0x6c4876Ecb5de33f76700f44d547C593065806dAC"}],"chain":"ethereum","references":[],"participants":[{"address":"eth:0xEc33045FA66cF43E9b5b9F332dc124dbc71c0917","type":"EOA","isVerified":true,"name":"0xEc33â€¦0917","url":"https://etherscan.io/address/0xEc33045FA66cF43E9b5b9F332dc124dbc71c0917"},{"address":"eth:0x33f9b8ac59814E1A0a59e5d1a6125E5E7AF58BA8","type":"EOA","isVerified":true,"name":"0x33f9â€¦8BA8","url":"https://etherscan.io/address/0x33f9b8ac59814E1A0a59e5d1a6125E5E7AF58BA8"},{"address":"eth:0x2b3Aa0Dc0622eFb9426F5A44015aE9151Bd8224C","type":"EOA","isVerified":true,"name":"0x2b3Aâ€¦224C","url":"https://etherscan.io/address/0x2b3Aa0Dc0622eFb9426F5A44015aE9151Bd8224C"}],"discoveryDrivenData":true}]}},"contracts":{"addresses":{"ethereum":[{"name":"Verifier","isVerified":true,"address":"eth:0x0775e11309d75aA6b0967917fB0213C5673eDf81","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Verifies ZK proofs for state roots of this Layer 2 via the PolygonRollupManager.\n","discoveryDrivenData":true},{"name":"Validium","isVerified":true,"address":"eth:0x1E163594e13030244DCAf4cDfC2cd0ba3206DA80","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x5132A183E9F3CB7C848b0AAC5Ae0c4f0491B7aB2"],"implementations":["eth:0x10D296e8aDd0535be71639E5D1d1c30ae1C6bD4C"]},"chain":"ethereum","description":"The main system contract defining the Astar zkEVM Layer 2 logic. Entry point for sequencing batches.\n* Roles:\n  * **admin**: AstarMultisig\n  * **forceBatchAddress**: AstarMultisig\n  * **trustedSequencer**: EOA 1","discoveryDrivenData":true},{"name":"PolygonDataCommittee","isVerified":true,"address":"eth:0x9CCD205052c732Ac1Df2cf7bf8aACC0E371eE0B0","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x1963D7b78e75A5eDfF9e5376E7A07A935Fb3d50d"],"implementations":["eth:0xF4e87685e323818E0aE35dCdFc3B65106002E456"]},"chain":"ethereum","description":"Manages the members of the data availability committee (DAC) and the threshold for accepting commitments from them (Currently 5/3).\n* Roles:\n  * **admin**: ProxyAdmin; ultimately AstarMultisig\n  * **owner**: AstarMultisig","upgradableBy":[{"name":"AstarMultisig","delay":"no"}],"discoveryDrivenData":true},{"name":"AggLayerGateway","isVerified":true,"address":"eth:0x046Bb8bb98Db4ceCbB2929542686B74b516274b3","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x0F99738B2Fc14D77308337f3e2596b63aE7BCC4A"],"implementations":["eth:0x7bB0e8f1950722694929dB392abA805AAc6e9346"]},"chain":"ethereum","description":"A verifier gateway for pessimistic proofs. Manages a map of chains and their verifier keys and is used to route proofs based on the first 4 bytes of proofBytes data in a proof submission. The SP1 verifier is used for all proofs.\n* Roles:\n  * **addPpRoute**: Timelock; ultimately PolygonAdminMultisig\n  * **admin**: SharedProxyAdmin; ultimately PolygonAdminMultisig\n  * **aggchainDefaultVKey**: PolygonAdminMultisig\n  * **freezePpRoute**: PolygonAdminMultisig","upgradableBy":[{"name":"PolygonAdminMultisig","delay":"3d"}],"discoveryDrivenData":true},{"name":"PolygonSharedBridge","isVerified":true,"address":"eth:0x2a3DD3EB832aF982ec71669E178424b10Dca2EDe","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x0F99738B2Fc14D77308337f3e2596b63aE7BCC4A"],"implementations":["eth:0x75D28BfDfF93B3e4f20184b442d2634DC01cA48b"]},"chain":"ethereum","description":"The shared bridge contract, escrowing user funds sent to Agglayer participants. It is usually mirrored on each chain and can be used to transfer both ERC20 assets and arbitrary messages.\n* Roles:\n  * **admin**: SharedProxyAdmin; ultimately PolygonAdminMultisig\n  * **proxiedTokensManager**: Timelock; ultimately PolygonAdminMultisig","upgradableBy":[{"name":"PolygonAdminMultisig","delay":"3d"}],"discoveryDrivenData":true},{"name":"PolygonRollupManager","isVerified":true,"address":"eth:0x5132A183E9F3CB7C848b0AAC5Ae0c4f0491B7aB2","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x0F99738B2Fc14D77308337f3e2596b63aE7BCC4A"],"implementations":["eth:0x42B9fF0644741e3353162678596e7D6aA6a13240"]},"chain":"ethereum","description":"The central shared managing contract for Polygon Agglayer chains. This contract coordinates chain deployments and proof validation. All connected Layer 2s can be globally paused by activating the 'Emergency State'. This can be done by the PolygonSecurityCouncil or by anyone after 1 week of inactive verifiers.\n* Roles:\n  * **admin**: SharedProxyAdmin; ultimately PolygonAdminMultisig\n  * **createRollup**: PolygonAdminMultisig, PolygonCreateRollupMultisig\n  * **defaultAdmin**: Timelock; ultimately PolygonAdminMultisig\n  * **emergencyCouncilAdmin**: PolygonSecurityCouncil\n  * **trustedAggregator**: EOA 2, EOA 3\n  * **tweakParameters**: PolygonAdminMultisig","upgradableBy":[{"name":"PolygonAdminMultisig","delay":"3d"}],"discoveryDrivenData":true},{"name":"PolygonGlobalExitRootV2","isVerified":true,"address":"eth:0x580bda1e7A0CFAe92Fa7F6c20A3794F169CE3CFb","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x0F99738B2Fc14D77308337f3e2596b63aE7BCC4A"],"implementations":["eth:0xc38C76aE3C8A7dee99d07f1A39246ABe18919a48"]},"chain":"ethereum","description":"A merkle tree storage contract aggregating state roots of each participating Layer 2, thus creating a single global merkle root representing the global state of the Agglayer, the 'global exit root'. The global exit root is synchronized to all connected Layer 2s to help with their interoperability.\n* Roles:\n  * **admin**: SharedProxyAdmin; ultimately PolygonAdminMultisig","upgradableBy":[{"name":"PolygonAdminMultisig","delay":"3d"}],"discoveryDrivenData":true},{"name":"Timelock","isVerified":true,"address":"eth:0xEf1462451C30Ea7aD8555386226059Fe837CA4EF","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"A timelock with access control. In the case of an activated emergency state in the PolygonRollupManager, all transactions through this timelock are immediately executable. The current minimum delay is 3d.\n* Roles:\n  * **timelockAdmin**: PolygonAdminMultisig (no delay if in emergency state), Timelock (no delay if in emergency state); ultimately PolygonAdminMultisig (no delay if in emergency state)","discoveryDrivenData":true},{"name":"ProxyAdmin","isVerified":true,"address":"eth:0x1963D7b78e75A5eDfF9e5376E7A07A935Fb3d50d","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"* Roles:\n  * **owner**: AstarMultisig","discoveryDrivenData":true},{"name":"SP1Verifier","isVerified":true,"address":"eth:0x0459d576A6223fEeA177Fb3DF53C9c77BF84C459","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Verifier contract for SP1 proofs (v5.0.0).\n","discoveryDrivenData":true},{"name":"SharedProxyAdmin","isVerified":true,"address":"eth:0x0F99738B2Fc14D77308337f3e2596b63aE7BCC4A","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"* Roles:\n  * **owner**: Timelock","discoveryDrivenData":true}]},"risks":[{"category":"Funds can be stolen if","text":"a contract receives a malicious code upgrade. There is a 3d delay on code upgrades unless upgrade is initiated by the     PolygonSecurityCouncil in which case there is no delay."}]},"upgradesAndGovernance":"\nThe regular upgrade process for all system contracts (shared and L2-specific) starts at the PolygonAdminMultisig. For the shared contracts, they schedule a transaction that targets the ProxyAdmin via the Timelock, wait for 3d and then execute the upgrade. An upgrade of the Layer 2 specific rollup- or validium contract requires first adding a new rollupType through the Timelock and the RollupManager (defining the new implementation and verifier contracts). Now that the rollupType is created, either the local admin or the PolygonAdminMultisig can immediately upgrade the local system contracts to it.\n\nThe PolygonSecurityCouncil can expedite the upgrade process by declaring an emergency state. This state pauses both the shared bridge and the PolygonRollupManager and allows for instant upgrades through the timelock. Accordingly, instant upgrades for all system contracts are possible with the cooperation of the SecurityCouncil. The emergency state has been activated 1 time(s) since inception.\n\nFurthermore, the PolygonAdminMultisig is permissioned to manage the shared trusted aggregator (proposer and prover) for all participating Layer 2s, deactivate the emergency state, obsolete rolupTypes and manage operational parameters and fees in the PolygonRollupManager directly. The local admin of a specific Layer 2 can manage their chain by choosing the trusted sequencer, manage forced batches and set the data availability config. Creating new Layer 2s (of existing rollupType) is outsourced to the PolygonCreateRollupMultisig but can also be done by the PolygonAdminMultisig. Custom non-shared bridge escrows have their custom upgrade admins listed in the permissions section.","milestones":[{"title":"Astar zkEVM sunsets","url":"https://x.com/AstarNetwork/status/1906658995538194650","date":"2025-03-31","description":"Astar Network has officially sunset.","type":"general"},{"title":"Astar zkEVM Launch","url":"https://astar.network/blog/astars-zkevm-mainnet-is-live-86096","date":"2024-03-06","description":"Astar Network launched Astar zkEVM, integrated with Polygon Agglayer.","type":"general"}],"badges":[{"id":"DAC","type":"DA","name":"Data Availability Committee","description":"There is a Data Availability Committee that provides/attests to data availability","action":{"type":"selfDaHighlight"}},{"id":"Gelato","type":"RaaS","name":"Gelato","description":"This project was deployed via the rollup-as-a-service provider Gelato","action":{"type":"scalingFilter","id":"raas","value":"Gelato"}},{"id":"CDKErigon","type":"Stack","name":"Built on the CDK Erigon stack","description":"The project is built using the multistack Agglayer CDK, and is based on the Erigon stack","action":{"type":"scalingFilter","id":"stack","value":"Agglayer CDK"}},{"id":"Agglayer","type":"Infra","name":"Part of the Agglayer","description":"The project is part of the Agglayer, meaning that it uses the shared Agglayer contracts","action":{"type":"scalingFilter","id":"infrastructure","value":"Agglayer"}},{"id":"EVM","type":"VM","name":"EVM","description":"This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language","action":{"type":"scalingFilter","id":"vm","value":"EVM"}}],"customDa":{"type":"Data Availability Committee","description":"Set of parties responsible for signing and attesting to the availability of data.","dac":{"requiredMembers":3,"membersCount":5},"technology":{"description":"\n## Architecture\n![polygoncdk architecture](/images/da-layer-technology/polygoncdk/architecture5.png#center)\n\nPolygon CDK validiums utilize a data availability solution that relies on a Data Availability Committee (DAC) to ensure data integrity and manage off-chain transaction data. \nThis architecture comprises the following components:\n- **Operator**: A trusted entity that collects transactions, computes hash values for the transaction batch, and then requests and collects signatures from Committee members.\n- **Data Availability Committee (DAC)**: A group of nodes responsible for validating batch data against the hash values provided by the operator (sequencer), ensuring the data accurately represents the transactions.\n- **PolygonCommittee Contract**: Contract responsible for managing the data committee members list.\n\nEach DAC node independently validates the batch data, ensuring it matches the received hash values. \nUpon successful validation, DAC members store the hash values locally and generate signatures endorsing the batch's integrity. \nThe sequencer collects these signatures and submits the transactions batch hash together with the aggregated signature on Ethereum.\nThe PolygonCommittee contract is used during batch sequencing to verify that the signature posted by the sequencer was signed off by the DAC members stored in the contract.\n\n## DA Bridge Architecture\n![polygoncdk bridge architecture](/images/da-bridge-technology/polygoncdk/architectureL2.png#center)\n\nThe DA commitments are posted to the destination chain through the sequencer inbox, using the inbox as a DA bridge.\nThe DA commitment consists of a data availability message provided as transaction input, made up of a byte array containing the signatures and all the addresses of the committee in ascending order.\nThe sequencer distributes the data and collects signatures from Committee members offchain. Only the DA message is posted by the sequencer to the destination chain inbox (the DA bridge).\nA separate contract, the PolygonCommittee contract, is used to manage the committee members list and verify the signatures before accepting the DA commitment.\n    ","risks":[{"category":"Funds can be lost if","text":"a malicious committee signs a data availability attestation for an unavailable transaction batch."},{"category":"Funds can be lost if","text":"the bridge contract or its dependencies receive a malicious code upgrade. There is no delay on code upgrades."}],"references":[{"title":"Polygon CDK Validium Documentation","url":"https://docs.polygon.technology/cdk/architecture/cdk-validium/#data-availability-committee-dac"}]},"risks":{"committeeSecurity":{"value":"3/5","sentiment":"bad","description":"The committee does not meet basic security standards, either due to insufficient size, lack of member diversity, or poorly defined threshold parameters. The system lacks an effective DA bridge and it is reliant on the assumption of an honest sequencer, creating significant risks to data integrity and availability.","orderHint":-0.000010000000000000003},"upgradeability":{"value":"No delay","sentiment":"bad","description":"There is no delay in the upgradeability of the bridge. Users have no time to exit the system before the bridge implementation update is completed."},"relayerFailure":{"value":"No mechanism","sentiment":"bad","description":"The relayer role is permissioned, and the DA bridge does not have a Security Council or a governance mechanism to propose new relayers. In case of relayer failure, the DA bridge will halt and be unable to recover without the intervention of a centralized entity."},"economicSecurity":{"value":{"value":"None","sentiment":"bad","description":"There are no onchain assets at risk of being slashed in case of a data withholding attack, and the committee members are not publicly known."},"adjustSecurityRisk":false},"fraudDetection":{"value":"None","sentiment":"bad","description":"There is no fraud detection mechanism in place. A data withholding attack can only be detected by nodes downloading the full data from the DA layer."}}},"reasonsForBeingOther":[{"label":"Small DAC","shortDescription":"There are less than 5 external actors that can attest data availability","description":"Projects without a sufficiently decentralized data availability committee rely on few entities to safely attest data availability on Ethereum. A small set of entities can collude with the proposer to finalize an unavailable state, which can cause loss of funds."}],"discoveryInfo":{"isDiscoDriven":false,"permissionsDiscoDriven":false,"contractsDiscoDriven":false,"timestampPerChain":{"ethereum":1755782050},"hasDiscoUi":false}}