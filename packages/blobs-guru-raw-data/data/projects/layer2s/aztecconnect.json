{"type":"layer2","id":"aztecconnect","addedAt":1623153328,"archivedAt":1698278400,"capability":"universal","display":{"name":"Zk.Money v2 (Aztec Connect)","slug":"aztecconnect","warning":"EOL: Aztec team shut down their offchain rollup infrastructure on March 31st, 2024. Onchain deposits are disabled and ownership of the rollup contract is irrevocably renounced. Assets in the escrow can be manually withdrawn with the [Aztec Connect Ejector](https://github.com/AztecProtocol/aztec-connect-ejector).","description":"Aztec Connect is an open source layer 2 network that aims to enable affordable, private crypto payments via zero-knowledge proofs.","purposes":["Payments","Privacy"],"links":{"websites":["https://aztec.network/"],"bridges":["https://zk.money"],"documentation":["https://developers.aztec.network/"],"explorers":["https://aztec-connect-prod-explorer.aztec.network/"],"repositories":["https://github.com/AztecProtocol/aztec-connect"],"socialMedia":["https://twitter.com/aztecnetwork","https://medium.com/aztec-protocol","https://t.me/aztecprotocol","https://discord.gg/UDtJr9u"]}},"proofSystem":{"type":"Validity"},"config":{"escrows":[{"address":"0xFF1F2B4ADb9dF6FC8eAFecDcbF96A2B351680455","sinceTimestamp":1654587783,"tokens":["ETH","DAI","wstETH"],"chain":"ethereum"}],"trackedTxs":[{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0xFF1F2B4ADb9dF6FC8eAFecDcbF96A2B351680455","selector":"0xf81cccbe","functionSignature":"function processRollup(bytes ,bytes _signatures)","sinceTimestamp":1654638194,"untilTimestamp":1712696939}}]},"dataAvailability":{"layer":{"value":"Ethereum","secondLine":"Calldata","sentiment":"good","description":"The data is posted to Ethereum as calldata.","projectId":"ethereum"},"bridge":{"value":"Enshrined","sentiment":"good","description":"The validating bridge has access to all the data, as it is posted onchain.","projectId":"ethereum"},"mode":{"value":"State diffs"}},"riskView":{"stateValidation":{"value":"Validity proofs (SN)","description":"SNARKs are succinct zero knowledge proofs that ensure state correctness, but require trusted setup.","sentiment":"good","orderHint":null},"proposerFailure":{"value":"Self propose","description":"If the Proposer fails, users can leverage the source available prover to submit proofs to the L1 bridge.","sentiment":"good"},"dataAvailability":{"value":"Onchain","description":"All of the data needed for proof construction is published on Ethereum L1.","sentiment":"good","orderHint":null},"exitWindow":{"value":"∞","description":"Users can exit funds at any time because contracts are not upgradeable.","sentiment":"good","orderHint":null},"sequencerFailure":{"value":"Self sequence","description":"In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. Proposing new blocks requires creating ZK proofs.","sentiment":"good"}},"stage":{"stage":"Stage 2","summary":[{"stage":"Stage 0","requirements":[{"satisfied":true,"description":"A complete and functional proof system is deployed."},{"satisfied":true,"description":"The project calls itself a rollup."},{"satisfied":true,"description":"State roots are posted to Ethereum L1."},{"satisfied":true,"description":"Inputs for the state transition function are posted to Ethereum L1."},{"satisfied":true,"description":"A source-available node exists that can recreate the state from Ethereum L1 data. Please note that the L2BEAT team has not verified the validity of the node source code. [View code](https://github.com/AztecProtocol/aztec-connect/tree/v2.1)"}]},{"stage":"Stage 1","requirements":[{"satisfied":true,"description":"Users are able to exit without the help of the permissioned operators."},{"satisfied":true,"description":"In case of an unwanted upgrade by actors more centralized than a Security Council, users have at least 7d to exit."}],"principle":{"satisfied":true,"description":"Compromising ≥75% of the Security Council is the only way (other than bugs) for a rollup to indefinitely block an L2→L1 message (e.g. a withdrawal) or push an invalid L2→L1 message (e.g. an invalid withdrawal)."}},{"stage":"Stage 2","requirements":[{"satisfied":true,"description":"Users can exit at any time and the rollup contract is immutable."}]}]},"stateValidation":{"categories":[{"title":"Validity proofs","description":"Each update to the system state must be accompanied by a ZK proof that ensures that the new state was derived by correctly applying a series of valid user transactions to the previous state. These proofs are then verified on Ethereum by a smart contract.","risks":[],"references":[{"title":"RollupProcessorV3.sol#L706 - Etherscan source code","url":"https://etherscan.io/address/0x7d657Ddcf7e2A5fD118dC8A6dDc3dC308AdC2728#code#F1#L706"}]}]},"technology":{"dataAvailability":{"name":"All data required for proofs is published onchain","description":"Since EOL this is only true if the user themself runs the rollup locally and publishes the data.","risks":[],"references":[{"title":"RollupProcessorV3.sol#L686 - Etherscan source code","url":"https://etherscan.io/address/0x7d657Ddcf7e2A5fD118dC8A6dDc3dC308AdC2728#code#F1#L686"}]},"operator":{"name":"No operator","risks":[],"description":"Only specific addresses appointed by the owner were permitted to propose new blocks during regular rollup operation. Now that the system is EOL, the rollup can only be processed locally by volunteers.","references":[{"title":"RollupProcessorV3.sol#L692 - Etherscan source code","url":"https://etherscan.io/address/0x7d657Ddcf7e2A5fD118dC8A6dDc3dC308AdC2728#code#F1#L692"},{"title":"Aztec Connect Ejector - Codespace template for running the Aztec Connect rollup.","url":"https://github.com/AztecProtocol/aztec-connect-ejector"}]},"forceTransactions":{"name":"Users can force any transaction","description":"Because the block production is open to anyone if users experience censorship from the operator they can propose their own blocks which would include their transactions.","risks":[],"references":[]},"exitMechanisms":[{"name":"EOL: Manual withdrawal using Aztec Connect Ejector","description":"EOL: Aztec team announced they are going to shut down the rollup infrastructure on March 31st, 2024. Deposits are disabled and ownership of the rollup contract is irrevocably renounced. Assets in the escrow can be manually withdrawn with the [Aztec Connect Ejector](https://github.com/AztecProtocol/aztec-connect-ejector).","risks":[],"references":[{"title":"Aztec Connect Ejector - Codespace template for running the Aztec Connect rollup.","url":"https://github.com/AztecProtocol/aztec-connect-ejector"}]},{"name":"Regular withdraw (disabled)","description":"The user initiates the withdrawal by submitting a transaction on L2. When the block containing that transaction is proven on L1 the assets are automatically withdrawn to the user.","risks":[],"references":[{"title":"RollupProcessorV3.sol#F1#L1174 - Etherscan source code","url":"https://etherscan.io/address/0x7d657Ddcf7e2A5fD118dC8A6dDc3dC308AdC2728#code#F1#L1174"},{"title":"RollupProcessorV3.sol#F1#L1332 - Etherscan source code","url":"https://etherscan.io/address/0x7d657Ddcf7e2A5fD118dC8A6dDc3dC308AdC2728#code#F1#L1332"}]}],"otherConsiderations":[{"name":"Payments are private","description":"Balances and identities for all tokens on the Aztec rollup are encrypted. Each transaction is encoded as a zkSNARK, protecting user data.","risks":[],"references":[{"title":"Fast Privacy, Now - Aztec Medium Blog","url":"https://medium.com/aztec-protocol/aztec-zkrollup-layer-2-privacy-1978e90ee3b6#3b25"}]}]},"contracts":{"addresses":{"ethereum":[{"name":"RollupProcessorV3","isVerified":true,"address":"eth:0xFF1F2B4ADb9dF6FC8eAFecDcbF96A2B351680455","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0xC5b735d05c26579B701Be9bED253Bb588503B26B"],"implementations":["eth:0x7d657Ddcf7e2A5fD118dC8A6dDc3dC308AdC2728"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1654638194,"transactionHash":"0x837765f53d9ae32bf1b507fec696052d3ee2a245515dccebc13b3717bc987921","implementations":["eth:0x3f972e325CecD99a6be267fd36ceB46DCa7C3F28"]},{"timestamp":1670521103,"transactionHash":"0xe5e9eb537607a7998e112f673812580f7bb0c588a659df1d1a52a7aebc43af7f","implementations":["eth:0x8430Be7B8fd28Cc58EA70A25C9c7A624F26f5D09"]},{"timestamp":1712688155,"transactionHash":"0x540d7db72d3a04eef10b2c57b05382653c1bfb89a4a5bec24873747fa981c68c","implementations":["eth:0x7d657Ddcf7e2A5fD118dC8A6dDc3dC308AdC2728"]}],"description":"Main Rollup contract (immutable) responsible for withdrawals and accepting transaction batches alongside a ZK proof."},{"name":"AztecFeeDistributor","isVerified":true,"address":"eth:0x4cf32670a53657596E641DFCC6d40f01e4d64927","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Contract responsible for distributing fees and reimbursing gas to Rollup Providers."},{"name":"DefiBridgeProxy","isVerified":true,"address":"eth:0xA1BBa894a6D39D79C0D1ef9c68a2139c84B81487","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Bridge Connector to various DeFi Bridges."},{"name":"Verifier28x32","isVerified":true,"address":"eth:0xb7baA1420f88b7758E341c93463426A2b7651CFB","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Standard Plonk zkSNARK Verifier."}]},"risks":[]},"stateDerivation":{"nodeSoftware":"The entire stack's source code is housed in a single monorepo, which can be found [here](https://github.com/AztecProtocol/aztec-connect/). For instructions on running the node, please refer to [this readme](https://github.com/AztecProtocol/aztec-connect/blob/v2.1/yarn-project/README.md). Since EOL the [aztec-connect-ejector](https://github.com/AztecProtocol/aztec-connect-ejector) can be used to run a rollup instance and withdraw.","compressionScheme":"No compression is used.","genesisState":"The genesis file is available [here](https://github.com/AztecProtocol/aztec-connect/blob/v2.1/yarn-project/falafel/src/environment/init/data/mainnet/accounts), and it includes accounts from [zk.money](http://zk.money) as well.","dataFormat":"The code to decode onchain data can be found [here](https://github.com/AztecProtocol/aztec-connect/blob/master/yarn-project/barretenberg.js/src/rollup_proof/rollup_proof_data.ts#L453)"},"milestones":[{"title":"Aztec operator sunset","date":"2024-04-30T00:00:00Z","url":"https://medium.com/aztec-protocol/sunsetting-aztec-connect-a786edce5cae","description":"Aztec stops rollup operators, renouces ownership. Users must run the Rollup manually to withdraw.","type":"general"},{"title":"Mainnet Launch","date":"2022-07-07T00:00:00Z","url":"https://medium.com/aztec-protocol/aztec-network-launches-first-ever-private-defi-solution-for-ethereum-e5ec7624d430","description":"Aztec Connect is live on mainnet, enabling private DeFi on Ethereum.","type":"general"},{"title":"Introducing Noir","date":"2022-10-06T00:00:00Z","url":"https://medium.com/aztec-protocol/introducing-noir-the-universal-language-of-zero-knowledge-ff43f38d86d9","description":"Noir - programming language for zero-knowledge proofs, has been introduced.","type":"general"}],"discoveryInfo":{"isDiscoDriven":false,"permissionsDiscoDriven":false,"contractsDiscoDriven":false,"baseTimestamp":1729849619,"hasDiscoUi":false}}