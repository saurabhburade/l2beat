{"type":"layer2","id":"bobanetwork","addedAt":1632469722,"capability":"universal","display":{"purposes":["Universal"],"architectureImage":"opstack-rollup-superchain-opfp","stacks":["OP Stack"],"name":"Boba Network","shortName":"Boba","slug":"bobanetwork","description":"Boba is an OP stack Optimistic Rollup built by the Enya team as core contributors to the Boba Foundation.","links":{"websites":["https://boba.network"],"documentation":["https://docs.boba.network/"],"explorers":["https://bobascan.com/"],"repositories":["https://github.com/bobanetwork/boba"],"socialMedia":["https://boba.network/","https://boba.network/blog/","https://enya.ai/about-us/","https://twitter.com/bobanetwork","https://t.me/bobanetwork","https://discord.com/invite/Hvu3zpFwWd"]},"liveness":{"warnings":{"stateUpdates":"Please note, for Optimistic rollups the state is not finalized until the challenge period passes."},"explanation":"Boba Network is an Optimistic rollup that posts transaction data to the L1. For a transaction to be considered final, it has to be posted within a tx batch on L1 that links to a previous finalized batch. If the previous batch is missing, transaction finalization can be delayed up to 12h or until it gets published. The state root is settled 7d after it has been posted."}},"chainConfig":{"multicallContracts":[{"address":"0xcA11bde05977b3631167028862bE2a173976CA11","batchSize":150,"sinceBlock":446859,"version":"3"}],"name":"bobanetwork","chainId":288,"explorerUrl":"https://eth.bobascan.com","coingeckoPlatform":"boba","sinceTimestamp":1635393439,"apis":[{"type":"rpc","url":"https://mainnet.boba.network/","callsPerMinute":1500},{"type":"routescan","url":"https://api.routescan.io/v2/network/mainnet/evm/288/etherscan/api/"}],"gasTokens":["ETH"]},"proofSystem":{"type":"Optimistic","name":"OPFP"},"config":{"associatedTokens":["BOBA"],"activityConfig":{"type":"block","startBlock":1,"adjustCount":{"type":"SubtractOneSinceBlock","blockNumber":1149019}},"escrows":[{"address":"0x7B02D13904D8e6E0f0Efaf756aB14Cb0FF21eE7e","sinceTimestamp":1710967859,"tokens":["ETH"],"contract":{"isVerified":true,"address":"eth:0x7B02D13904D8e6E0f0Efaf756aB14Cb0FF21eE7e","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x6e598cec2701FfAA3c06175dc3Af0317a749a0Dc"],"implementations":["eth:0xe2F826324b2faf99E513D16D266c3F80aE87832B"]},"chain":"ethereum","description":"Main entry point for users depositing ETH.","upgradableBy":[{"name":"ProxyAdmin","delay":"no"}]},"chain":"ethereum","includeInTotal":true},{"address":"0xdc1664458d2f0B6090bEa60A8793A4E66c2F1c00","sinceTimestamp":1628793901,"tokens":"*","contract":{"isVerified":true,"address":"eth:0xdc1664458d2f0B6090bEa60A8793A4E66c2F1c00","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x6e598cec2701FfAA3c06175dc3Af0317a749a0Dc"],"implementations":["eth:0x64B5a5Ed26DCb17370Ff4d33a8D503f0fbD06CfF"]},"chain":"ethereum","description":"Main entry point for users depositing ERC20 token that do not require custom gateway.","upgradableBy":[{"name":"ProxyAdmin","delay":"no"}]},"chain":"ethereum","includeInTotal":true}],"daTracking":[{"type":"ethereum","daLayer":"ethereum","sinceBlock":19670770,"inbox":"0xfFF0000000000000000000000000000000000288","sequencers":["0xA4eD58737Fc5C4861C33410c29ECb1E2AF29d960"]}],"trackedTxs":[{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"functionCall","address":"0xfBd2541e316948B259264c02f370eD088E04c3Db","selector":"0xd0f89344","functionSignature":"function appendSequencerBatch()","sinceTimestamp":1635386025,"untilTimestamp":1713303530}},{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"transfer","from":"0xe1B64045351B0B6e9821F19b39f81bc4711D2230","to":"0xfFF0000000000000000000000000000000000288","sinceTimestamp":1713303530,"untilTimestamp":1750959851}},{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0xdE7355C971A5B733fe2133753Abd7e5441d441Ec","selector":"0x8ca5cbb9","functionSignature":"function appendStateBatch(bytes32[] _batch,uint256 _shouldStartAtElement)","sinceTimestamp":1635386294,"untilTimestamp":1713303530}},{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0xbB7aD3f9CCbC94085b7F7B1D5258e59F5F068741","selector":"0x9aaab648","functionSignature":"function proposeL2Output(bytes32 _outputRoot, uint256 _l2BlockNumber, bytes32 _l1Blockhash, uint256 _l1BlockNumber)","sinceTimestamp":1713303530,"untilTimestamp":1750959851}},{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"transfer","from":"0xA4eD58737Fc5C4861C33410c29ECb1E2AF29d960","to":"0xfFF0000000000000000000000000000000000288","sinceTimestamp":1750959851}},{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0xF45a5f1e36fCeA3Cc830A98c6c3C5ceA7d6af852","selector":"0x82ecf2f6","functionSignature":"function create(uint32 _gameType, bytes32 _rootClaim, bytes _extraData) payable returns (address proxy_)","sinceTimestamp":1750959851}}]},"ecosystemInfo":{"id":"superchain","isPartOfSuperchain":false},"technology":{"dataAvailability":{"name":"All data required for proofs is published on chain","description":"All the data that is used to construct the system state is published on chain in the form of cheap blobs or calldata. This ensures that it will be available for enough time.","risks":[],"references":[{"title":"Derivation: Batch submission - OP Mainnet specs","url":"https://github.com/ethereum-optimism/specs/blob/main/specs/protocol/derivation.md#batch-submission"},{"title":"BatchInbox - address","url":"https://etherscan.io/address/0xfFF0000000000000000000000000000000000288#code"},{"title":"OptimismPortal2.sol - source code, depositTransaction function","url":"https://etherscan.io/address/0xe2F826324b2faf99E513D16D266c3F80aE87832B#code"}]},"operator":{"name":"The system has a centralized operator","description":"The operator is the only entity that can propose blocks. A live and trustworthy operator is vital to the health of the system.","risks":[{"category":"MEV can be extracted if","text":"the operator exploits their centralized position and frontruns user transactions."}],"references":[]},"forceTransactions":{"name":"Users can force any transaction","description":"Because the state of the system is based on transactions submitted on the underlying host chain and anyone can submit their transactions there it allows the users to circumvent censorship by interacting with the smart contract on the host chain directly.","risks":[],"references":[{"title":"Sequencing Window - OP Mainnet Specs","url":"https://github.com/ethereum-optimism/optimism/blob/51eeb76efeb32b3df3e978f311188aa29f5e3e94/specs/glossary.md#sequencing-window"},{"title":"OptimismPortal2.sol - source code, depositTransaction function","url":"https://etherscan.io/address/0xe2F826324b2faf99E513D16D266c3F80aE87832B#code"}]},"exitMechanisms":[{"name":"Regular exits","description":"The user initiates the withdrawal by submitting a regular transaction on this chain. When a state root containing such transaction is settled, the funds become available for withdrawal on L1 after 3d 12h. Withdrawal inclusion can be proven before state root settlement, but a 7d period has to pass before it becomes actionable. The process of state root settlement takes a challenge period of at least 3d 12h to complete. Finally the user submits an L1 transaction to claim the funds. This transaction requires a merkle proof.","risks":[],"references":[{"title":"OptimismPortal2.sol - Etherscan source code, proveWithdrawalTransaction function","url":"https://etherscan.io/address/0xe2F826324b2faf99E513D16D266c3F80aE87832B#code"},{"title":"OptimismPortal2.sol - Etherscan source code, finalizeWithdrawalTransaction function","url":"https://etherscan.io/address/0xe2F826324b2faf99E513D16D266c3F80aE87832B#code"}]},{"name":"Forced messaging","description":"If the user experiences censorship from the operator with regular L2->L1 messaging they can submit their messages directly on L1. The system is then obliged to service this request or halt all messages, including forced withdrawals from L1 and regular messages initiated on L2. Once the force operation is submitted and if the request is serviced, the operation follows the flow of a regular message.","risks":[],"references":[{"title":"Forced withdrawal from an OP Stack blockchain","url":"https://docs.optimism.io/stack/transactions/forced-transaction"}]}],"otherConsiderations":[{"name":"EVM compatible smart contracts are supported","description":"OP stack chains are pursuing the EVM Equivalence model. No changes to smart contracts are required regardless of the language they are written in, i.e. anything deployed on L1 can be deployed on L2.","risks":[],"references":[{"title":"Introducing EVM Equivalence","url":"https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306"}]}]},"permissions":{"ethereum":{"roles":[{"name":"Challenger","description":"Allowed to challenge or delete state roots proposed by a Proposer.","accounts":[{"address":"eth:0x67b2426fB1ba42c6168e53E1e40E116A4E963d60","type":"EOA","isVerified":true,"name":"0x67b2â€¦3d60","url":"https://etherscan.io/address/0x67b2426fB1ba42c6168e53E1e40E116A4E963d60"}],"chain":"ethereum","discoveryDrivenData":true},{"name":"Guardian","description":"Allowed to pause withdrawals. In op stack systems with a proof system, the Guardian can also blacklist dispute games and set the respected game type (permissioned / permissionless).","accounts":[{"address":"eth:0x56121a8612474C3eB65D69a3b871f284705b9bC4","type":"Contract","isVerified":true,"name":"Boba Multisig","url":"#Boba Multisig"}],"chain":"ethereum","discoveryDrivenData":true},{"name":"Proposer","description":"Allowed to post new state roots of the current layer to the host chain.","accounts":[{"address":"eth:0xf115011037999B39F0f89A40722AC8887a5f0515","type":"EOA","isVerified":true,"name":"0xf115â€¦0515","url":"https://etherscan.io/address/0xf115011037999B39F0f89A40722AC8887a5f0515"}],"chain":"ethereum","discoveryDrivenData":true},{"name":"Sequencer","description":"Allowed to commit transactions from the current layer to the host chain.","accounts":[{"address":"eth:0xA4eD58737Fc5C4861C33410c29ECb1E2AF29d960","type":"EOA","isVerified":true,"name":"0xA4eDâ€¦d960","url":"https://etherscan.io/address/0xA4eD58737Fc5C4861C33410c29ECb1E2AF29d960"}],"chain":"ethereum","discoveryDrivenData":true}],"actors":[{"name":"Boba Multisig","description":"A Multisig with 2/3 threshold. \n* Can upgrade **with no delay**\n  * SystemConfig [via: ProxyAdmin]\n  * OptimismMintableERC20Factory [via: ProxyAdmin]\n  * DelayedWETH [via: ProxyAdmin]\n  * L1CrossDomainMessenger [via: ProxyAdmin]\n  * OptimismPortal2 [via: ProxyAdmin]\n  * SuperchainConfig [via: ProxyAdmin]\n  * L1ERC721Bridge [via: ProxyAdmin]\n  * AnchorStateRegistry [via: ProxyAdmin]\n  * L1StandardBridge [via: ProxyAdmin]\n  * DisputeGameFactory [via: ProxyAdmin]\n* Can interact with SystemConfig\n  * it can update the preconfer address, the batch submitter (Sequencer) address and the gas configuration of the system \n* Can interact with DelayedWETH\n  * can pull funds from the contract in case of emergency \n* Can interact with AddressManager\n  * set and change address mappings [via: ProxyAdmin]\n* A Guardian - acting directly","accounts":[{"address":"eth:0x56121a8612474C3eB65D69a3b871f284705b9bC4","type":"Contract","isVerified":true,"name":"0x5612â€¦9bC4","url":"https://etherscan.io/address/0x56121a8612474C3eB65D69a3b871f284705b9bC4"}],"chain":"ethereum","references":[],"participants":[{"address":"eth:0xCCDEbe62f7378D5A931970A847cdf1EcFfc71C63","type":"EOA","isVerified":true,"name":"0xCCDEâ€¦1C63","url":"https://etherscan.io/address/0xCCDEbe62f7378D5A931970A847cdf1EcFfc71C63"},{"address":"eth:0x6976498e37E4941E167161fC3BC5191EEDc302ab","type":"EOA","isVerified":true,"name":"0x6976â€¦02ab","url":"https://etherscan.io/address/0x6976498e37E4941E167161fC3BC5191EEDc302ab"},{"address":"eth:0x33A0B6C2Bd60A592C5e91dCCd5E5f403693F0AC1","type":"EOA","isVerified":true,"name":"0x33A0â€¦0AC1","url":"https://etherscan.io/address/0x33A0B6C2Bd60A592C5e91dCCd5E5f403693F0AC1"}],"discoveryDrivenData":true}]}},"contracts":{"addresses":{"ethereum":[{"name":"SystemConfig","isVerified":true,"address":"eth:0x158Fd5715F16Ac1F2Dc959A299B383aAaf9B59EB","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x6e598cec2701FfAA3c06175dc3Af0317a749a0Dc"],"implementations":["eth:0xAB9d6cB7A427c0765163A7f45BB91cAfe5f2D375"]},"chain":"ethereum","description":"Contains configuration parameters such as the Sequencer address, gas limit on this chain and the unsafe block signer address.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Boba Multisig\n  * **batcherHash**: EOA 1\n  * **owner**: Boba Multisig","upgradableBy":[{"name":"Boba Multisig","delay":"no"}],"discoveryDrivenData":true},{"name":"OptimismPortal2","isVerified":true,"address":"eth:0x7B02D13904D8e6E0f0Efaf756aB14Cb0FF21eE7e","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x6e598cec2701FfAA3c06175dc3Af0317a749a0Dc"],"implementations":["eth:0xe2F826324b2faf99E513D16D266c3F80aE87832B"]},"chain":"ethereum","description":"The OptimismPortal contract is the main entry point to deposit funds from L1 to L2. It also allows to prove and finalize withdrawals. It specifies which game type can be used for withdrawals, which currently is the PermissionedDisputeGame.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Boba Multisig","upgradableBy":[{"name":"Boba Multisig","delay":"no"}],"discoveryDrivenData":true},{"name":"DisputeGameFactory","isVerified":true,"address":"eth:0xF45a5f1e36fCeA3Cc830A98c6c3C5ceA7d6af852","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x6e598cec2701FfAA3c06175dc3Af0317a749a0Dc"],"implementations":["eth:0xc641A33cab81C559F2bd4b21EA34C290E2440C2B"]},"chain":"ethereum","description":"The dispute game factory allows the creation of dispute games, used to propose state roots and eventually challenge them.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Boba Multisig","upgradableBy":[{"name":"Boba Multisig","delay":"no"}],"discoveryDrivenData":true},{"name":"SuperchainConfig","isVerified":true,"address":"eth:0x996ffD627901f10C80A7d4B72A12316D2e77c076","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x6e598cec2701FfAA3c06175dc3Af0317a749a0Dc"],"implementations":["eth:0xe4e0f760409EB1661db76a4365c0803C3630270f"]},"chain":"ethereum","description":"This is NOT the shared SuperchainConfig contract of the OP stack Superchain but rather a local fork. It manages the `PAUSED_SLOT`, a boolean value indicating whether the local chain is paused, and `GUARDIAN_SLOT`, the address of the guardian which can pause and unpause the system.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Boba Multisig\n  * **guardian**: Boba Multisig","upgradableBy":[{"name":"Boba Multisig","delay":"no"}],"discoveryDrivenData":true},{"name":"L1CrossDomainMessenger","isVerified":true,"address":"eth:0x6D4528d192dB72E282265D6092F4B872f9Dff69e","upgradeability":{"proxyType":"resolved delegate proxy","admins":["eth:0x6e598cec2701FfAA3c06175dc3Af0317a749a0Dc"],"implementations":["eth:0xD3494713A5cfaD3F5359379DfA074E2Ac8C6Fd65"],"immutable":false},"chain":"ethereum","description":"Sends messages from host chain to this chain, and relays messages back onto host chain. In the event that a message sent from host chain to this chain is rejected for exceeding this chain's epoch gas limit, it can be resubmitted via this contract's replay function.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Boba Multisig","upgradableBy":[{"name":"Boba Multisig","delay":"no"}],"discoveryDrivenData":true},{"name":"L1ERC721Bridge","isVerified":true,"address":"eth:0xA6Ad22bb0E73DEF40a24E510cFbc93807d8bf87e","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x6e598cec2701FfAA3c06175dc3Af0317a749a0Dc"],"implementations":["eth:0xAE2AF01232a6c4a4d3012C5eC5b1b35059caF10d"]},"chain":"ethereum","description":"Used to bridge ERC-721 tokens from host chain to this chain.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Boba Multisig","upgradableBy":[{"name":"Boba Multisig","delay":"no"}],"discoveryDrivenData":true},{"name":"L1StandardBridge","isVerified":true,"address":"eth:0xdc1664458d2f0B6090bEa60A8793A4E66c2F1c00","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x6e598cec2701FfAA3c06175dc3Af0317a749a0Dc"],"implementations":["eth:0x64B5a5Ed26DCb17370Ff4d33a8D503f0fbD06CfF"]},"chain":"ethereum","description":"The main entry point to deposit ERC20 tokens from host chain to this chain.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Boba Multisig","upgradableBy":[{"name":"Boba Multisig","delay":"no"}],"discoveryDrivenData":true},{"name":"OptimismMintableERC20Factory","isVerified":true,"address":"eth:0x4d898F66327Fa050131A17ed17a39EBeCC81f0c3","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x6e598cec2701FfAA3c06175dc3Af0317a749a0Dc"],"implementations":["eth:0xE01efbeb1089D1d1dB9c6c8b135C934C0734c846"]},"chain":"ethereum","description":"A helper contract that generates OptimismMintableERC20 contracts on the network it's deployed to. OptimismMintableERC20 is a standard extension of the base ERC20 token contract designed to allow the L1StandardBridge contracts to mint and burn tokens. This makes it possible to use an OptimismMintableERC20 as this chain's representation of a token on the host chain, or vice-versa.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Boba Multisig","upgradableBy":[{"name":"Boba Multisig","delay":"no"}],"discoveryDrivenData":true},{"name":"DelayedWETH","isVerified":true,"address":"eth:0x4e27966e7D3727bE584d32081fc341321B047bF6","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x6e598cec2701FfAA3c06175dc3Af0317a749a0Dc"],"implementations":["eth:0x71e966Ae981d1ce531a7b6d23DC0f27B38409087"]},"chain":"ethereum","description":"Contract designed to hold the bonded ETH for each game. It is designed as a wrapper around WETH to allow an owner to function as a backstop if a game would incorrectly distribute funds.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Boba Multisig\n  * **owner**: Boba Multisig","upgradableBy":[{"name":"Boba Multisig","delay":"no"}],"discoveryDrivenData":true},{"name":"MIPS","isVerified":true,"address":"eth:0x5fE03a12C1236F9C22Cb6479778DDAa4bce6299C","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"The MIPS contract is used to execute the final step of the dispute game which objectively determines the winner of the dispute.\n","discoveryDrivenData":true},{"name":"ProxyAdmin","isVerified":true,"address":"eth:0x6e598cec2701FfAA3c06175dc3Af0317a749a0Dc","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"* Roles:\n  * **owner**: Boba Multisig","discoveryDrivenData":true},{"name":"PermissionedDisputeGame","isVerified":true,"address":"eth:0x97e8B3e46a251A657A56CEe8c24E4C0F1864be64","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Same as FaultDisputeGame, but only two permissioned addresses are designated as proposer and challenger.\n* Roles:\n  * **challenger**: EOA 2\n  * **proposer**: EOA 3","discoveryDrivenData":true},{"name":"PreimageOracle","isVerified":true,"address":"eth:0x9c065e11870B891D214Bc2Da7EF1f9DDFA1BE277","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"The PreimageOracle contract is used to load the required data from L1 for a dispute game.\n","discoveryDrivenData":true},{"name":"AnchorStateRegistry","isVerified":true,"address":"eth:0xd50395Fd129A40B77119b2994d285Ef1919D7Ac7","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x6e598cec2701FfAA3c06175dc3Af0317a749a0Dc"],"implementations":["eth:0xBa1e2e95e42c815477e97539F8d4D7f0352506C5"]},"chain":"ethereum","description":"Contains the latest confirmed state root that can be used as a starting point in a dispute game.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Boba Multisig","upgradableBy":[{"name":"Boba Multisig","delay":"no"}],"discoveryDrivenData":true}]},"risks":[{"category":"Funds can be stolen if","text":"a contract receives a malicious code upgrade. There is no delay on code upgrades.","isCritical":true}]},"milestones":[{"title":"Boba Anchorage Upgrade","date":"2024-04-16T00:00:00Z","url":"https://forum.boba.network/t/upgrade-boba-network-to-the-anchorage-framework/442","description":"Boba upgrades to Bedrock (OP Stack) and to EIP-4844 data blobs for L1 data availability.","type":"general"},{"title":"Boba launches L2 on BNB","date":"2022-11-01T00:00:00Z","url":"https://boba.network/education/multichain/bobabnb/","description":"Boba launches on BnB.","type":"general"},{"title":"Boba launches L2 on Avalanche","date":"2022-09-21T00:00:00Z","url":"https://medium.com/avalancheavax/boba-launches-the-first-l2-on-avalanche-107d9166dc06","description":"Boba launches on Avalanche.","type":"general"},{"title":"Boba launches L2 on Moonbeam and Fantom","date":"2022-06-02T00:00:00Z","url":"https://boba.network/education/boba-basics/multichain/","description":"Boba launches on Moonbeam and Fantom.","type":"general"},{"title":"Call data compression","date":"2022-10-08T00:00:00Z","url":"https://boba.network/blog/boba-call-data-compression/","description":"The Boba Tree From (v0.1.0) release introduces Brotli compression for call data.","type":"general"},{"title":"Hybrid Compute","date":"2022-03-18T00:00:00Z","url":"https://boba.network/education/boba-basics/hybrid-compute/","description":"Boba's proprietary technology enables dApps that trigger code executed on web-scale infrastructure.","type":"general"},{"title":"Mainnet Launch","date":"2021-09-20T00:00:00Z","url":"https://www.firstraysvc.com/news/enya-launches-mainnet-beta-boba-network","description":"Layer 2 Optimistic Rollup based on the Optimism codebase is live on Ethereum.","type":"general"},{"title":"BOBA Token launched","date":"2021-11-18T00:00:00Z","url":"https://x.com/bobanetwork/status/1461839296785051648","description":"BOBA token launched by OMG Foundation.","type":"general"}],"badges":[{"id":"OPStack","type":"Stack","name":"Built on OP Stack","description":"The project is built on the OP Stack","action":{"type":"scalingFilter","id":"stack","value":"OP Stack"}},{"id":"EthereumBlobs","type":"DA","name":"Ethereum with blobs","description":"This project is posting its data to Ethereum as blobs","action":{"type":"publicDaHighlight","slug":"ethereum"}},{"id":"EVM","type":"VM","name":"EVM","description":"This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language","action":{"type":"scalingFilter","id":"vm","value":"EVM"}}],"reasonsForBeingOther":[{"label":"Closed proofs","shortDescription":"There are less than 5 external actors that can submit challenges","description":"Projects without a sufficiently decentralized set of challengers rely on few entities to safely update the state. A small set of challengers can collude with the proposer to finalize an invalid state, which can cause loss of funds."}],"stateValidation":{"description":"Updates to the system state can be proposed and challenged by permissioned operators only. If a state root passes the challenge period, it is optimistically considered correct and made actionable for withdrawals.","categories":[{"title":"State root proposals","description":"Proposers submit state roots as children of the latest confirmed state root (called anchor state), by calling the `create` function in the DisputeGameFactory. A state root can have multiple conflicting children. Each proposal requires a stake, currently set to 0.0 ETH, that can be slashed if the proposal is proven incorrect via a fraud proof. Stakes can be withdrawn only after the proposal has been confirmed. A state root gets confirmed if the challenge period has passed and it is not countered.","references":[{"title":"OP stack specification: Fault Dispute Game","url":"https://specs.optimism.io/fault-proof/stage-one/fault-dispute-game.html#fault-dispute-game"}]},{"title":"Challenges","description":"Challenges are opened to disprove invalid state roots using bisection games. Each bisection move requires a stake that increases expontentially with the depth of the bisection, with a factor of 1.09493. The maximum depth is 73, and reaching it therefore requires a cumulative stake of 0.00 ETH from depth 0. Actors can participate in any challenge by calling the `defend` or `attack` functions, depending whether they agree or disagree with the latest claim and want to move the bisection game forward. Actors that disagree with the top-level claim are called challengers, and actors that agree are called defenders. Each actor might be involved in multiple (sub-)challenges at the same time, meaning that the protocol operates with [full concurrency](https://medium.com/l2beat/fraud-proof-wars-b0cb4d0f452a). Challengers and defenders alternate in the bisection game, and they pass each other a clock that starts with 3d 12h. If a clock expires, the claim is considered defeated if it was countered, or it gets confirmed if uncountered. Since honest parties can inherit clocks from malicious parties that play both as challengers and defenders (see [freeloader claims](https://specs.optimism.io/fault-proof/stage-one/fault-dispute-game.html#freeloader-claims)), if a clock gets inherited with less than 3h, it generally gets extended by 3h with the exception of 6h right before depth 30, and 1d right before the last depth. The maximum clock extension that a top level claim can get is therefore 10d. Since unconfirmed state roots are independent of one another, users can decide to exit with a subsequent confirmed state root if the previous one is delayed. Winners get the entire losers' stake, meaning that sybils can potentially play against each other at no cost. The final instruction found via the bisection game is then executed onchain in the MIPS one step prover contract who determines the winner. The protocol does not enforce valid bisections, meaning that actors can propose correct initial claims and then provide incorrect midpoints. The protocol can be subject to resource exhaustion attacks ([Spearbit 5.1.3](https://github.com/ethereum-optimism/optimism/blob/develop/docs/security-reviews/2024_08_Fault-Proofs-No-MIPS_Spearbit.pdf)).","references":[{"title":"Fraud Proof Wars: OPFP","url":"https://medium.com/l2beat/fraud-proof-wars-b0cb4d0f452a"}]}]},"riskView":{"stateValidation":{"value":"Fraud proofs (INT)","description":"Fraud proofs allow actors watching the chain to prove that the state is incorrect. Interactive proofs (INT) require multiple transactions over time to resolve. Only one entity is currently allowed to propose and submit challenges, as only permissioned games are currently allowed.","executionDelay":302400,"challengeDelay":302400,"sentiment":"bad","orderHint":null},"exitWindow":{"value":"None","description":"There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable.","sentiment":"bad","orderHint":-604800},"proposerFailure":{"value":"Cannot withdraw","description":"Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen.","sentiment":"bad","orderHint":null},"dataAvailability":{"value":"Onchain","description":"All of the data needed for proof construction is published on Ethereum L1.","sentiment":"good","orderHint":null},"sequencerFailure":{"value":"Self sequence","description":"In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation.","sentiment":"good","orderHint":43200,"secondLine":"12h delay"}},"stage":{"stage":"Stage 0","missing":{"nextStage":"Stage 1","requirements":["Users' withdrawals can be censored by the permissioned operators.","Upgrades executed by actors with more centralized control than a Security Council provide less than 7d for users to exit if the permissioned operator is down or censoring."],"principle":"Compromising â‰¥75% of the Security Council should be the only way (other than bugs) for a rollup to indefinitely block an L2â†’L1 message (e.g. a withdrawal) or push an invalid L2â†’L1 message (e.g. an invalid withdrawal)."},"summary":[{"stage":"Stage 0","requirements":[{"satisfied":true,"description":"A complete and functional proof system is deployed."},{"satisfied":false,"description":"Fraud proof submission is not sufficiently decentralized."},{"satisfied":true,"description":"The project calls itself a rollup."},{"satisfied":true,"description":"State roots are posted to Ethereum L1."},{"satisfied":true,"description":"Inputs for the state transition function are posted to Ethereum L1."},{"satisfied":"UnderReview","description":"A source-available node exists that can recreate the state from Ethereum L1 data. Please note that the L2BEAT team has not verified the validity of the node source code."}]},{"stage":"Stage 1","requirements":[{"satisfied":false,"description":"Users' withdrawals can be censored by the permissioned operators."},{"satisfied":false,"description":"Upgrades executed by actors with more centralized control than a Security Council provide less than 7d for users to exit if the permissioned operator is down or censoring."}],"principle":{"satisfied":false,"description":"Compromising â‰¥75% of the Security Council should be the only way (other than bugs) for a rollup to indefinitely block an L2â†’L1 message (e.g. a withdrawal) or push an invalid L2â†’L1 message (e.g. an invalid withdrawal)."}},{"stage":"Stage 2","requirements":[{"satisfied":false,"description":"Fraud proof submission is open only to whitelisted actors."},{"satisfied":false,"description":"Upgrades unrelated to onchain provable bugs provide less than 30d to exit."},{"satisfied":false,"description":"The Security Council's actions are not confined to onchain provable bugs."}]}],"message":{"type":"underReview","text":"The requirement for available node software is under review"}},"dataAvailability":{"layer":{"value":"Ethereum","secondLine":"Blobs or Calldata","sentiment":"good","description":"The data is posted to Ethereum as calldata or blobs.","projectId":"ethereum"},"bridge":{"value":"Enshrined","sentiment":"good","description":"The validating bridge has access to all the data, as it is posted onchain.","projectId":"ethereum"},"mode":{"value":"Transaction data","secondLine":"Compressed"}},"discoveryInfo":{"isDiscoDriven":false,"permissionsDiscoDriven":false,"contractsDiscoDriven":false,"timestampPerChain":{"ethereum":1751366039},"hasDiscoUi":false}}