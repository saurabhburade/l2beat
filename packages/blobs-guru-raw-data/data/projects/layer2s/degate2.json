{"type":"layer2","id":"degate2","capability":"appchain","addedAt":1684838286,"archivedAt":1700524800,"badges":[{"id":"AppChain","type":"VM","name":"Application-specific chain","description":"This project is built to operate a specific application","action":{"type":"scalingFilter","id":"vm","value":"AppChain"}},{"id":"EthereumCalldata","type":"DA","name":"Ethereum with calldata","description":"This project is posting its data to Ethereum as calldata","action":{"type":"publicDaHighlight","slug":"ethereum"}},{"id":"LoopringFork","type":"Fork","name":"Fork of Loopring","description":"The project is fork of Loopring","action":{"type":"scalingFilter","id":"stack","value":"Loopring"}}],"display":{"name":"DeGate V1 Legacy","slug":"degate2","headerWarning":"This project is in shutdown mode and no longer active.","description":"DeGate is an app-specific ZK Rollup that enables a trustless, fast and low-fee decentralized order book exchange, helping users to trade easy and sleep easy. DeGate smart contracts are forked from Loopring V3.","purposes":["Exchange"],"stacks":["Loopring"],"links":{"websites":["https://degate.com/"],"bridges":["https://app.degate.com/"],"documentation":["https://docs.degate.com/"],"repositories":["https://github.com/degatedev/protocols"],"socialMedia":["https://twitter.com/DeGateDex","https://discord.gg/degate","https://youtube.com/@degatedex1718","https://medium.com/degate","https://mirror.xyz/0x078a601f492043C8e7D0E15B0F8815f58b4c342f"]}},"proofSystem":{"type":"Validity"},"config":{"associatedTokens":["DG"],"escrows":[{"address":"0xF13e21653AEB763595D5E4baA1dC115689Da49b9","sinceTimestamp":1693304807,"tokens":"*","contract":{"isVerified":true,"address":"eth:0xF13e21653AEB763595D5E4baA1dC115689Da49b9","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum"},"chain":"ethereum","includeInTotal":true}],"trackedTxs":[{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0x2CFd271e9b4d0344Fd2Aa0cb1ffd4f6b85c0B215","selector":"0x377bb770","functionSignature":"function submitBlocks(bool isDataCompressed,bytes data)","sinceTimestamp":1693304819,"untilTimestamp":1699766508}}]},"dataAvailability":{"layer":{"value":"Ethereum","secondLine":"Calldata","sentiment":"good","description":"The data is posted to Ethereum as calldata.","projectId":"ethereum"},"bridge":{"value":"Enshrined","sentiment":"good","description":"The validating bridge has access to all the data, as it is posted onchain.","projectId":"ethereum"},"mode":{"value":"State diffs"}},"riskView":{"stateValidation":{"value":"Validity proofs (SN)","description":"SNARKs are succinct zero knowledge proofs that ensure state correctness, but require trusted setup.","sentiment":"good","orderHint":null},"dataAvailability":{"value":"Onchain","description":"All of the data needed for proof construction is published on Ethereum L1.","sentiment":"good","orderHint":null},"exitWindow":{"value":"∞","description":"Users can exit funds at any time because contracts are not upgradeable.","sentiment":"good","orderHint":null},"sequencerFailure":{"value":"Force via L1","description":"Users can force the sequencer to include a withdrawal transaction by submitting a request through L1 with a 0.01 ETH fee. If the sequencer is down for more than 15d, users can use the exit hatch to withdraw their funds. The sequencer can censor individual deposits, but in such case after 15d users can get their funds back.","sentiment":"good","orderHint":1296000},"proposerFailure":{"value":"Use escape hatch","description":"Users are able to trustlessly exit by submitting a Merkle proof of funds.","sentiment":"good","orderHint":null}},"stage":{"stage":"Stage 2","summary":[{"stage":"Stage 0","requirements":[{"satisfied":true,"description":"A complete and functional proof system is deployed."},{"satisfied":true,"description":"The project calls itself a rollup."},{"satisfied":true,"description":"State roots are posted to Ethereum L1."},{"satisfied":true,"description":"Inputs for the state transition function are posted to Ethereum L1."},{"satisfied":"UnderReview","description":"A source-available node exists that can recreate the state from Ethereum L1 data. Please note that the L2BEAT team has not verified the validity of the node source code."}]},{"stage":"Stage 1","requirements":[{"satisfied":true,"description":"Users are able to exit without the help of the permissioned operators."}],"principle":{"satisfied":true,"description":"Compromising ≥75% of the Security Council is the only way (other than bugs) for a rollup to indefinitely block an L2→L1 message (e.g. a withdrawal) or push an invalid L2→L1 message (e.g. an invalid withdrawal) with a <7d exit window."}},{"stage":"Stage 2","requirements":[{"satisfied":true,"description":"Users have at least 30d to exit as the system cannot be upgraded."}]}],"message":{"type":"underReview","text":"The requirement for available node software is under review"}},"stateValidation":{"categories":[{"title":"Validity proofs","description":"Each update to the system state must be accompanied by a ZK proof that ensures that the new state was derived by correctly applying a series of valid user transactions to the previous state. These proofs are then verified on Ethereum by a smart contract.","risks":[],"references":[{"title":"Operator - DeGate design doc","url":"https://github.com/degatedev/protocols/blob/degate_mainnet/DeGate%20Protocol%20Specification%20Document.md#operator"}]}]},"technology":{"dataAvailability":{"name":"All data required for proofs is published onchain","description":"All the data that is used to construct the system state is published onchain in the form of cheap calldata. This ensures that it will always be available when needed.","risks":[],"references":[{"title":"Introduction - DeGate design doc","url":"https://github.com/degatedev/protocols/blob/degate_mainnet/DeGate%20Protocol%20Specification%20Document.md#design-features"}]},"operator":{"name":"The system has a centralized operator","description":"The operator is the only entity that can propose blocks. A live and trustworthy operator is vital to the health of the system.","risks":[{"category":"MEV can be extracted if","text":"the operator exploits their centralized position and frontruns user transactions."}],"references":[{"title":"ExchangeV3.sol#L341-L348 - DeGate source code","url":"https://etherscan.io/address/0x9C8f884B15a1fcd5B4bcEb8647DC2D15165906c7#code#F1#L341"},{"title":"LoopringIOExchangeOwner.sol#L98-L101 - DeGate source code","url":"https://etherscan.io/address/0x2CFd271e9b4d0344Fd2Aa0cb1ffd4f6b85c0B215#code#F1#L98"}]},"forceTransactions":{"name":"Users can force exit the system","description":"Force exit allows the users to escape censorship by withdrawing their funds. The system allows users to force the withdrawal of funds by submitting a request directly to the contract onchain.  The request must be served within a defined time period. If this does not happen, the system will halt regular operation and permit trustless withdrawal of funds.","risks":[{"category":"Users can be censored if","text":"the operator refuses to include their transactions. However, there exists a mechanism to independently exit the system."}],"references":[{"title":"Forced Withdrawals - DeGate design doc","url":"https://github.com/degatedev/protocols/blob/degate_mainnet/Smart%20Contract%20Design.md#force-withdrawal"}]},"exitMechanisms":[{"name":"Regular exit","description":"The user initiates the withdrawal by submitting a regular transaction on this chain. When the block containing that transaction is settled the funds become available for withdrawal on L1. ZK proofs are required to settle blocks. Finally the user submits an L1 transaction to claim the funds.","risks":[],"references":[{"title":"Withdraw - DeGate design doc","url":"https://github.com/degatedev/protocols/blob/degate_mainnet/Smart%20Contract%20Design.md#normal-withdrawal"}]},{"name":"Forced exit","description":"If the user experiences censorship from the operator with regular exit they can submit their withdrawal requests directly on L1. The system is then obliged to service this request. Once the force operation is submitted and if the request is serviced, the operation follows the flow of a regular exit.","risks":[],"references":[{"title":"Forced Request Handling - DeGate design doc","url":"https://github.com/degatedev/protocols/blob/degate_mainnet/Smart%20Contract%20Design.md#force-withdrawal"},{"title":"ExchangeV3.sol#L392 - DeGate source code, forceWithdraw function","url":"https://etherscan.io/address/0x9C8f884B15a1fcd5B4bcEb8647DC2D15165906c7#code#F1#L392"}]},{"name":"Emergency exit","description":"If the 15d deadline passes and the forced exit is still ignored the user can put the system into Withdrawal Mode, disallowing further state updates. In that case everybody can withdraw by submitting a merkle proof of their funds with their L1 transaction.","risks":[],"references":[{"title":"Forced Request Handling - DeGate design doc","url":"https://github.com/degatedev/protocols/blob/degate_mainnet/Smart%20Contract%20Design.md#exodus-mode"},{"title":"ExchangeV3.sol#L420 - DeGate source code, withdrawFromMerkleTree function","url":"https://etherscan.io/address/0x9C8f884B15a1fcd5B4bcEb8647DC2D15165906c7#code#F1#L420"}]}]},"permissions":{"ethereum":{"actors":[{"id":"DefaultDepositContract Owner","name":"DefaultDepositContract Owner","accounts":[{"address":"eth:0xacD3A62F3eED1BfE4fF0eC8240d645c1F5477F82","type":"EOA","isVerified":true,"name":"0xacD3…7F82","url":"https://etherscan.io/address/0xacD3A62F3eED1BfE4fF0eC8240d645c1F5477F82"}],"description":"This address is the owner of the following contracts: LoopringIOExchangeOwner, LoopringV3, DefaultDepositContract. Can add or remove block submitters. Can change the forced withdrawal fee up to 0.25 ETH. Can change a way that balance is calculated per contract during the deposit, allowing the support of non-standard tokens.","chain":"ethereum"},{"id":"BlockVerifier Owner","name":"BlockVerifier Owner","accounts":[{"address":"eth:0xacD3A62F3eED1BfE4fF0eC8240d645c1F5477F82","type":"EOA","isVerified":true,"name":"0xacD3…7F82","url":"https://etherscan.io/address/0xacD3A62F3eED1BfE4fF0eC8240d645c1F5477F82"}],"description":"This address is the owner of the BlockVerifier contract.","chain":"ethereum"},{"id":"Block Submitters","name":"Block Submitters","accounts":[{"address":"eth:0x4e3FE240B50A445fc6137a6363aC3593Af173b8a","type":"EOA","isVerified":true,"name":"0x4e3F…3b8a","url":"https://etherscan.io/address/0x4e3FE240B50A445fc6137a6363aC3593Af173b8a"}],"description":"Actors who can submit new blocks, updating the L2 state on L1.","chain":"ethereum"}]}},"contracts":{"addresses":{"ethereum":[{"name":"ExchangeV3","isVerified":true,"address":"eth:0x9C8f884B15a1fcd5B4bcEb8647DC2D15165906c7","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Main ExchangeV3 contract."},{"name":"LoopringIOExchangeOwner","isVerified":true,"address":"eth:0x2CFd271e9b4d0344Fd2Aa0cb1ffd4f6b85c0B215","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Contract used by the Prover to submit exchange blocks with zkSNARK proofs that are later processed and verified by the BlockVerifier contract."},{"name":"DefaultDepositContract","isVerified":true,"address":"eth:0xF13e21653AEB763595D5E4baA1dC115689Da49b9","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"ERC 20 token basic deposit contract. Handles user deposits and withdrawals."},{"name":"LoopringV3","isVerified":true,"address":"eth:0x5F412bf72ceE6ceB3e9f8b0F966429b59255a9B7","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Contract for setting exchange fee parameters."},{"name":"BlockVerifier","isVerified":true,"address":"eth:0x707B12e8921b442D4015eb03c86E66F3b8042Dd2","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"zkSNARK Verifier based on ethsnarks library."}]},"risks":[]},"milestones":[{"title":"DeGate Redeploy","url":"https://medium.com/degate/degate-mainnet-beta-redeployment-update-a0f1a6b7350c","date":"2023-09-14T00:00:00Z","description":"DeGate redeploys the contracts to fix a bug.","type":"general"}],"discoveryInfo":{"isDiscoDriven":false,"permissionsDiscoDriven":false,"contractsDiscoDriven":false,"baseTimestamp":1699774871,"hasDiscoUi":false}}