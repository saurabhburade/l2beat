{"archivedAt":1751987762,"type":"layer2","id":"honeypot","capability":"appchain","addedAt":1683905088,"badges":[{"id":"CartesiVM","type":"VM","name":"CartesiVM","description":"This project uses the Cartesi Machine to run its smart contracts and supports any programming language that can be ported to RISC-V architecture","action":{"type":"scalingFilter","id":"vm","value":"CartesiVM"}},{"id":"AppChain","type":"VM","name":"Application-specific chain","description":"This project is built to operate a specific application","action":{"type":"scalingFilter","id":"vm","value":"AppChain"}},{"id":"EthereumCalldata","type":"DA","name":"Ethereum with calldata","description":"This project is posting its data to Ethereum as calldata","action":{"type":"publicDaHighlight","slug":"ethereum"}},{"id":"Cartesi","type":"Stack","name":"Built on the Cartesi stack","description":"The project is built on the Cartesi stack","action":{"type":"scalingFilter","id":"stack","value":"Cartesi Rollups"}}],"reasonsForBeingOther":[{"label":"No proofs","shortDescription":"The proof system isn't fully functional","description":"Projects without a proper proof system fully rely on single entities to safely update the state. A malicious proposer can finalize an invalid state, which can cause loss of funds."}],"display":{"name":"Cartesi Authority Honeypot","shortName":"Honeypot Authority","slug":"cartesi-honeypot","stacks":["Cartesi Rollups"],"description":"Honeypot is an application-specific rollup designed to challenge the security of Cartesi Rollups. It provides a gamified battlefield to incentivize bug hunters to hack the application to obtain the funds locked in the rollup contract.","purposes":["Bug bounty"],"links":{"websites":["https://cartesi.io/"],"bridges":["https://explorer.cartesi.io/stake"],"documentation":["https://docs.cartesi.io/cartesi-rollups/"],"explorers":["https://cartesiscan.io/","https://explorer.cartesi.io/"],"repositories":["https://github.com/cartesi/honeypot"],"socialMedia":["https://twitter.com/cartesiproject","https://discord.gg/G2tCH5KkcM","https://cartesi.io/blog/","https://reddit.com/r/cartesi/","https://youtube.com/@cartesiproject","https://t.me/cartesiproject","https://linkedin.com/company/cartesiproject","https://instagram.com/cartesiproject/","https://medium.com/cartesi"]},"liveness":{"warnings":{"stateUpdates":"Please note, for Optimistic rollups the state is not finalized until the challenge period passes."}}},"stage":{"stage":"Stage 0","missing":{"nextStage":"Stage 1","requirements":["Users' withdrawals can be censored by the permissioned operators.","Upgrades executed by actors with more centralized control than a Security Council provide less than 7d for users to exit if the permissioned operator is down or censoring."],"principle":"Compromising ≥75% of the Security Council should be the only way (other than bugs) for a rollup to indefinitely block an L2→L1 message (e.g. a withdrawal) or push an invalid L2→L1 message (e.g. an invalid withdrawal)."},"summary":[{"stage":"Stage 0","requirements":[{"satisfied":false,"description":"There is no onchain fraud proof system."},{"satisfied":true,"description":"The project calls itself a rollup."},{"satisfied":true,"description":"State roots are posted to Ethereum L1."},{"satisfied":true,"description":"Inputs for the state transition function are posted to Ethereum L1."},{"satisfied":true,"description":"A source-available node exists that can recreate the state from Ethereum L1 data. Please note that the L2BEAT team has not verified the validity of the node source code. [View code](https://github.com/cartesi/rollups/tree/v1.0.2/offchain)"}]},{"stage":"Stage 1","requirements":[{"satisfied":false,"description":"Users' withdrawals can be censored by the permissioned operators."},{"satisfied":false,"description":"Upgrades executed by actors with more centralized control than a Security Council provide less than 7d for users to exit if the permissioned operator is down or censoring."}],"principle":{"satisfied":false,"description":"Compromising ≥75% of the Security Council should be the only way (other than bugs) for a rollup to indefinitely block an L2→L1 message (e.g. a withdrawal) or push an invalid L2→L1 message (e.g. an invalid withdrawal)."}},{"stage":"Stage 2","requirements":[{"satisfied":false,"description":"Upgrades unrelated to onchain provable bugs provide less than 30d to exit."}]}]},"config":{"escrows":[{"address":"0x0974CC873dF893B302f6be7ecf4F9D4b1A15C366","sinceTimestamp":1694553335,"tokens":"*","contract":{"isVerified":true,"address":"eth:0x0974CC873dF893B302f6be7ecf4F9D4b1A15C366","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Contract storing bounty funds."},"chain":"ethereum","includeInTotal":true}],"trackedTxs":[{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0x9DB17B9426E6d3d517a969994E7ADDadbCa9C45f","selector":"0xddfdfbb0","functionSignature":"function submitClaim(bytes calldata _claimData)","sinceTimestamp":1694467715}}]},"dataAvailability":{"layer":{"value":"Ethereum","secondLine":"Calldata","sentiment":"good","description":"The data is posted to Ethereum as calldata.","projectId":"ethereum"},"bridge":{"value":"Enshrined","sentiment":"good","description":"The validating bridge has access to all the data, as it is posted onchain.","projectId":"ethereum"},"mode":{"value":"Transaction data"}},"riskView":{"stateValidation":{"value":"None","description":"Currently the system permits invalid state roots. More details in project overview.","sentiment":"bad","orderHint":null},"dataAvailability":{"value":"Onchain","description":"All of the data needed for proof construction is published on Ethereum L1.","sentiment":"good","orderHint":null},"exitWindow":{"value":"∞","description":"Users can exit funds at any time because contracts are not upgradeable.","sentiment":"good","orderHint":null},"sequencerFailure":{"value":"Self sequence","description":"In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There is no delay on this operation.","sentiment":"good","orderHint":0},"proposerFailure":{"value":"Cannot withdraw","description":"Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen.","sentiment":"bad","orderHint":null}},"stateValidation":{"categories":[{"title":"No state validation","description":"Ultimately, Cartesi DApps will use interactive fraud proofs to enforce state correctness. This feature is currently in development and the Honeypot DApp permits invalid state roots. Since Honeypot is immutable, this feature will not be added to the DApp.","risks":[{"category":"Funds can be stolen if","text":"an invalid state root is submitted to the system by the configured Authority.","isCritical":true}],"references":[{"title":"Authority.sol#L148 - Etherscan source code, submitClaim function","url":"https://etherscan.io/address/0x9DB17B9426E6d3d517a969994E7ADDadbCa9C45f#code#F1#L48"}]}]},"technology":{"dataAvailability":{"name":"All transaction data is recorded on chain","description":"All executed transactions are submitted to an on chain smart contract. The execution of the rollup is based entirely on the submitted transactions, so anyone monitoring the contract can know the correct state of the rollup chain.","risks":[],"references":[{"title":"InputBox.sol#30 - Etherscan source code, addInput function","url":"https://etherscan.io/address/0x59b22D57D4f067708AB0c00552767405926dc768#code#F1#L30"}]},"operator":{"name":"The system has a centralized operator","description":"The operator is the only entity that can propose blocks. A live and trustworthy operator is vital to the health of the system.","risks":[{"category":"MEV can be extracted if","text":"the operator exploits their centralized position and frontruns user transactions."}],"references":[]},"forceTransactions":{"name":"Users can force any transaction","description":"Because the state of the system is based on transactions submitted on the underlying host chain and anyone can submit their transactions there it allows the users to circumvent censorship by interacting with the smart contract on the host chain directly.","risks":[],"references":[]},"exitMechanisms":[{"name":"Regular exit","description":"The user initiates the withdrawal by submitting a regular transaction on this chain. When the block containing that transaction is settled the funds become available for withdrawal on L1. The process of settling a block usually takes several days to complete. Finally the user submits an L1 transaction to claim the funds.","risks":[{"category":"Funds can be frozen if","text":"the centralized validator goes down. Users cannot produce blocks themselves and exiting the system requires new block production.","isCritical":true}],"references":[]}]},"stateDerivation":{"nodeSoftware":"The Cartesi node software source code can be found [here](https://github.com/cartesi/rollups/tree/v1.0.2/offchain).","compressionScheme":"No compression is used.","genesisState":"The genesis state is derived from the Honeypot Cartesi Machine template, which can be found within the [Honeypot server Docker image](https://hub.docker.com/layers/cartesi/honeypot/main-server-mainnet/images/sha256-9067ebcf3d915e8091aba45bd231a328a7ac260924d85387137ed133f3e240ac) at `/var/opt/cartesi/machine-snapshots/0_0`. Alternatively, it is possible to recreate it by following the build procedure outlined in the [Honeypot GitHub Repository](https://github.com/cartesi/honeypot#building-machine-to-deploy).","dataFormat":"The reference implementation for ERC20 deposits can be found [here](https://github.com/cartesi/rollups/blob/v1.0.2/onchain/rollups/contracts/common/InputEncoding.sol#L40). To learn about the withdrawal request format, please refer to the documentation [here](https://github.com/cartesi/honeypot#withdrawing-the-pot)."},"contracts":{"addresses":{"ethereum":[{"name":"Honeypot","isVerified":true,"address":"eth:0x0974CC873dF893B302f6be7ecf4F9D4b1A15C366","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"CartesiDApp instance for the Honeypot DApp, responsible for holding assets and allowing the DApp to interact with other smart contracts."},{"name":"InputBox","isVerified":true,"address":"eth:0x59b22D57D4f067708AB0c00552767405926dc768","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Contract that receives arbitrary blobs as inputs to Cartesi DApps."},{"name":"ERC20Portal","isVerified":true,"address":"eth:0x9C21AEb2093C32DDbC53eEF24B873BDCd1aDa1DB","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Contract that allows anyone to perform transfers of ERC-20 tokens to Cartesi DApps."},{"name":"Authority","isVerified":true,"address":"eth:0x9DB17B9426E6d3d517a969994E7ADDadbCa9C45f","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Simple consensus model controlled by a single address, the owner."},{"name":"History","isVerified":true,"address":"eth:0x385485FcaCD8AdB70C8A5a6B07155C907e78FAd9","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Contract that stores claims for Cartesi DApps."}]},"risks":[]},"permissions":{"ethereum":{"actors":[{"name":"Authority owner","accounts":[{"address":"eth:0x79Ec6ba3352216E496FCfEd1d2e86Ee15eed3861","type":"EOA","isVerified":true,"name":"0x79Ec…3861","url":"https://etherscan.io/address/0x79Ec6ba3352216E496FCfEd1d2e86Ee15eed3861"}],"description":"The Authority owner can submit claims to the Honeypot DApp.","chain":"ethereum"}]}},"milestones":[{"title":"Honeypot announcement","url":"https://medium.com/cartesi/cartesi-ecosystem-update-2023-124b384401cc#:~:text=Honeypot%20DApp%20on%20Mainnet","date":"2023-04-11T00:00:00Z","description":"Honeypot first announced to the community.","type":"general"},{"title":"Honeypot launch","url":"https://x.com/cartesiproject/status/1706685141421047982","date":"2023-09-26T00:00:00Z","description":"Honeypot launched on mainnet.","type":"general"},{"title":"Honeypot archived","url":"https://x.com/cartesiproject/status/1940757477844455765","date":"2025-07-08T00:00:00Z","description":"Honeypot funds withdrawn, and validator turned off.","type":"general"}],"discoveryInfo":{"isDiscoDriven":false,"permissionsDiscoDriven":false,"contractsDiscoDriven":false,"baseTimestamp":1725019175,"hasDiscoUi":false}}