{"type":"layer2","id":"kinto","addedAt":1716336000,"capability":"appchain","display":{"architectureImage":"kinto","stateValidationImage":"orbit","purposes":["KYC-ed DeFi"],"name":"Kinto","slug":"kinto","description":"Kinto is an Orbit stack L2 with account abstraction and KYC enabled for all users, supporting both modern financial institutions and decentralized protocols.","links":{"websites":["https://kinto.xyz"],"bridges":["https://engen.kinto.xyz"],"documentation":["https://docs.kinto.xyz"],"explorers":["https://explorer.kinto.xyz/","https://kintoscan.io/"],"repositories":["https://github.com/kintoxyz"],"socialMedia":["https://twitter.com/kintoxyz","https://discord.com/invite/kinto","https://mirror.xyz/kintoxyz.eth","https://medium.com/mamori-finance"]},"warning":"Fraud proof system is fully deployed but is not yet permissionless as it requires Validators to be whitelisted.","stacks":["Arbitrum"],"liveness":{"warnings":{"stateUpdates":"Please note, for Optimistic rollups the state is not finalized until the challenge period passes."},"explanation":"Kinto posts transaction data to the L1. For a transaction to be considered final, it has to be posted to the L1. Forced txs can be delayed up to 1d. The state root is settled 6d 8h after it has been posted."}},"proofSystem":{"type":"Optimistic"},"riskView":{"stateValidation":{"value":"Fraud proofs (INT)","description":"Fraud proofs allow 9 WHITELISTED actors watching the chain to prove that the state is incorrect. At least 5 Challengers are external to the Operator. Interactive proofs (INT) require multiple transactions over time to resolve. There is a 6d 8h challenge period.","challengeDelay":549816,"sentiment":"warning","orderHint":9,"initialBond":"0.1"},"dataAvailability":{"value":"Onchain","description":"All of the data needed for proof construction is published on Ethereum L1.","sentiment":"good","orderHint":null},"exitWindow":{"value":"None","description":"There is no exit window for users to exit in case of unwanted regular upgrades of the L1 as they are initiated by the Security Council with instant upgrade power and without proper notice. Upgrades initiated by actors other than the Security Council (e.g. KYC providers) on Layer 2 guarantee at least a 7d exit window to the user.","sentiment":"bad","orderHint":0},"sequencerFailure":{"value":"Self sequence","description":"In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 1d delay on this operation.","sentiment":"good","orderHint":86400,"secondLine":"1d delay"},"proposerFailure":{"value":"Self propose","description":"Anyone can become a Proposer after 12d 17h of inactivity from the currently whitelisted Proposers.","sentiment":"good","orderHint":1099632,"secondLine":"12d 17h delay"}},"stage":{"stage":"Stage 1","missing":{"nextStage":"Stage 2","requirements":["Fraud proof submission is open only to whitelisted actors.","Upgrades unrelated to onchain provable bugs provide less than 30d to exit.","The Security Council's actions are not confined to onchain provable bugs."]},"summary":[{"stage":"Stage 0","requirements":[{"satisfied":true,"description":"A complete and functional proof system is deployed."},{"satisfied":true,"description":"There are at least 5 external actors who can submit fraud proofs."},{"satisfied":true,"description":"The project calls itself a rollup."},{"satisfied":true,"description":"State roots are posted to Ethereum L1."},{"satisfied":true,"description":"Inputs for the state transition function are posted to Ethereum L1."},{"satisfied":true,"description":"A source-available node exists that can recreate the state from Ethereum L1 data. Please note that the L2BEAT team has not verified the validity of the node source code. [View code](https://docs.kinto.xyz/kinto-the-safe-l2/building-on-kinto/running-kinto-nodes)"}]},{"stage":"Stage 1","requirements":[{"satisfied":true,"description":"Users are able to exit without the help of the permissioned operators."},{"satisfied":true,"description":"In case of an unwanted upgrade by actors more centralized than a Security Council, users have at least 7d to exit."},{"satisfied":true,"description":"The Security Council is properly set up [(List of members)](https://docs.kinto.xyz/kinto-the-safe-l2/security-kyc-aml/security-council)."}],"principle":{"satisfied":true,"description":"Compromising ≥75% of the Security Council is the only way (other than bugs) for a rollup to indefinitely block an L2→L1 message (e.g. a withdrawal) or push an invalid L2→L1 message (e.g. an invalid withdrawal)."}},{"stage":"Stage 2","requirements":[{"satisfied":false,"description":"Fraud proof submission is open only to whitelisted actors."},{"satisfied":false,"description":"Upgrades unrelated to onchain provable bugs provide less than 30d to exit."},{"satisfied":false,"description":"The Security Council's actions are not confined to onchain provable bugs."}]}],"additionalConsiderations":{"short":"Kinto enforces the use of smart wallets and KYC by preventing arbitrary calls and new contracts creation. The system ensures that KYC can be revoked only if the Security Council proactively agrees to it. Only whitelisted contracts can be called by users.","long":"\nKinto enforces the use of smart wallets and KYC. A valid state transition in Kinto disallows all transactions by EOAs and new contracts creation, unless specifically whitelisted.\nThis setup effectively enforces smart wallet use because the auxiliary contracts of the standard KintoWallet smart wallet (like the EntryPoint and the KintoWalletFactory) are whitelisted.\nThe KYC validation is part of the KintoWallet signature verification. Since all users must use the same implementation of this smart wallet, all user transactions on Kinto check for an up-to-date KYC flag, and are dropped in case the check fails.\nThe system ensures that KYC can be revoked only if the Security Council proactively agrees to a proposed status change by a KYC provider. The Security Council has been historically following KYC provider decisions and it is explicitly tasked to do so.\n\nThe KintoWallet implementation supports different signer thresholds with a maximum of 4 signers. The first signer for each users smart wallet though is enforced to be held by Turnkey in a TEE.\nUsers can make transactions using this first signer only through Kinto's frontend. Authenticated by a passkey, the Turnkey TEE then signs the transaction for them and submits it to the L2.\nThe user can still choose to not trust Turnkey by adding 2 EOA signers to their wallet and setting their signer policy to 2/3 during wallet creation.\n\nContracts outside of the ones necessary to interact with the smart wallet and to withdraw the gas token are out of scope for the stage assessment and might present additional risks."}},"config":{"associatedTokens":["K"],"escrows":[{"address":"0x859a53Fe2C8DA961387030E7CB498D6D20d0B2DB","sinceTimestamp":1702607855,"tokens":["ETH"],"contract":{"isVerified":true,"address":"eth:0x859a53Fe2C8DA961387030E7CB498D6D20d0B2DB","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x74C717C01425eb475A5fC55d2A4a9045fC9800df"],"implementations":["eth:0x1c6ACCd9d66f3B993928E7439c9A2d67b94a445F"]},"chain":"ethereum","description":"Contract managing Inboxes and Outboxes. It escrows ETH sent to L2.","upgradableBy":[{"name":"ProxyAdmin","delay":"no"}]},"chain":"ethereum","includeInTotal":true},{"address":"0xA6Ae29Ce5c38DFE0Dd95B716748ac747f31E4013","sinceTimestamp":1730655983,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["LINK"],"chain":"ethereum"},{"address":"0xC9a9f47Ae41Fa4287837751AF7325e87a1dE9326","sinceTimestamp":1730656015,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["LINK"],"chain":"arbitrum","includeInTotal":false},{"address":"0xbE60CC82A67AC7BBA8F41408B0C6833cE73e0E4D","sinceTimestamp":1730657767,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["cbBTC"],"chain":"base","includeInTotal":false},{"address":"0x00A0c9d82B95a17Cdf2D46703F2DcA13EB0E8A94","sinceTimestamp":1716142367,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["WETH"],"chain":"ethereum"},{"address":"0xc5d01939Af7Ce9Ffc505F0bb36eFeDde7920f2dc","sinceTimestamp":1716128303,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["wstETH"],"chain":"ethereum"},{"address":"0x755cD5d147036E11c76F1EeffDd94794fC265f0d","sinceTimestamp":1716142595,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["USDC"],"chain":"ethereum"},{"address":"0x12Cf431BdF7F143338cC09A0629EDcCEDCBCEcB5","sinceTimestamp":1715972567,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["DAI"],"chain":"ethereum"},{"address":"0x351d8894fB8bfa1b0eFF77bFD9Aab18eA2da8fDd","sinceTimestamp":1716142919,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["ENA"],"chain":"ethereum"},{"address":"0xdf34E61B6e7B9e348713d528fEB019d504d38c1e","sinceTimestamp":1716143207,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["USDe"],"chain":"ethereum"},{"address":"0xdb161cdc9c11892922F7121a409b196f3b00e640","sinceTimestamp":1716143711,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["EIGEN"],"chain":"ethereum"},{"address":"0xc7a542f73049C11f9719Be6Ff701fCA882D60020","sinceTimestamp":1716143759,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["eETH"],"chain":"ethereum"},{"address":"0x5B8Ae1C9c5970e2637Cf3Af431acAAebEf7aFb85","sinceTimestamp":1716143807,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["sDAI"],"chain":"ethereum"},{"address":"0x43b718Aa5e678b08615CA984cbe25f690B085b32","sinceTimestamp":1716143855,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["sUSDe"],"chain":"ethereum"},{"address":"0xD357F7Ec4826Bd1234CDA2277B623F6dE7dA56Dc","sinceTimestamp":1716143903,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["wUSDM"],"chain":"ethereum"},{"address":"0xeB66259d2eBC3ed1d3a98148f6298927d8A36397","sinceTimestamp":1716143951,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["weETH"],"chain":"ethereum"},{"address":"0x95d60E34aB2E626407d98dF8C240e6174e5D37E5","sinceTimestamp":1716216227,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["ETHFI"],"chain":"ethereum"},{"address":"0x25f0D71Da51A77Ca231484eBbAD1f588A0230ef2","sinceTimestamp":1721253827,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["PAXG"],"chain":"ethereum"},{"address":"0xd04Bc056BE36a6127267E4F71d3b43D1BEEfE8bF","sinceTimestamp":1721253935,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["XAUt"],"chain":"ethereum"},{"address":"0x0fC783f611A888A2cAbC3dA482Add3215334dCc2","sinceTimestamp":1721252735,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["MKR"],"chain":"ethereum"},{"address":"0xA2bc0DaA9BF98820632bCa0663a9616f6bC180f8","sinceTimestamp":1725992651,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["SOL"],"chain":"ethereum"},{"address":"0xd1228C6CB94a670F30D5ACb1340a9d96aC30e6A8","sinceTimestamp":1730147723,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["SPX"],"chain":"ethereum"},{"address":"0xfDF267c43c0C868046c66695c1a85c973418CBFb","sinceTimestamp":1716142417,"includeInTotal":false,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["WETH"],"chain":"base"},{"address":"0xE194f2B41A5dc6Be311aD7811eF391a0ac84687d","sinceTimestamp":1716128411,"includeInTotal":false,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["wstETH"],"chain":"base"},{"address":"0xc7744d1A93c56a6eE12CCF1F2264641F219528fE","sinceTimestamp":1716142647,"includeInTotal":false,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["USDC"],"chain":"base"},{"address":"0x9354E3822CE6BF77B2761f8922972BB767D771d8","sinceTimestamp":1715972109,"includeInTotal":false,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["DAI"],"chain":"base"},{"address":"0x8de880ecA6B95214C1ECd1556BF1DB4d23f212B5","sinceTimestamp":1716143999,"includeInTotal":false,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["weETH"],"chain":"base"},{"address":"0x67c1869c1A105d8117938cFC6597409f59eA9af7","sinceTimestamp":1730154133,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["SPX"],"chain":"base","includeInTotal":false},{"address":"0x4D585D346DFB27b297C37F480a82d4cAB39491Bb","sinceTimestamp":1716142397,"includeInTotal":false,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["WETH"],"chain":"arbitrum"},{"address":"0x6F855dE562CC9d019757f5F68a15Cd392FF52962","sinceTimestamp":1716128387,"includeInTotal":false,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["wstETH"],"chain":"arbitrum"},{"address":"0xC88A469B96A62d4DA14Dc5e23BDBC495D2b15C6B","sinceTimestamp":1716142624,"includeInTotal":false,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["USDC"],"chain":"arbitrum"},{"address":"0x36E2DBe085eE4d028fD60f70670f662365d0E978","sinceTimestamp":1715972440,"includeInTotal":false,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["DAI"],"chain":"arbitrum"},{"address":"0x7C852c2a3e367453Ce3a68A4D12c313BaD0565e3","sinceTimestamp":1716143237,"includeInTotal":false,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["USDe"],"chain":"arbitrum"},{"address":"0x8bD30d8c5d5cBb5e41Af7B9A4bD654b34772e890","sinceTimestamp":1716143980,"includeInTotal":false,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["weETH"],"chain":"arbitrum"},{"address":"0x500c8337782a9f82C5376Ea71b66A749cE42b507","sinceTimestamp":1717616624,"includeInTotal":false,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["wUSDM"],"chain":"arbitrum"},{"address":"0x25a1baC7314Ff40Ee8CD549251924D066D7d5bC6","sinceTimestamp":1718367579,"includeInTotal":false,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["SolvBTC"],"chain":"arbitrum"}],"activityConfig":{"type":"block","startBlock":1,"adjustCount":{"type":"SubtractOne"}},"daTracking":[{"type":"ethereum","daLayer":"ethereum","sinceBlock":18788587,"inbox":"0xF4Ef823D57819AC7202a081A5B49376BD28E7b3a","sequencers":["0xe27f3f6db6824def1738b2aACe2672aC59046a39"]}],"trackedTxs":[{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"functionCall","address":"0xF4Ef823D57819AC7202a081A5B49376BD28E7b3a","selector":"0xe0bc9729","functionSignature":"function addSequencerL2Batch(uint256 sequenceNumber,bytes calldata data,uint256 afterDelayedMessagesRead,address gasRefunder,uint256 prevMessageCount,uint256 newMessageCount)","sinceTimestamp":1702607855}},{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"functionCall","address":"0xF4Ef823D57819AC7202a081A5B49376BD28E7b3a","selector":"0x8f111f3c","functionSignature":"function addSequencerL2BatchFromOrigin(uint256 sequenceNumber,bytes data,uint256 afterDelayedMessagesRead,address gasRefunder,uint256 prevMessageCount,uint256 newMessageCount)","sinceTimestamp":1702607855}},{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"functionCall","address":"0xF4Ef823D57819AC7202a081A5B49376BD28E7b3a","selector":"0x37501551","functionSignature":"function addSequencerL2BatchFromOrigin(uint256 sequenceNumber, bytes data, uint256 afterDelayedMessagesRead, address gasRefunder, uint256 prevMessageCount, uint256 newMessageCount, bytes quote)","sinceTimestamp":1702607855}},{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"functionCall","address":"0xF4Ef823D57819AC7202a081A5B49376BD28E7b3a","selector":"0x3e5aa082","functionSignature":"function addSequencerL2BatchFromBlobs(uint256 sequenceNumber,uint256 afterDelayedMessagesRead,address gasRefunder,uint256 prevMessageCount,uint256 newMessageCount)","sinceTimestamp":1702607855}},{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"functionCall","address":"0xF4Ef823D57819AC7202a081A5B49376BD28E7b3a","selector":"0x6e620055","functionSignature":"function addSequencerL2BatchDelayProof(uint256 sequenceNumber, bytes data, uint256 afterDelayedMessagesRead, address gasRefunder, uint256 prevMessageCount, uint256 newMessageCount, tuple(bytes32 beforeDelayedAcc, tuple(uint8 kind, address sender, uint64 blockNumber, uint64 timestamp, uint256 inboxSeqNum, uint256 baseFeeL1, bytes32 messageDataHash) delayedMessage) delayProof)","sinceTimestamp":1702607855}},{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"functionCall","address":"0xF4Ef823D57819AC7202a081A5B49376BD28E7b3a","selector":"0x917cf8ac","functionSignature":"function addSequencerL2BatchFromBlobsDelayProof(uint256 sequenceNumber, uint256 afterDelayedMessagesRead, address gasRefunder, uint256 prevMessageCount, uint256 newMessageCount, tuple(bytes32 beforeDelayedAcc, tuple(uint8 kind, address sender, uint64 blockNumber, uint64 timestamp, uint256 inboxSeqNum, uint256 baseFeeL1, bytes32 messageDataHash) delayedMessage) delayProof)","sinceTimestamp":1702607855}},{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"functionCall","address":"0xF4Ef823D57819AC7202a081A5B49376BD28E7b3a","selector":"0x69cacded","functionSignature":"function addSequencerL2BatchFromOriginDelayProof(uint256 sequenceNumber, bytes data, uint256 afterDelayedMessagesRead, address gasRefunder, uint256 prevMessageCount, uint256 newMessageCount, tuple(bytes32 beforeDelayedAcc, tuple(uint8 kind, address sender, uint64 blockNumber, uint64 timestamp, uint256 inboxSeqNum, uint256 baseFeeL1, bytes32 messageDataHash) delayedMessage) delayProof)","sinceTimestamp":1702607855}},{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0x655761AD5FC251F414D6993A73184B0669F278c8","selector":"0xa04cee60","functionSignature":"function updateSendRoot(bytes32 root, bytes32 l2BlockHash) external","sinceTimestamp":1702607855}}]},"contracts":{"addresses":{"ethereum":[{"name":"RollupProxy","isVerified":true,"address":"eth:0x5073dA9cA4810f3E0aA01c20c7d9d02C3f522e11","upgradeability":{"proxyType":"Arbitrum proxy","admins":["eth:0x59B851c8b1643e0735Ec3F2f0e528f3d89c3408a"],"implementations":["eth:0x27Bb05e547CfC9b874f18b0F6F3FB62A58Be9CdB","eth:0xa6f528c65569d903C20e7D2639ad343128B4FD27"]},"chain":"ethereum","description":"Central contract for the project's configuration like its execution logic hash (`wasmModuleRoot`) and addresses of the other system contracts. Entry point for Proposers creating new Rollup Nodes (state commitments) and Challengers submitting fraud proofs (In the Orbit stack, these two roles are both held by the Validators).\n* Roles:\n  * **admin**: UpgradeExecutor; ultimately Kinto Security Council\n  * **owner**: UpgradeExecutor; ultimately Kinto Security Council\n  * **validators**: Ankr, Caldera2, Certora 1, Hypernative2, KintoFoundation, KintsugiFoundation, MamoriLabs3, Turnkey Multisig, Venn2; ultimately EOA 1, EOA 2, EOA 3, EOA 4, EOA 5","upgradableBy":[{"name":"Kinto Security Council","delay":"no"}],"discoveryDrivenData":true},{"name":"ChallengeManager","isVerified":true,"address":"eth:0x6228e2FB8C561f1a5A963039Bc38Eb6D539A1A7F","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x74C717C01425eb475A5fC55d2A4a9045fC9800df"],"implementations":["eth:0xd14D9d4c8985763B5037A4f253977e059385660c"]},"chain":"ethereum","description":"Contract that allows challenging state roots. Can be called through the RollupProxy by Validators or the UpgradeExecutor.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Kinto Security Council","upgradableBy":[{"name":"Kinto Security Council","delay":"no"}],"discoveryDrivenData":true},{"name":"Bridge","isVerified":true,"address":"eth:0x859a53Fe2C8DA961387030E7CB498D6D20d0B2DB","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x74C717C01425eb475A5fC55d2A4a9045fC9800df"],"implementations":["eth:0x1c6ACCd9d66f3B993928E7439c9A2d67b94a445F"]},"chain":"ethereum","description":"Escrow contract for the project's gas token (can be different from ETH). Keeps a list of allowed Inboxes and Outboxes for canonical bridge messaging.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Kinto Security Council","upgradableBy":[{"name":"Kinto Security Council","delay":"no"}],"discoveryDrivenData":true},{"name":"SequencerInbox","isVerified":true,"address":"eth:0xF4Ef823D57819AC7202a081A5B49376BD28E7b3a","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x74C717C01425eb475A5fC55d2A4a9045fC9800df"],"implementations":["eth:0xa5E09FfA33dd011F5B68aAA55F513D6773579f78"]},"chain":"ethereum","description":"A sequencer (registered in this contract) can submit transaction batches or commitments here.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Kinto Security Council\n  * **batchPosters**: EOA 6","upgradableBy":[{"name":"Kinto Security Council","delay":"no"}],"discoveryDrivenData":true},{"name":"UpgradeExecutor","isVerified":true,"address":"eth:0x59B851c8b1643e0735Ec3F2f0e528f3d89c3408a","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x74C717C01425eb475A5fC55d2A4a9045fC9800df"],"implementations":["eth:0x6c21303F5986180B1394d2C89f3e883890E2867b"]},"chain":"ethereum","description":"Central contract defining the access control permissions for upgrading the system contract implementations.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Kinto Security Council\n  * **executors**: Kinto Security Council","upgradableBy":[{"name":"Kinto Security Council","delay":"no"}],"discoveryDrivenData":true},{"name":"Outbox","isVerified":true,"address":"eth:0x655761AD5FC251F414D6993A73184B0669F278c8","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x74C717C01425eb475A5fC55d2A4a9045fC9800df"],"implementations":["eth:0x2a6DD4433ffa96dc1755814FC0d9cc83A5F68DeC"]},"chain":"ethereum","description":"Facilitates L2 to L1 contract calls: Messages initiated from L2 (for example withdrawal messages) eventually resolve in execution on L1.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Kinto Security Council","upgradableBy":[{"name":"Kinto Security Council","delay":"no"}],"discoveryDrivenData":true},{"name":"ERC20Gateway","isVerified":true,"address":"eth:0x7870D5398DB488c669B406fBE57b8d05b6A35e42","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x74C717C01425eb475A5fC55d2A4a9045fC9800df"],"implementations":["eth:0xf43bce5D32742FFC862eA182b0b5544CbDBB0F02"]},"chain":"ethereum","description":"Escrows deposited ERC-20 assets for the canonical Bridge. Upon depositing, a generic token representation will be minted at the destination. Withdrawals are initiated by the Outbox contract.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Kinto Security Council","upgradableBy":[{"name":"Kinto Security Council","delay":"no"}],"discoveryDrivenData":true},{"name":"Inbox","isVerified":true,"address":"eth:0xBFfaA85c1756472fFC37e6D172A7eC0538C14474","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x74C717C01425eb475A5fC55d2A4a9045fC9800df"],"implementations":["eth:0x296339ED40ec80746b239b04dE943bb8619784b7"]},"chain":"ethereum","description":"Facilitates sending L1 to L2 messages like depositing ETH, but does not escrow funds.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Kinto Security Council","upgradableBy":[{"name":"Kinto Security Council","delay":"no"}],"discoveryDrivenData":true},{"name":"GatewayRouter","isVerified":true,"address":"eth:0xD9041DeCaDcBA88844b373e7053B4AC7A3390D60","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x74C717C01425eb475A5fC55d2A4a9045fC9800df"],"implementations":["eth:0x6525137BfF366fbc0A89E3e5A4d244B5A0090a6D"]},"chain":"ethereum","description":"This routing contract maps tokens to the correct escrow (gateway) to be then bridged with canonical messaging.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Kinto Security Council","upgradableBy":[{"name":"Kinto Security Council","delay":"no"}],"discoveryDrivenData":true},{"name":"Bridger","isVerified":true,"address":"eth:0x0f1b7bd7762662B23486320AA91F30312184f70C","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0xf152Abda9E4ce8b134eF22Dc3C6aCe19C4895D82"],"implementations":["eth:0xae2F80339Bdd9bd384502A62aEe956eAbF3796e6"]},"chain":"ethereum","description":"Bridger gateway that can swap assets to 'L2 final assets' defined by the admin before bridging them to the L2. It does not have a function to bridge via the canonical bridge and uses the external socket bridge by default.\n* Roles:\n  * **admin**: Kinto Multisig","upgradableBy":[{"name":"Kinto Multisig","delay":"no"}],"discoveryDrivenData":true},{"name":"ValidatorUtils","isVerified":true,"address":"eth:0x2b0E04Dc90e3fA58165CB41E2834B44A56E766aF","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"This contract implements view only utilities for validators.\n","discoveryDrivenData":true},{"name":"OneStepProver0","isVerified":true,"address":"eth:0x2C1e1A31d2bC26f7BE3CAB5Cb0806641847B3C59","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"One of the modular contracts used for the last step of a fraud proof, which is simulated inside a WASM virtual machine.\n","discoveryDrivenData":true},{"name":"RollupEventInbox","isVerified":true,"address":"eth:0x52EcE832AF3DF3125BbfD6423E0425dB3fA99D3F","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x74C717C01425eb475A5fC55d2A4a9045fC9800df"],"implementations":["eth:0x13BE515E44Eefaf3eBEFAD684F1FBB574Ac0A494"]},"chain":"ethereum","description":"Helper contract sending configuration data over the bridge during the systems initialization.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Kinto Security Council","upgradableBy":[{"name":"Kinto Security Council","delay":"no"}],"discoveryDrivenData":true},{"name":"OneStepProverHostIo","isVerified":true,"address":"eth:0x551E2501074D80E22c5FfB69b5fd8ba2939593b7","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"One of the modular contracts used for the last step of a fraud proof, which is simulated inside a WASM virtual machine.\n","discoveryDrivenData":true},{"name":"ProxyAdmin","isVerified":true,"address":"eth:0x74C717C01425eb475A5fC55d2A4a9045fC9800df","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"* Roles:\n  * **owner**: UpgradeExecutor","discoveryDrivenData":true},{"name":"OneStepProverMemory","isVerified":true,"address":"eth:0x778ca912Bd8b35dDA84852B47BA8624e08f640A6","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"One of the modular contracts used for the last step of a fraud proof, which is simulated inside a WASM virtual machine.\n","discoveryDrivenData":true},{"name":"OneStepProverMath","isVerified":true,"address":"eth:0xacED35d61f71A804E7627b5622c267C8Ac31d38e","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"One of the modular contracts used for the last step of a fraud proof, which is simulated inside a WASM virtual machine.\n","discoveryDrivenData":true},{"name":"OneStepProofEntry","isVerified":true,"address":"eth:0xEd696D87C351C2ef687c1c484c3e297B276a40d1","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"One of the modular contracts used for the last step of a fraud proof, which is simulated inside a WASM virtual machine.\n","discoveryDrivenData":true}],"kinto":[{"name":"KintoAppRegistry","isVerified":true,"address":"kinto:0x5A2b641b84b0230C8e75F55d5afd27f4Dbd59d5b","upgradeability":{"proxyType":"EIP1967 proxy","admins":["kinto:0xacC000818e5Bbd911D5d449aA81CB5cA24024739"],"implementations":["kinto:0xb9cE6BC89b79c713f34fd15D82a70900fEFD0de1"]},"chain":"kinto","description":"Central system contract defining addresses that are allowed to be called by EOAs. The modified Kinto node reads this configuration and drops all other transactions from EOAs (enforced by a modified state transition function). As a result, users can only transact using a canonical smart wallet.\n* Roles:\n  * **admin**: AccessManager\n  * **owner**: AccessManager","discoveryDrivenData":true},{"name":"KintoWalletFactory","isVerified":true,"address":"kinto:0x8a4720488CA32f1223ccFE5A087e250fE3BC5D75","upgradeability":{"proxyType":"EIP1967 proxy","admins":["kinto:0xacC000818e5Bbd911D5d449aA81CB5cA24024739"],"implementations":["kinto:0x1Bc47279D052Edb9C1770242287eFC23317Ed675"]},"chain":"kinto","description":"Deploys new KintoWallet smartwallets for users upon passing KYC checks. Also manages the beacon implementation for all KintoWallets and their recovery logic. KintoWallets can be funded with ETH via this contract.\n* Roles:\n  * **admin**: AccessManager\n  * **owner**: AccessManager","discoveryDrivenData":true},{"name":"KintoID","isVerified":true,"address":"kinto:0xf369f78E3A0492CC4e96a90dae0728A38498e9c7","upgradeability":{"proxyType":"EIP1967 proxy","admins":["kinto:0x0000000000000000000000000000000000000000"],"implementations":["kinto:0x1d61772AE2e157f9F6A4127526eD86AB5801a477"]},"chain":"kinto","description":"Manages Kinto's KYC system: The KYC_PROVIDER roles responsible for managing the KYC status and KYC metadata of user wallets. Each KintoWallet checks the KYC status of its user in this contract as part of the signature check.\n* Roles:\n  * **dEFAULT_ADMINs**: AccessManager\n  * **gOVERNANCErs**: AccessManager\n  * **kYC_PROVIDERs**: AccessManager, EOA 10, EOA 7, EOA 8, EOA 9, Kinto Multisig 2\n  * **uPGRADERs**: AccessManager","discoveryDrivenData":true},{"name":"AccessManager","isVerified":true,"address":"kinto:0xacC000818e5Bbd911D5d449aA81CB5cA24024739","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"kinto","description":"OpenZeppelin AccessManager contract: Serves as a proxy contract defining the roles, permissions and delays to call functions in target contracts.\n* Roles:\n  * **kintoMultisig2Permission**: Kinto Multisig 2\n  * **securityCouncilPermission**: KintoSecurityCouncil_L2Alias","discoveryDrivenData":true},{"name":"Socket","isVerified":true,"address":"kinto:0x3e9727470C66B1e77034590926CDe0242B5A3dCc","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"kinto","description":"Central contract for bridging via the external socket bridge.\n","discoveryDrivenData":true},{"name":"EntryPoint","isVerified":true,"address":"kinto:0x2843C269D2a64eCfA63548E8B3Fc0FD23B7F70cb","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"kinto","description":"Used as entrypoint to transact using smartwallets and UserOps.\n","discoveryDrivenData":true},{"name":"BeaconKintoWallet","isVerified":true,"address":"kinto:0x87f0eE85bF3198654900a422832157abBba30828","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"kinto","description":"Beacon proxy for the KintoWallet smartwallet implementation that is used for all users.\n* Roles:\n  * **owner**: KintoWalletFactory","discoveryDrivenData":true}]},"risks":[{"category":"Funds can be stolen if","text":"a contract receives a malicious code upgrade. There is no delay on code upgrades.","isCritical":true}]},"chainConfig":{"name":"kinto","chainId":7887,"explorerUrl":"https://explorer.kinto.xyz","sinceTimestamp":1716249601,"multicallContracts":[{"address":"0x2cc0188fA85FD8Ce748C7Df6066873fdcfaD95e9","batchSize":150,"sinceBlock":218561,"version":"3"}],"apis":[{"type":"rpc","url":"https://rpc.kinto-rpc.com","callsPerMinute":600},{"type":"blockscout","url":"https://explorer.kinto.xyz/api"}],"gasTokens":["ETH"]},"technology":{"sequencing":{"name":"Delayed forced transactions","description":"To force transactions from the host chain, users must first enqueue \"delayed\" messages in the \"delayed\" inbox of the Bridge contract. Only authorized Inboxes are allowed to enqueue delayed messages, and the so-called Inbox contract is the one used as the entry point by calling the `sendMessage` or `sendMessageFromOrigin` functions. If the centralized sequencer doesn't process the request within some time bound, users can call the `forceInclusion` function on the SequencerInbox contract to include the message in the canonical chain. The time bound is hardcoded to be 1d.","references":[],"risks":[]},"dataAvailability":{"name":"All data required for proofs is published on chain","description":"All the data that is used to construct the system state is published on chain in the form of cheap blobs or calldata. This ensures that it will be available for enough time.","risks":[],"references":[{"title":"Sequencing followed by deterministic execution - Arbitrum documentation","url":"https://developer.offchainlabs.com/inside-arbitrum-nitro/#sequencing-followed-by-deterministic-execution"},{"title":"SequencerInbox.sol - source code, addSequencerL2BatchFromOrigin function","url":"https://etherscan.io/address/0xa5E09FfA33dd011F5B68aAA55F513D6773579f78#code"}]},"operator":{"name":"The system has a centralized sequencer","description":"While forcing transaction is open to anyone the system employs a privileged sequencer that has priority for submitting transaction batches and ordering transactions.","risks":[{"category":"MEV can be extracted if","text":"the operator exploits their centralized position and frontruns user transactions."}],"references":[{"title":"Sequencer - Arbitrum documentation","url":"https://docs.arbitrum.io/how-arbitrum-works/inside-arbitrum-nitro#the-sequencer"}]},"forceTransactions":{"name":"Users can force any transaction","description":"Because the state of the system is based on transactions submitted on the underlying host chain and anyone can submit their transactions there it allows the users to circumvent censorship by interacting with the smart contract on the host chain directly. After a delay of 1d in which a Sequencer has failed to include a transaction that was directly posted to the smart contract, it can be forcefully included by anyone on the host chain, which finalizes its ordering.","risks":[],"references":[{"title":"SequencerInbox.sol - source code, forceInclusion function","url":"https://etherscan.io/address/0xa5E09FfA33dd011F5B68aAA55F513D6773579f78#code"},{"title":"Sequencer Isn't Doing Its Job - Arbitrum documentation","url":"https://docs.arbitrum.io/how-arbitrum-works/sequencer#unhappyuncommon-case-sequencer-isnt-doing-its-job"}]},"exitMechanisms":[{"name":"Regular messaging","description":"The user initiates L2->L1 messages by submitting a regular transaction on this chain. When the block containing that transaction is settled, the message becomes available for processing on L1. The process of block finalization usually takes several days to complete.","risks":[],"references":[{"title":"Transaction lifecycle - Arbitrum documentation","url":"https://developer.offchainlabs.com/tx-lifecycle"},{"title":"L2 to L1 Messages - Arbitrum documentation","url":"https://developer.offchainlabs.com/arbos/l2-to-l1-messaging"},{"title":"Mainnet for everyone - Arbitrum Blog","url":"https://offchain.medium.com/mainnet-for-everyone-27ce0f67c85e"}]},{"name":"Autonomous exit","description":"Users can (eventually) exit the system by pushing the transaction on L1 and providing the corresponding state root. The only way to prevent such withdrawal is via an upgrade.","risks":[],"references":[{"title":"List of whitelisted Kinto validators","url":"https://docs.kinto.xyz/kinto-the-modular-exchange/security-kyc-aml/kinto-validators"}]}],"otherConsiderations":[{"name":"Enforced smart wallets and KYC","description":"\n      The Kinto L2 node is a fork of Arbitrum's geth implementation with notable changes to the state transition function.\n      A valid state transition in Kinto [disallows all transactions by EOAs](https://github.com/KintoXYZ/kinto-go-ethereum/blob/7aba9b812a82d9339d29a2345946c3d7030a0377/core/kinto_hardfork_7.go#L58) and new contract creation, unless specifically whitelisted.\n      The current whitelist is sourced directly from the KintoAppRegistry smart contract on Kinto L2, and can be modified by the L2 governance.\n      This setup effectively enforces smart wallet use because the auxiliary contracts of the standard KintoWallet smart wallet (like the EntryPoint and the KintoWalletFactory) are whitelisted.\n\n      The KYC validation is part of the KintoWallet signature verification. Since all users must use the same implementation of this smart wallet, all user transactions on Kinto check for an up-to-date KYC flag, and are dropped in case the check fails.","risks":[{"category":"Users can be censored if","text":"a KYC provider changes the users' KYC status and the Security Council confirms it."},{"category":"Funds can be lost if","text":"the user interacts with a compromised whitelisted contract."}],"references":[{"title":"User Owned KYC - Kinto documentation","url":"https://docs.kinto.xyz/kinto-the-safe-l2/security-kyc-aml/how-does-kinto-solve-it"}]}]},"permissions":{"ethereum":{"roles":[{"name":"Sequencer","description":"Can submit transaction batches or commitments to the SequencerInbox contract on the host chain.","accounts":[{"address":"eth:0xe27f3f6db6824def1738b2aACe2672aC59046a39","type":"EOA","isVerified":true,"name":"0xe27f…6a39","url":"https://etherscan.io/address/0xe27f3f6db6824def1738b2aACe2672aC59046a39"}],"chain":"ethereum","discoveryDrivenData":true},{"name":"Validator","description":"Can propose new state roots (called nodes) and challenge state roots on the host chain.","accounts":[{"address":"eth:0x08E674c4538caE03B6c05405881dDCd95DcaF5a8","type":"EOA","isVerified":true,"name":"KintoFoundation","url":"https://etherscan.io/address/0x08E674c4538caE03B6c05405881dDCd95DcaF5a8"},{"address":"eth:0x2bfDA59220413DEd39dD0E443620b5277EcE6348","type":"EOA","isVerified":true,"name":"Ankr","url":"https://etherscan.io/address/0x2bfDA59220413DEd39dD0E443620b5277EcE6348"},{"address":"eth:0x4a3BB34aDE10127752015A6aF6136da15fde636A","type":"EOA","isVerified":true,"name":"0x4a3B…636A","url":"https://etherscan.io/address/0x4a3BB34aDE10127752015A6aF6136da15fde636A"},{"address":"eth:0x58028fFbc25aE2e12b96276bDB125955F41D41f3","type":"EOA","isVerified":true,"name":"Hypernative2","url":"https://etherscan.io/address/0x58028fFbc25aE2e12b96276bDB125955F41D41f3"},{"address":"eth:0x5FB5040dfC5B8b9Ea40dFBd881188Ec85cDC0621","type":"EOA","isVerified":true,"name":"Certora 1","url":"https://etherscan.io/address/0x5FB5040dfC5B8b9Ea40dFBd881188Ec85cDC0621"},{"address":"eth:0x64Cf65036a76E3827e448cadbc53D31EefDCE04a","type":"EOA","isVerified":true,"name":"Caldera2","url":"https://etherscan.io/address/0x64Cf65036a76E3827e448cadbc53D31EefDCE04a"},{"address":"eth:0x8A577165f8ef813296043d5f75fF2F2F2349afFd","type":"EOA","isVerified":true,"name":"0x8A57…afFd","url":"https://etherscan.io/address/0x8A577165f8ef813296043d5f75fF2F2F2349afFd"},{"address":"eth:0x944eB0a2829A859959586b10D54229278534a696","type":"EOA","isVerified":true,"name":"MamoriLabs3","url":"https://etherscan.io/address/0x944eB0a2829A859959586b10D54229278534a696"},{"address":"eth:0x94561e98DD5E55271f91A103e4979aa6C493745E","type":"EOA","isVerified":true,"name":"KintsugiFoundation","url":"https://etherscan.io/address/0x94561e98DD5E55271f91A103e4979aa6C493745E"},{"address":"eth:0xad40f1440544475f4B70573a106F41dF1860598b","type":"EOA","isVerified":true,"name":"0xad40…598b","url":"https://etherscan.io/address/0xad40f1440544475f4B70573a106F41dF1860598b"},{"address":"eth:0xCb5BCC84741b379BFa0968b841C5de1fC9240CBd","type":"EOA","isVerified":true,"name":"0xCb5B…0CBd","url":"https://etherscan.io/address/0xCb5BCC84741b379BFa0968b841C5de1fC9240CBd"},{"address":"eth:0xDcbb957bF991A0b252Fd996946Ea27E51ECabA69","type":"EOA","isVerified":true,"name":"0xDcbb…bA69","url":"https://etherscan.io/address/0xDcbb957bF991A0b252Fd996946Ea27E51ECabA69"},{"address":"eth:0xe528E74302FFCF6F9F6a1c973968d98F0fDbad8f","type":"EOA","isVerified":true,"name":"Venn2","url":"https://etherscan.io/address/0xe528E74302FFCF6F9F6a1c973968d98F0fDbad8f"}],"chain":"ethereum","discoveryDrivenData":true}],"actors":[{"name":"Kinto Security Council","description":"A Multisig with 6/8 threshold. \n* Can upgrade **with no delay**\n  * RollupProxy [via: UpgradeExecutor]\n  * RollupEventInbox [via: UpgradeExecutor → ProxyAdmin]\n  * UpgradeExecutor [via: UpgradeExecutor → ProxyAdmin]\n  * ChallengeManager [via: UpgradeExecutor → ProxyAdmin]\n  * Outbox [via: UpgradeExecutor → ProxyAdmin]\n  * ERC20Gateway [via: UpgradeExecutor → ProxyAdmin]\n  * Bridge [via: UpgradeExecutor → ProxyAdmin]\n  * Inbox [via: UpgradeExecutor → ProxyAdmin]\n  * GatewayRouter [via: UpgradeExecutor → ProxyAdmin]\n  * SequencerInbox [via: UpgradeExecutor → ProxyAdmin]\n* Can interact with RollupProxy\n  * Pause and unpause and set important roles and parameters in the system contracts: Can delegate Sequencer management to a BatchPosterManager address, manage data availability, DACs and the fastConfirmer role, set the Sequencer-only window, introduce an allowList to the bridge and whitelist Inboxes/Outboxes [via: UpgradeExecutor]","accounts":[{"address":"eth:0x17Eb10e12a78f986C78F973Fc70eD88072B33B7d","type":"Contract","isVerified":true,"name":"0x17Eb…3B7d","url":"https://etherscan.io/address/0x17Eb10e12a78f986C78F973Fc70eD88072B33B7d"}],"chain":"ethereum","references":[{"title":"Security Council members - Kinto Docs","url":"https://docs.kinto.xyz/kinto-the-modular-exchange/security-kyc-aml/security-council"}],"participants":[{"address":"eth:0xD98B32e5D0Dcb5853e498225a15447a59b7a40e1","type":"Contract","isVerified":true,"name":"Turnkey Multisig","url":"#Turnkey Multisig"},{"address":"eth:0x5FB5040dfC5B8b9Ea40dFBd881188Ec85cDC0621","type":"EOA","isVerified":true,"name":"Certora 1","url":"https://etherscan.io/address/0x5FB5040dfC5B8b9Ea40dFBd881188Ec85cDC0621"},{"address":"eth:0xe52957E92a372d5a3B544F4C329b606f1A1b4bD2","type":"EOA","isVerified":true,"name":"Venn/Ironblocks","url":"https://etherscan.io/address/0xe52957E92a372d5a3B544F4C329b606f1A1b4bD2"},{"address":"eth:0x082CBA3929aD00EbB6d81ebE57B0BD24fBF3Fc6B","type":"EOA","isVerified":true,"name":"Hypernative","url":"https://etherscan.io/address/0x082CBA3929aD00EbB6d81ebE57B0BD24fBF3Fc6B"},{"address":"eth:0x08E674c4538caE03B6c05405881dDCd95DcaF5a8","type":"EOA","isVerified":true,"name":"KintoFoundation","url":"https://etherscan.io/address/0x08E674c4538caE03B6c05405881dDCd95DcaF5a8"},{"address":"eth:0xc1f4D15C16A1f3555E0a5F7AeFD1e17AD4aaf40B","type":"EOA","isVerified":true,"name":"MamoriLabs","url":"https://etherscan.io/address/0xc1f4D15C16A1f3555E0a5F7AeFD1e17AD4aaf40B"},{"address":"eth:0x356000Cec4fC967f8FC372381D983426760A0391","type":"EOA","isVerified":true,"name":"Caldera","url":"https://etherscan.io/address/0x356000Cec4fC967f8FC372381D983426760A0391"},{"address":"eth:0x94561e98DD5E55271f91A103e4979aa6C493745E","type":"EOA","isVerified":true,"name":"KintsugiFoundation","url":"https://etherscan.io/address/0x94561e98DD5E55271f91A103e4979aa6C493745E"}],"discoveryDrivenData":true},{"name":"Kinto Multisig","description":"A Multisig with 2/3 threshold. \n* Can upgrade **with no delay**\n  * Bridger ","accounts":[{"address":"eth:0xf152Abda9E4ce8b134eF22Dc3C6aCe19C4895D82","type":"Contract","isVerified":true,"name":"0xf152…5D82","url":"https://etherscan.io/address/0xf152Abda9E4ce8b134eF22Dc3C6aCe19C4895D82"}],"chain":"ethereum","references":[],"participants":[{"address":"eth:0xc1f4D15C16A1f3555E0a5F7AeFD1e17AD4aaf40B","type":"EOA","isVerified":true,"name":"MamoriLabs","url":"https://etherscan.io/address/0xc1f4D15C16A1f3555E0a5F7AeFD1e17AD4aaf40B"},{"address":"eth:0x94561e98DD5E55271f91A103e4979aa6C493745E","type":"EOA","isVerified":true,"name":"KintsugiFoundation","url":"https://etherscan.io/address/0x94561e98DD5E55271f91A103e4979aa6C493745E"},{"address":"eth:0xc31C4549356d46c37021393EeEb6f704B38061eC","type":"EOA","isVerified":true,"name":"0xc31C…61eC","url":"https://etherscan.io/address/0xc31C4549356d46c37021393EeEb6f704B38061eC"}],"discoveryDrivenData":true},{"name":"Turnkey Multisig","description":"A Multisig with 1/5 threshold. \nMember of Kinto Security Council.\n","accounts":[{"address":"eth:0xD98B32e5D0Dcb5853e498225a15447a59b7a40e1","type":"Contract","isVerified":true,"name":"0xD98B…40e1","url":"https://etherscan.io/address/0xD98B32e5D0Dcb5853e498225a15447a59b7a40e1"}],"chain":"ethereum","references":[],"participants":[{"address":"eth:0xCb5BCC84741b379BFa0968b841C5de1fC9240CBd","type":"EOA","isVerified":true,"name":"0xCb5B…0CBd","url":"https://etherscan.io/address/0xCb5BCC84741b379BFa0968b841C5de1fC9240CBd"},{"address":"eth:0xDcbb957bF991A0b252Fd996946Ea27E51ECabA69","type":"EOA","isVerified":true,"name":"0xDcbb…bA69","url":"https://etherscan.io/address/0xDcbb957bF991A0b252Fd996946Ea27E51ECabA69"},{"address":"eth:0x4a3BB34aDE10127752015A6aF6136da15fde636A","type":"EOA","isVerified":true,"name":"0x4a3B…636A","url":"https://etherscan.io/address/0x4a3BB34aDE10127752015A6aF6136da15fde636A"},{"address":"eth:0xad40f1440544475f4B70573a106F41dF1860598b","type":"EOA","isVerified":true,"name":"0xad40…598b","url":"https://etherscan.io/address/0xad40f1440544475f4B70573a106F41dF1860598b"},{"address":"eth:0x8A577165f8ef813296043d5f75fF2F2F2349afFd","type":"EOA","isVerified":true,"name":"0x8A57…afFd","url":"https://etherscan.io/address/0x8A577165f8ef813296043d5f75fF2F2F2349afFd"}],"discoveryDrivenData":true}]},"kinto":{"roles":[],"actors":[{"name":"Kinto Multisig 2","description":"A Multisig with 2/4 threshold. \n* Can upgrade **with no delay**\n  * Faucet \n  * SponsorPaymaster \n* Can interact with NioGuardians\n  * mint Nio Guardian NFTs to any address, inheriting the permissions of the NFT \n* Can interact with AccessManager\n  * change the configuration of all AccessManager permissions (minimum delay shown, the total delay can be longer for some operations) **with 12d delay** [via: - acting directly with 12d delay]\n  * approve smart wallet recoveries for any KintoWallet \n* Can interact with KintoID\n  * manage the KYC status of any user (sanction status and KYC metadata) and mint/burn KintoID NFTs ","accounts":[{"address":"kinto:0x2e2B1c42E38f5af81771e65D87729E57ABD1337a","type":"Contract","isVerified":true,"name":"0x2e2B…337a","url":"https://explorer.kinto.xyz/address/0x2e2B1c42E38f5af81771e65D87729E57ABD1337a"}],"chain":"kinto","references":[],"participants":[{"address":"kinto:0x660ad4B5A74130a4796B4d54BC6750Ae93C86e6c","type":"EOA","isVerified":true,"name":"0x660a…6e6c","url":"https://explorer.kinto.xyz/address/0x660ad4B5A74130a4796B4d54BC6750Ae93C86e6c"},{"address":"kinto:0xc1f4D15C16A1f3555E0a5F7AeFD1e17AD4aaf40B","type":"EOA","isVerified":true,"name":"MamoriLabs","url":"https://explorer.kinto.xyz/address/0xc1f4D15C16A1f3555E0a5F7AeFD1e17AD4aaf40B"},{"address":"kinto:0x08E674c4538caE03B6c05405881dDCd95DcaF5a8","type":"EOA","isVerified":true,"name":"KintoFoundation","url":"https://explorer.kinto.xyz/address/0x08E674c4538caE03B6c05405881dDCd95DcaF5a8"},{"address":"kinto:0x94561e98DD5E55271f91A103e4979aa6C493745E","type":"EOA","isVerified":true,"name":"KintsugiFoundation","url":"https://explorer.kinto.xyz/address/0x94561e98DD5E55271f91A103e4979aa6C493745E"}],"discoveryDrivenData":true},{"name":"KintoSecurityCouncil_L2Alias","accounts":[{"address":"kinto:0x28fC10E12A78f986c78F973Fc70ED88072b34c8e","type":"EOA","isVerified":true,"name":"0x28fC…4c8e","url":"https://explorer.kinto.xyz/address/0x28fC10E12A78f986c78F973Fc70ED88072b34c8e"}],"chain":"kinto","description":"* Can interact with AccessManager\n  * change the configuration of all AccessManager permissions (minimum delay shown, the total delay can be longer for some operations) **with 7d delay** [via: - acting directly with 7d delay]\n  * manage the whitelisted addresses in the KintoAppRegistry which affects censorship on the entire rollup **with 11d delay** [via: - acting directly with 11d delay]\n  * upgrade the implementation of the core contracts KintoID, KintoAppRegistry and KintoWalletFactory **with 11d delay** [via: - acting directly with 11d delay]\n  * confirm sanctions, making them permanent without providing an exit window ","discoveryDrivenData":true},{"name":"EOA 7","accounts":[{"address":"kinto:0x6E09F8A68fB5278e0C33D239dC12B2Cec33F4aC7","type":"EOA","isVerified":true,"name":"0x6E09…4aC7","url":"https://explorer.kinto.xyz/address/0x6E09F8A68fB5278e0C33D239dC12B2Cec33F4aC7"}],"chain":"kinto","description":"* Can interact with KintoID\n  * manage the KYC status of any user (sanction status and KYC metadata) and mint/burn KintoID NFTs ","discoveryDrivenData":true},{"name":"EOA 8","accounts":[{"address":"kinto:0x6E31039abF8d248aBed57E307C9E1b7530c269E4","type":"EOA","isVerified":true,"name":"0x6E31…69E4","url":"https://explorer.kinto.xyz/address/0x6E31039abF8d248aBed57E307C9E1b7530c269E4"}],"chain":"kinto","description":"* Can interact with KintoID\n  * manage the KYC status of any user (sanction status and KYC metadata) and mint/burn KintoID NFTs ","discoveryDrivenData":true},{"name":"EOA 9","accounts":[{"address":"kinto:0x6fe642404B7B23F31251103Ca0efb538Ad4aeC07","type":"EOA","isVerified":true,"name":"0x6fe6…eC07","url":"https://explorer.kinto.xyz/address/0x6fe642404B7B23F31251103Ca0efb538Ad4aeC07"}],"chain":"kinto","description":"* Can interact with KintoID\n  * manage the KYC status of any user (sanction status and KYC metadata) and mint/burn KintoID NFTs ","discoveryDrivenData":true},{"name":"EOA 10","accounts":[{"address":"kinto:0xb539019776eF803E89EC062Ad54cA24D1Fdb008a","type":"EOA","isVerified":true,"name":"0xb539…008a","url":"https://explorer.kinto.xyz/address/0xb539019776eF803E89EC062Ad54cA24D1Fdb008a"}],"chain":"kinto","description":"* Can interact with KintoID\n  * manage the KYC status of any user (sanction status and KYC metadata) and mint/burn KintoID NFTs ","discoveryDrivenData":true}]}},"stateValidation":{"description":"Updates to the system state can be proposed and challenged by a set of whitelisted validators. If a state root passes the challenge period, it is optimistically considered correct and made actionable for withdrawals.","categories":[{"title":"State root proposals","description":"Whitelisted validators propose state roots as children of a previous state root. A state root can have multiple conflicting children. This structure forms a graph, and therefore, in the contracts, state roots are referred to as nodes. Each proposal requires a stake, currently set to 0.1 ETH, that can be slashed if the proposal is proven incorrect via a fraud proof. Stakes can be moved from one node to one of its children, either by calling `stakeOnExistingNode` or `stakeOnNewNode`. New nodes cannot be created faster than the minimum assertion period by the same validator, currently set to 15m. The oldest unconfirmed node can be confirmed if the challenge period has passed and there are no siblings, and rejected if the parent is not a confirmed node or if the challenge period has passed and no one is staked on it.","risks":[{"category":"Funds can be stolen if","text":"none of the whitelisted verifiers checks the published state. Fraud proofs assume at least one honest and able validator.","isCritical":true}],"references":[{"title":"How is fraud proven - Arbitrum documentation FAQ","url":"https://docs.arbitrum.io/welcome/arbitrum-gentle-introduction#q-and-how-exactly-is-fraud-proven-sounds-complicated"}]},{"title":"Challenges","description":"A challenge can be started between two siblings, i.e. two different state roots that share the same parent, by calling the `startChallenge` function. Validators cannot be in more than one challenge at the same time, meaning that the protocol operates with [partial concurrency](https://medium.com/l2beat/fraud-proof-wars-b0cb4d0f452a). Since each challenge lasts 6d 8h, this implies that the protocol can be subject to [delay attacks](https://medium.com/offchainlabs/solutions-to-delay-attacks-on-rollups-434f9d05a07a), where a malicious actor can delay withdrawals as long as they are willing to pay the cost of losing their stakes. If the protocol is delayed attacked, the new stake requirement increases exponentially for each challenge period of delay. Challenges are played via a bisection game, where asserter and challenger play together to find the first instruction of disagreement. Such instruction is then executed onchain in the WASM OneStepProver contract to determine the winner, who then gets half of the stake of the loser. As said before, a state root is rejected only when no one left is staked on it. The protocol does not enforces valid bisections, meaning that actors can propose correct initial claim and then provide incorrect midpoints.","references":[{"title":"Fraud Proof Wars: Arbitrum Classic","url":"https://medium.com/l2beat/fraud-proof-wars-b0cb4d0f452a"}]}]},"milestones":[{"title":"Appchain Stage 1","url":"https://medium.com/mamori-finance/kinto-is-now-a-stage1-appchain-2cf3c81546ea","date":"2025-03-27T00:00:00Z","description":"Users can exit the L2 in case of unwanted upgrades by actors other than the Security Council.","type":"general"},{"title":"Security Council Governance","url":"https://docs.kinto.xyz/kinto-the-safe-l2/security-kyc-aml/security-council","date":"2024-11-03T00:00:00Z","description":"Kinto gives the ownership of all L1 system contracts to a Security Council that is properly set up.","type":"general"},{"title":"First ever Challenge on mainnet","url":"https://x.com/vincfurc/status/1853891918037463521","date":"2024-10-31T00:00:00Z","description":"The first correctly resolved fault proof challenge of a mainnet Orbit stack rollup.","type":"general"},{"title":"Mainnet full launch","url":"https://medium.com/mamori-finance/%EF%B8%8F-engen-is-over-kinto-is-launching-d9f2dd49fb2e","date":"2024-05-22T00:00:00Z","description":"Engen mining is completed and locked funds are bridged to the Kinto L2.","type":"general"},{"title":"Kinto Mainnet Genesis","url":"https://medium.com/mamori-finance/%EF%B8%8F-kintos-launch-the-set-up-7eddfbb4bc38","date":"2023-12-15T00:00:00Z","description":"Kinto mainnet is launched. Deposits by users are disabled.","type":"general"}],"badges":[{"id":"Caldera","type":"RaaS","name":"Caldera","description":"This project was deployed via the rollup-as-a-service provider Caldera","action":{"type":"scalingFilter","id":"raas","value":"Caldera"}},{"id":"Orbit","type":"Stack","name":"Built on Arbitrum Orbit","description":"The project is built on Arbitrum Orbit","action":{"type":"scalingFilter","id":"stack","value":"Arbitrum"}},{"id":"EthereumBlobs","type":"DA","name":"Ethereum with blobs","description":"This project is posting its data to Ethereum as blobs","action":{"type":"publicDaHighlight","slug":"ethereum"}},{"id":"AppChain","type":"VM","name":"Application-specific chain","description":"This project is built to operate a specific application","action":{"type":"scalingFilter","id":"vm","value":"AppChain"}},{"id":"EVM","type":"VM","name":"EVM","description":"This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language","action":{"type":"scalingFilter","id":"vm","value":"EVM"}}],"dataAvailability":{"layer":{"value":"Ethereum","secondLine":"Blobs or Calldata","sentiment":"good","description":"The data is posted to Ethereum as calldata or blobs.","projectId":"ethereum"},"bridge":{"value":"Enshrined","sentiment":"good","description":"The validating bridge has access to all the data, as it is posted onchain.","projectId":"ethereum"},"mode":{"value":"Transaction data","secondLine":"Compressed"}},"scopeOfAssessment":{"inScope":["Ability to deposit, spend, and withdraw the gas token (ETH)","Derivation logic spec","Upgradability of standard Orbit stack L1 and L2 core contracts","Upgradability of Kinto-specific L2 contracts: KintoAppRegistry, KintoWalletFactory, KintoID, AccessManager, KintoWallet, EntryPoint","Signer policies and recovery process for the KintoWallet","Forced transaction mechanism via L1 through the EntryPoint and the KintoWallet"],"notInScope":["Non-gas tokens","Source code to program hash mapping","Upgradability of other whitelisted L2 contracts, including Socket bridge infrastructure","Crosschain DeFi applications"]},"discoveryInfo":{"isDiscoDriven":false,"permissionsDiscoDriven":false,"contractsDiscoDriven":false,"baseTimestamp":1756898514,"hasDiscoUi":false},"ecosystemInfo":{"id":"arbitrum-orbit"},"upgradesAndGovernance":"\nAll critical system smart contracts are upgradeable (can be arbitrarily changed). This permission is held by the 6/8 Kinto Security Council on Layer 1 and can be executed without any delay.\nOn the Kinto Layer 2, critical permissions are mostly guarded by an AccessManager contract, and then passed down with configurable delays to both the Security Council and the 2/4 Kinto Multisig 2.\n\nThe Appchain designation of Kinto is mainly due to a modified L2 node, which queries a special censoring contract on L2 (called KintoAppRegistry) for a whitelist to filter transactions.\nThis makes the KintoAppRegistry contract a critical system contract and any change to its configuration equivalent to an upgrade of the Layer 2 system.\nThe KintoAppRegistry contract is also governed via the AccessManager by the Security Council or the Kinto Multisig 2 with a 12d delay.\n\nAnother critical contract on the Appchain is called KintoID. Permissioned actors with the 'KYC provider' role in the KintoID contract can 'sanction' (freeze) user smart wallets, preventing them from transacting.\nTo protect users from this role which is mostly held by EOAs, a sanction expires if not confirmed by the Security Council within 3d.\nAn expired sanction guarantees the user a 9d cooldown window during which they cannot be sanctioned again.\n\nThe canonical (enforced) smartwallet for users on Kinto can be upgraded via the KintoWalletFactory, using the same path via the AccessManager.\nAdditionally, each smart wallet must use a recoverer address custodied by Turnkey. This allows users to reset the wallet signers via their email in case they lose their passkey.\nIt also necessitates a recovery delay to prevent turnkey from maliciously using their recoverer permission. During this period of 12d, the user can cancel the recovery process with any transaction in their smart wallet.\n\nThe permissioned sanctions logic by KYC providers necessitates at least an 12d delay on all upgrades that aren't executed by the Security Council, allowing the user at least 7d to exit."}