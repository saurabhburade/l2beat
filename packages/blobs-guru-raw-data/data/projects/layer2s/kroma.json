{"archivedAt":1752041971,"type":"layer2","id":"kroma","addedAt":1686820004,"capability":"universal","badges":[{"id":"EVM","type":"VM","name":"EVM","description":"This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language","action":{"type":"scalingFilter","id":"vm","value":"EVM"}},{"id":"EthereumBlobs","type":"DA","name":"Ethereum with blobs","description":"This project is posting its data to Ethereum as blobs","action":{"type":"publicDaHighlight","slug":"ethereum"}},{"id":"OPStack","type":"Stack","name":"Built on OP Stack","description":"The project is built on the OP Stack","action":{"type":"scalingFilter","id":"stack","value":"OP Stack"}},{"id":"Superchain","type":"Infra","name":"Part of the Superchain","description":"The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config","action":{"type":"scalingFilter","id":"infrastructure","value":"Superchain"}}],"reasonsForBeingOther":[{"label":"No proofs","shortDescription":"The proof system isn't fully functional","description":"Projects without a proper proof system fully rely on single entities to safely update the state. A malicious proposer can finalize an invalid state, which can cause loss of funds."}],"display":{"redWarning":"Kroma shut down on June 30, 2025. After this date, funds retrieval is not guaranteed. See [announcement](https://x.com/kroma_network/status/1936692354603520198) for details.","name":"Kroma","slug":"kroma","description":"Kroma aims to develop a universal ZK Rollup based on the Optimism Bedrock architecture. Currently, Kroma operates as an Optimistic Rollup with ZK fault proofs, utilizing a zkEVM based on Scroll and a zkVM based proven with SP1.","purposes":["Universal"],"stacks":["OP Stack"],"links":{"websites":["https://kroma.network/"],"bridges":["https://kroma.network/bridge/"],"documentation":["https://docs.kroma.network/","https://specs.kroma.network/"],"explorers":["https://kromascan.com/","https://blockscout.kroma.network/"],"repositories":["https://github.com/kroma-network/"],"socialMedia":["https://discord.com/invite/kroma-network","https://twitter.com/kroma_network","https://medium.com/@kroma-network"]},"liveness":{"warnings":{"stateUpdates":"Please note, for Optimistic rollups the state is not finalized until the challenge period passes."},"explanation":"Kroma is an Optimistic rollup that posts transaction data to the L1. For a transaction to be considered final, it has to be posted within a tx batch on L1 that links to a previous finalized batch. If the previous batch is missing, transaction finalization can be delayed up to 12h or until it gets published. The state root gets finalized 7d after it has been posted."}},"ecosystemInfo":{"id":"superchain"},"chainConfig":{"name":"kroma","chainId":255,"coingeckoPlatform":"kroma","explorerUrl":"https://kromascan.com","multicallContracts":[],"sinceTimestamp":1693882800,"apis":[{"type":"rpc","url":"https://api.kroma.network","callsPerMinute":300},{"type":"etherscan","chainId":255}]},"config":{"associatedTokens":["KRO"],"escrows":[{"address":"0x31F648572b67e60Ec6eb8E197E1848CC5F5558de","sinceTimestamp":1693880555,"tokens":["ETH"],"contract":{"isVerified":true,"address":"eth:0x31F648572b67e60Ec6eb8E197E1848CC5F5558de","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x665c23A5722B6A237fa6Be2B49c0A94504db1edd"],"implementations":["eth:0x5C8eE8323a33ebBF3ea3c6c3b84DACFca44A9316"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1693880879,"transactionHash":"0x3166f6173eb630e96f74c5c9d6765cd93e39566dc592a423fddae11eb09f8d17","implementations":["eth:0x381F53695230BAF83a39D1a08304D233A35730Fa"]},{"timestamp":1739162903,"transactionHash":"0x78625237350cb2047aa1ec6392d2402dabf1a5d44d54e0142ae27d19546c8c74","implementations":["eth:0x5C8eE8323a33ebBF3ea3c6c3b84DACFca44A9316"]}],"description":"Main entry point for users depositing ETH."},"chain":"ethereum","includeInTotal":true},{"address":"0x827962404D7104202C5aaa6b929115C8211d9596","sinceTimestamp":1693880555,"tokens":"*","contract":{"isVerified":true,"address":"eth:0x827962404D7104202C5aaa6b929115C8211d9596","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x665c23A5722B6A237fa6Be2B49c0A94504db1edd"],"implementations":["eth:0x404133EdF24F56b7dD9c6d89Fb56bb35244461B4"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1693880711,"transactionHash":"0xe67e8f042d304b70f1fd718343378219e0be9c49ed4a8242f8f96ea9ced2c0fd","implementations":["eth:0x404133EdF24F56b7dD9c6d89Fb56bb35244461B4"]}],"description":"Main entry point for users depositing ERC20 tokens that do not require custom gateway."},"chain":"ethereum","includeInTotal":true},{"address":"0x7e1Bdb9ee75B6ef1BCAAE3B1De1c616C7B11ef6e","sinceTimestamp":1700122827,"tokens":["USDC"],"contract":{"isVerified":true,"address":"eth:0x7e1Bdb9ee75B6ef1BCAAE3B1De1c616C7B11ef6e","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x22605A12cB77Fe420B0cC1263cEb58a77352FDc1"],"implementations":["eth:0xE4e9F3AD8A6F224c4b39854D3550AD258441AfE3"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1700122631,"transactionHash":"0x04a7ec0dad1a7a0ebf4cb2bd1f983b19d43e57972e91c4e73aabf2bff3530014","implementations":["eth:0xE4e9F3AD8A6F224c4b39854D3550AD258441AfE3"]}],"description":"Main entry point for users depositing USDC."},"chain":"ethereum","includeInTotal":true}],"activityConfig":{"type":"block","startBlock":1,"adjustCount":{"type":"SubtractOne"}},"daTracking":[{"type":"ethereum","daLayer":"ethereum","sinceBlock":0,"inbox":"0xfF00000000000000000000000000000000000255","sequencers":["0x41b8cD6791De4D8f9E0eaF7861aC506822AdcE12"]}],"trackedTxs":[{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"transfer","from":"0x41b8cD6791De4D8f9E0eaF7861aC506822AdcE12","to":"0xfF00000000000000000000000000000000000255","sinceTimestamp":1693883663}},{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0x180c77aE51a9c505a43A2C7D81f8CE70cacb93A6","selector":"0x5a045f78","functionSignature":"function submitL2Output(bytes32 _outputRoot,uint256 _l2BlockNumber,bytes32 _l1BlockHash,uint256 _l1BlockNumber)","sinceTimestamp":1693880579}}]},"dataAvailability":{"layer":{"value":"Ethereum","secondLine":"Blobs or Calldata","sentiment":"good","description":"The data is posted to Ethereum as calldata or blobs.","projectId":"ethereum"},"bridge":{"value":"Enshrined","sentiment":"good","description":"The validating bridge has access to all the data, as it is posted onchain.","projectId":"ethereum"},"mode":{"value":"Transaction data"}},"riskView":{"stateValidation":{"value":"Fraud proofs (INT, ZK)","description":"Fraud proofs allow actors watching the chain to prove that the state is incorrect. Interactive proofs (INT) require multiple transactions over time to resolve. ZK proofs are used to adjudicate the correctness of the last step. The challenge protocol can fail under certain conditions. The current system doesn't use posted L2 txs batches on L1 as inputs to prove a fault (for the zkEVM prover path), meaning that DA is not always enforced.","sentiment":"bad","orderHint":null,"challengeDelay":604800},"dataAvailability":{"value":"Onchain","description":"All of the data needed for proof construction is published on Ethereum L1.","sentiment":"good","orderHint":null},"exitWindow":{"value":"None","description":"There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable.","sentiment":"bad","orderHint":-604800},"sequencerFailure":{"value":"Self sequence","description":"In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation.","sentiment":"good","orderHint":43200},"proposerFailure":{"value":"Self propose","description":"Anyone can be a Proposer and propose new roots to the L1 bridge.","sentiment":"good","orderHint":0}},"stage":{"stage":"Stage 0","missing":{"nextStage":"Stage 1","requirements":["Upgrades executed by actors with more centralized control than a Security Council provide less than 7d for users to exit if the permissioned operator is down or censoring."],"principle":"Compromising ≥75% of the Security Council should be the only way (other than bugs) for a rollup to indefinitely block an L2→L1 message (e.g. a withdrawal) or push an invalid L2→L1 message (e.g. an invalid withdrawal)."},"summary":[{"stage":"Stage 0","requirements":[{"satisfied":false,"description":"The proof system is still under development."},{"satisfied":true,"description":"There are at least 5 external actors who can submit fraud proofs."},{"satisfied":true,"description":"The project calls itself a rollup."},{"satisfied":true,"description":"State roots are posted to Ethereum L1."},{"satisfied":true,"description":"Inputs for the state transition function are posted to Ethereum L1."},{"satisfied":true,"description":"A source-available node exists that can recreate the state from Ethereum L1 data. Please note that the L2BEAT team has not verified the validity of the node source code. [View code](https://github.com/kroma-network/kroma)"}]},{"stage":"Stage 1","requirements":[{"satisfied":true,"description":"Users are able to exit without the help of the permissioned operators."},{"satisfied":false,"description":"Upgrades executed by actors with more centralized control than a Security Council provide less than 7d for users to exit if the permissioned operator is down or censoring."},{"satisfied":true,"description":"The Security Council is properly set up."}],"principle":{"satisfied":false,"description":"Compromising ≥75% of the Security Council should be the only way (other than bugs) for a rollup to indefinitely block an L2→L1 message (e.g. a withdrawal) or push an invalid L2→L1 message (e.g. an invalid withdrawal)."}},{"stage":"Stage 2","requirements":[{"satisfied":true,"description":"Fraud proof submission is open to everyone."},{"satisfied":false,"description":"Upgrades unrelated to onchain provable bugs provide less than 30d to exit."},{"satisfied":false,"description":"The Security Council's actions are not confined to onchain provable bugs."}]}]},"stateValidation":{"categories":[{"title":"Fraud proofs","description":"Kroma uses an interactive fraud proof system to find a single block of disagreement, which is then ZK proven. Once the single block of disagreement    is found, the challenger is required to present a ZK proof of the fraud. This can be either a proof verified in a zkEVM verifier base on Scroll, or in a    zkVM verifier built by Succinct SP1. If the proof is validated, the incorrect state output is deleted. The Security Council can always override the    result of the challenge, it can also delete any L2 state root at any time. The protocol    can fail under certain conditions.","references":[{"title":"Colosseum.sol#L300 - Etherscan source code, createChallenge() function","url":"https://etherscan.io/address/0xBFcA810D1c26a3aC6F81a32Ab5C023F24bE93dAC#code#F1#L374"},{"title":"Colosseum.sol#L378 - Etherscan source code, bisect() function","url":"https://etherscan.io/address/0xBFcA810D1c26a3aC6F81a32Ab5C023F24bE93dAC#code#F1#L452"},{"title":"Colosseum.sol#L434 - Etherscan source code, proveFaultWithZkEvm() function","url":"https://etherscan.io/address/0xBFcA810D1c26a3aC6F81a32Ab5C023F24bE93dAC#code#F1#L505"},{"title":"KROMA-020: lack of validation segments and proofs in Colosseum.sol - ChainLight security audit","url":"https://drive.google.com/file/d/13TUxZ9KPyvUXNZGddALcJLin-xmp_Fkj/view"}],"risks":[{"category":"Funds can be lost if","text":"the cryptography is broken or implemented incorrectly."}]}]},"technology":{"dataAvailability":{"name":"All transaction data is recorded on chain","description":"All executed transactions are submitted to an on chain smart contract. The execution of the rollup is based entirely on the submitted transactions, so anyone monitoring the contract can know the correct state of the rollup chain.","risks":[],"references":[{"title":"Derivation: Batch Submission - Kroma specs","url":"https://specs.kroma.network/glossary.html#batch-submission"},{"title":"BatchInbox - Etherscan address","url":"https://etherscan.io/address/0xff00000000000000000000000000000000000255"},{"title":"KromaPortal.sol - Etherscan source code, depositTransaction() function","url":"https://etherscan.io/address/0x5C8eE8323a33ebBF3ea3c6c3b84DACFca44A9316#code#F1#L455"}]},"operator":{"name":"The system has a centralized sequencer","description":"While forcing transaction is open to anyone the system employs a privileged sequencer that has priority for submitting transaction batches and ordering transactions.","risks":[{"category":"MEV can be extracted if","text":"the operator exploits their centralized position and frontruns user transactions."}],"references":[{"title":"SystemConfig - batcher address","url":"https://etherscan.io/address/0x3971EB866AA9b2b8aFEa8a7C816F3b7e8b195a35#readProxyContract#F3"}]},"forceTransactions":{"name":"Users can force any transaction","description":"Because the state of the system is based on transactions submitted on the underlying host chain and anyone can submit their transactions there it allows the users to circumvent censorship by interacting with the smart contract on the host chain directly.","risks":[],"references":[{"title":"Sequencing Window - Kroma specs","url":"https://specs.kroma.network/glossary.html#sequencing-window"},{"title":"KromaPortal.sol - Etherscan source code, depositTransaction function","url":"https://etherscan.io/address/0x5C8eE8323a33ebBF3ea3c6c3b84DACFca44A9316#code#F1#L455"}]},"exitMechanisms":[{"name":"Regular messaging","description":"The user initiates L2->L1 messages by submitting a regular transaction on this chain. When the block containing that transaction is settled, the message becomes available for processing on L1. The process of block finalization takes a challenge period of 7d to complete.","risks":[],"references":[{"title":"KromaPortal.sol - Etherscan source code, proveWithdrawalTransaction function","url":"https://etherscan.io/address/0x5C8eE8323a33ebBF3ea3c6c3b84DACFca44A9316#code#F1#L253"},{"title":"KromaPortal.sol - Etherscan source code, finalizeWithdrawalTransaction function","url":"https://etherscan.io/address/0x5C8eE8323a33ebBF3ea3c6c3b84DACFca44A9316#code#F1#L350"}]},{"name":"Autonomous exit","description":"Users can (eventually) exit the system by pushing the transaction on L1 and providing the corresponding state root. The only way to prevent such withdrawal is via an upgrade.","risks":[],"references":[]}],"otherConsiderations":[{"name":"EVM compatible smart contracts are supported","description":"OP stack chains are pursuing the EVM Equivalence model. No changes to smart contracts are required regardless of the language they are written in, i.e. anything deployed on L1 can be deployed on L2.","risks":[],"references":[{"title":"Introducing EVM Equivalence","url":"https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306"}]}]},"stateDerivation":{"nodeSoftware":"Kroma nodes source code, including full node, proposer and validator, can be found [here](https://github.com/kroma-network/kroma). Also, the geth server, source maintained [here](https://github.com/kroma-network/go-ethereum), is a fork of go-ethereum. For more details on how they are different from the Optimism implementation, see [here](https://github.com/kroma-network/kroma-specs/blob/main/specs/protocol/differences-from-optimism.md).\nThe instructions to run the proposer (called validator) and the ZK prover, are documented [here](https://docs.kroma.network/developers/running-nodes-on-kroma).","compressionScheme":"Data batches are compressed using the [zlib](https://github.com/madler/zlib) algorithm with best compression level.","genesisState":"The genesis file can be found [here](https://github.com/kroma-network/kroma-up/blob/main/config/mainnet/genesis.json).","dataFormat":"L2 blocks derivation from L1 data plus the format and architecture of batch submission is documented [here](https://specs.kroma.network/protocol/rollup-node.html#derivation)."},"permissions":{"ethereum":{"roles":[{"id":"Guardian","name":"Guardian","description":"Allowed to pause withdrawals. In op stack systems with a proof system, the Guardian can also blacklist dispute games and set the respected game type (permissioned / permissionless).","accounts":[{"address":"eth:0x3de211088dF516da72efe68D386b561BEE256Ec4","type":"Contract","isVerified":true,"name":"KromaSecurityCouncil","url":"#KromaSecurityCouncil"}],"chain":"ethereum","discoveryDrivenData":true},{"id":"Sequencer","name":"Sequencer","description":"Allowed to commit transactions from the current layer to the host chain.","accounts":[{"address":"eth:0x41b8cD6791De4D8f9E0eaF7861aC506822AdcE12","type":"EOA","isVerified":true,"name":"EOA 1","url":"#EOA-1"}],"chain":"ethereum","discoveryDrivenData":true}],"actors":[{"id":"SecurityCouncilTokenOwners","name":"SecurityCouncilTokenOwners","accounts":[{"address":"eth:0xe4D08346609055c091D3DEECdAAd3Bf83119B08c","type":"Contract","isVerified":true,"name":"0xe4D0…B08c","url":"https://etherscan.io/address/0xe4D08346609055c091D3DEECdAAd3Bf83119B08c"}],"chain":"ethereum","description":"A soulbound token implementation to identify participants of the KromaSecurityCouncil. Owners of the token are members of the council. There are currently 10 members.\n* Can upgrade **with no delay**\n  * ZKProofVerifier [via: UpgradeGovernor → Timelock → ProxyAdmin]\n  * L2OutputOracle [via: UpgradeGovernor → Timelock → ProxyAdmin]\n  * Timelock [via: UpgradeGovernor → Timelock → ProxyAdmin]\n  * ValidatorManager [via: UpgradeGovernor → Timelock → ProxyAdmin]\n  * KromaPortal [via: UpgradeGovernor → Timelock → ProxyAdmin]\n  * SystemConfig [via: UpgradeGovernor → Timelock → ProxyAdmin]\n  * KromaSecurityCouncil [via: UpgradeGovernor → Timelock → ProxyAdmin]\n  * L1CrossDomainMessenger [via: UpgradeGovernor → Timelock → ProxyAdmin]\n  * L1ERC721Bridge [via: UpgradeGovernor → Timelock → ProxyAdmin]\n  * ZkVerifier [via: UpgradeGovernor → Timelock → ProxyAdmin]\n  * Colosseum [via: UpgradeGovernor → Timelock → ProxyAdmin]\n  * USDCBridge [via: UpgradeGovernor → Timelock]\n  * L1StandardBridge [via: UpgradeGovernor → Timelock → ProxyAdmin]\n  * AssetManager [via: UpgradeGovernor → Timelock → ProxyAdmin]\n  * UpgradeGovernor [via: UpgradeGovernor → Timelock → ProxyAdmin]\n  * SecurityCouncilTokenOwners [via: UpgradeGovernor → Timelock → ProxyAdmin]\n  * ValidatorPool [via: UpgradeGovernor → Timelock → ProxyAdmin]\n* Can interact with Timelock\n  * cancel queued transactions [via: UpgradeGovernor]\n  * execute transactions that are ready [via: UpgradeGovernor]\n  * manage all access control roles and change the minimum delay [via: UpgradeGovernor → Timelock - or UpgradeGovernor]\n  * propose transactions [via: UpgradeGovernor]\n* Can interact with SystemConfig\n  * it can update the preconfer address, the batch submitter (Sequencer) address and the gas configuration of the system [via: UpgradeGovernor → Timelock]","discoveryDrivenData":true},{"id":"KromaSecurityCouncil","name":"KromaSecurityCouncil","accounts":[{"address":"eth:0x3de211088dF516da72efe68D386b561BEE256Ec4","type":"Contract","isVerified":true,"name":"0x3de2…6Ec4","url":"https://etherscan.io/address/0x3de211088dF516da72efe68D386b561BEE256Ec4"}],"chain":"ethereum","references":[{"title":"Security Council members - Announcing Kroma Security Council","url":"https://blog.kroma.network/announcing-kroma-security-council-435b540d2ab4"}],"description":"Custom Multisig contract in which each signer is identified by a token. The threshold is 8 and the token contract is called SecurityCouncilToken.\n* Can interact with Colosseum\n  * dismiss ongoing challenges and override state roots (`forceDeleteOutput()`) \n* Can interact with ValidatorPool\n  * become a validator without posting a bond \n* A Guardian - acting directly","discoveryDrivenData":true},{"id":"SP1VerifierGatewayMultisig","name":"SP1VerifierGatewayMultisig","description":"A Multisig with 2/3 threshold. \n* Can interact with SP1VerifierGateway\n  * affect the liveness and safety of the gateway - can transfer ownership, add and freeze verifier routes ","accounts":[{"address":"eth:0xCafEf00d348Adbd57c37d1B77e0619C6244C6878","type":"Contract","isVerified":true,"name":"0xCafE…6878","url":"https://etherscan.io/address/0xCafEf00d348Adbd57c37d1B77e0619C6244C6878"}],"chain":"ethereum","references":[],"participants":[{"address":"eth:0xBaB2c2aF5b91695e65955DA60d63aD1b2aE81126","type":"EOA","isVerified":true,"name":"0xBaB2…1126","url":"https://etherscan.io/address/0xBaB2c2aF5b91695e65955DA60d63aD1b2aE81126"},{"address":"eth:0x72Ff26D9517324eEFA89A48B75c5df41132c4f54","type":"EOA","isVerified":true,"name":"0x72Ff…4f54","url":"https://etherscan.io/address/0x72Ff26D9517324eEFA89A48B75c5df41132c4f54"},{"address":"eth:0x9395e83720bf2D8ac6435f9c520b48E289Cb8885","type":"EOA","isVerified":true,"name":"0x9395…8885","url":"https://etherscan.io/address/0x9395e83720bf2D8ac6435f9c520b48E289Cb8885"}],"discoveryDrivenData":true},{"id":"Kroma Multisig","name":"Kroma Multisig","description":"A Multisig with 3/5 threshold. \nEscrows a pool of KRO used as validator rewards by the AssetManager.\n","accounts":[{"address":"eth:0xe57E217d8ed498992452791622711B866403E950","type":"Contract","isVerified":true,"name":"0xe57E…E950","url":"https://etherscan.io/address/0xe57E217d8ed498992452791622711B866403E950"}],"chain":"ethereum","references":[],"participants":[{"address":"eth:0x547fc089E9f2971d27b9780214ED891F6d154faa","type":"EOA","isVerified":true,"name":"0x547f…4faa","url":"https://etherscan.io/address/0x547fc089E9f2971d27b9780214ED891F6d154faa"},{"address":"eth:0x138AAFab6Dc4Fd30957da1Bbded441ABF9Ccb848","type":"EOA","isVerified":true,"name":"0x138A…b848","url":"https://etherscan.io/address/0x138AAFab6Dc4Fd30957da1Bbded441ABF9Ccb848"},{"address":"eth:0xc0ab283E81aE99197Cfe1C8BEE9C593CD4FF7FB3","type":"EOA","isVerified":true,"name":"0xc0ab…7FB3","url":"https://etherscan.io/address/0xc0ab283E81aE99197Cfe1C8BEE9C593CD4FF7FB3"},{"address":"eth:0xF5624B7E74C4Ed876C9793C7895184747a8D2310","type":"EOA","isVerified":true,"name":"0xF562…2310","url":"https://etherscan.io/address/0xF5624B7E74C4Ed876C9793C7895184747a8D2310"},{"address":"eth:0xEEE06120a1861102D69Aa69535091a8FE72D9e43","type":"EOA","isVerified":true,"name":"0xEEE0…9e43","url":"https://etherscan.io/address/0xEEE06120a1861102D69Aa69535091a8FE72D9e43"}],"discoveryDrivenData":true},{"id":"EOA-1","name":"EOA 1","accounts":[{"address":"eth:0x41b8cD6791De4D8f9E0eaF7861aC506822AdcE12","type":"EOA","isVerified":true,"name":"0x41b8…cE12","url":"https://etherscan.io/address/0x41b8cD6791De4D8f9E0eaF7861aC506822AdcE12"}],"chain":"ethereum","description":"* A Sequencer - acting directly","discoveryDrivenData":true},{"id":"EOA-2,-EOA-3,-EOA-4,-KromaOperator,-EOA-5,-EOA-6,-EOA-7,-EOA-8,-EOA-9-and-EOA-10","name":"EOA 2, EOA 3, EOA 4, KromaOperator, EOA 5, EOA 6, EOA 7, EOA 8, EOA 9 and EOA 10","accounts":[{"address":"eth:0x16876e5c608cec36968517A9Eb345269D308D94a","type":"EOA","isVerified":true,"name":"0x1687…D94a","url":"https://etherscan.io/address/0x16876e5c608cec36968517A9Eb345269D308D94a"},{"address":"eth:0x27EFE61C5266e461995141f57b4D13F13c83f786","type":"EOA","isVerified":true,"name":"0x27EF…f786","url":"https://etherscan.io/address/0x27EFE61C5266e461995141f57b4D13F13c83f786"},{"address":"eth:0x3a4F65D1ACFb2A3F5AD93ef7b240bfa1079052e0","type":"EOA","isVerified":true,"name":"0x3a4F…52e0","url":"https://etherscan.io/address/0x3a4F65D1ACFb2A3F5AD93ef7b240bfa1079052e0"},{"address":"eth:0x3aa00bb915A8e78b0523E4c365e3E70A19d329e6","type":"EOA","isVerified":true,"name":"0x3aa0…29e6","url":"https://etherscan.io/address/0x3aa00bb915A8e78b0523E4c365e3E70A19d329e6"},{"address":"eth:0x42a4f1958A5d99A62C50eb24a80d1D8b142ea3A1","type":"EOA","isVerified":true,"name":"0x42a4…a3A1","url":"https://etherscan.io/address/0x42a4f1958A5d99A62C50eb24a80d1D8b142ea3A1"},{"address":"eth:0x5ddcf494A8b6EeE4904934E829109cCF584EAF80","type":"EOA","isVerified":true,"name":"0x5ddc…AF80","url":"https://etherscan.io/address/0x5ddcf494A8b6EeE4904934E829109cCF584EAF80"},{"address":"eth:0x66FA82F4AEA284d1d208437F179dFE13d8118f3A","type":"EOA","isVerified":true,"name":"0x66FA…8f3A","url":"https://etherscan.io/address/0x66FA82F4AEA284d1d208437F179dFE13d8118f3A"},{"address":"eth:0x77Fe100758c5320cdfBb4f4a0Bed57885c97158A","type":"EOA","isVerified":true,"name":"0x77Fe…158A","url":"https://etherscan.io/address/0x77Fe100758c5320cdfBb4f4a0Bed57885c97158A"},{"address":"eth:0x8ECF028Cd647379E580DaA6701A11154750fcd3c","type":"EOA","isVerified":true,"name":"0x8ECF…cd3c","url":"https://etherscan.io/address/0x8ECF028Cd647379E580DaA6701A11154750fcd3c"},{"address":"eth:0xD417Ff17bf3cFD7260a4De20C6864090aA0503cC","type":"EOA","isVerified":true,"name":"0xD417…03cC","url":"https://etherscan.io/address/0xD417Ff17bf3cFD7260a4De20C6864090aA0503cC"}],"chain":"ethereum","description":"* Can interact with SecurityCouncilTokenOwners\n  * one of the signers of the KromaSecurityCouncil ","discoveryDrivenData":true}]},"arbitrum":{"roles":[],"actors":[{"id":"SP1VerifierGatewayMultisig","name":"SP1VerifierGatewayMultisig","description":"A Multisig with 2/3 threshold. \n* Can interact with SP1VerifierGateway\n  * affect the liveness and safety of the gateway - can transfer ownership, add and freeze verifier routes ","accounts":[{"address":"arb1:0xCafEf00d348Adbd57c37d1B77e0619C6244C6878","type":"Contract","isVerified":true,"name":"0xCafE…6878","url":"https://arbiscan.io/address/0xCafEf00d348Adbd57c37d1B77e0619C6244C6878"}],"chain":"arbitrum","references":[],"participants":[{"address":"arb1:0xBaB2c2aF5b91695e65955DA60d63aD1b2aE81126","type":"EOA","isVerified":true,"name":"0xBaB2…1126","url":"https://arbiscan.io/address/0xBaB2c2aF5b91695e65955DA60d63aD1b2aE81126"},{"address":"arb1:0x72Ff26D9517324eEFA89A48B75c5df41132c4f54","type":"EOA","isVerified":true,"name":"0x72Ff…4f54","url":"https://arbiscan.io/address/0x72Ff26D9517324eEFA89A48B75c5df41132c4f54"},{"address":"arb1:0x9395e83720bf2D8ac6435f9c520b48E289Cb8885","type":"EOA","isVerified":true,"name":"0x9395…8885","url":"https://arbiscan.io/address/0x9395e83720bf2D8ac6435f9c520b48E289Cb8885"}],"discoveryDrivenData":true}]},"base":{"roles":[],"actors":[{"id":"SP1VerifierGatewayMultisig","name":"SP1VerifierGatewayMultisig","description":"A Multisig with 2/3 threshold. \n* Can interact with SP1VerifierGateway\n  * affect the liveness and safety of the gateway - can transfer ownership, add and freeze verifier routes ","accounts":[{"address":"base:0xCafEf00d348Adbd57c37d1B77e0619C6244C6878","type":"Contract","isVerified":true,"name":"0xCafE…6878","url":"https://basescan.org/address/0xCafEf00d348Adbd57c37d1B77e0619C6244C6878"}],"chain":"base","references":[],"participants":[{"address":"base:0xBaB2c2aF5b91695e65955DA60d63aD1b2aE81126","type":"EOA","isVerified":true,"name":"0xBaB2…1126","url":"https://basescan.org/address/0xBaB2c2aF5b91695e65955DA60d63aD1b2aE81126"},{"address":"base:0x72Ff26D9517324eEFA89A48B75c5df41132c4f54","type":"EOA","isVerified":true,"name":"0x72Ff…4f54","url":"https://basescan.org/address/0x72Ff26D9517324eEFA89A48B75c5df41132c4f54"},{"address":"base:0x9395e83720bf2D8ac6435f9c520b48E289Cb8885","type":"EOA","isVerified":true,"name":"0x9395…8885","url":"https://basescan.org/address/0x9395e83720bf2D8ac6435f9c520b48E289Cb8885"}],"discoveryDrivenData":true}]}},"contracts":{"addresses":{"ethereum":[{"name":"SystemConfig","isVerified":true,"address":"eth:0x3971EB866AA9b2b8aFEa8a7C816F3b7e8b195a35","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x665c23A5722B6A237fa6Be2B49c0A94504db1edd"],"implementations":["eth:0x2af8a383C395EBa6551E674EeD02344936fE36f5"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1693880903,"transactionHash":"0x3dcaff162fff51f2f6ba6264967bb5a3e6e9aefeb290b159109038ae38455e10","implementations":["eth:0x2af8a383C395EBa6551E674EeD02344936fE36f5"]}],"description":"Contains configuration parameters such as the Sequencer address, gas limit on this chain and the unsafe block signer address.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately SecurityCouncilTokenOwners\n  * **batcherHash**: EOA 1\n  * **owner**: Timelock; ultimately SecurityCouncilTokenOwners","upgradableBy":[{"name":"SecurityCouncilTokenOwners","delay":"no"}],"discoveryDrivenData":true},{"name":"L1CrossDomainMessenger","isVerified":true,"address":"eth:0x46B8bB4C5dd27bB42807Db477af4d1a7C8A5B746","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x665c23A5722B6A237fa6Be2B49c0A94504db1edd"],"implementations":["eth:0x675924D68200F2C967Ba12349d5d510676C7214c"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1693880687,"transactionHash":"0xc077167cfc27b631ad397c64fd72bcaf2c8fcc7c9f08498eb247abc0094354a5","implementations":["eth:0x675924D68200F2C967Ba12349d5d510676C7214c"]}],"description":"Sends messages from host chain to this chain, and relays messages back onto host chain. In the event that a message sent from host chain to this chain is rejected for exceeding this chain's epoch gas limit, it can be resubmitted via this contract's replay function.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately SecurityCouncilTokenOwners","upgradableBy":[{"name":"SecurityCouncilTokenOwners","delay":"no"}],"discoveryDrivenData":true},{"name":"L1ERC721Bridge","isVerified":true,"address":"eth:0x46d07221dfC313afe1BF104F4bB1f185301D65B9","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x665c23A5722B6A237fa6Be2B49c0A94504db1edd"],"implementations":["eth:0xbB1cDB5Cc35B1c9801DA8772aCBcDbd323A912D9"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1693288091,"transactionHash":"0xb5f090dda7636b95e017de8e0619fc4d6f706b7b4a2a9bbd07996bd85ef70bad","implementations":["eth:0x0257e4d92C00C9EfcCa1d641b224d7d09cfa4522"]},{"timestamp":1693880735,"transactionHash":"0x2aaca06bcfebdfe7511fe20033c1af5dd9c4cae053340995621ce10da29392ec","implementations":["eth:0xbB1cDB5Cc35B1c9801DA8772aCBcDbd323A912D9"]}],"description":"Used to bridge ERC-721 tokens from host chain to this chain.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately SecurityCouncilTokenOwners","upgradableBy":[{"name":"SecurityCouncilTokenOwners","delay":"no"}],"discoveryDrivenData":true},{"name":"L1StandardBridge","isVerified":true,"address":"eth:0x827962404D7104202C5aaa6b929115C8211d9596","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x665c23A5722B6A237fa6Be2B49c0A94504db1edd"],"implementations":["eth:0x404133EdF24F56b7dD9c6d89Fb56bb35244461B4"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1693880711,"transactionHash":"0xe67e8f042d304b70f1fd718343378219e0be9c49ed4a8242f8f96ea9ced2c0fd","implementations":["eth:0x404133EdF24F56b7dD9c6d89Fb56bb35244461B4"]}],"description":"The main entry point to deposit ERC20 tokens from host chain to this chain.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately SecurityCouncilTokenOwners","upgradableBy":[{"name":"SecurityCouncilTokenOwners","delay":"no"}],"discoveryDrivenData":true},{"name":"ZKProofVerifier","isVerified":true,"address":"eth:0x005DDC466C804c79adB079c120347dDE48132105","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x665c23A5722B6A237fa6Be2B49c0A94504db1edd"],"implementations":["eth:0x9f2Ec7196596581806218D3D183581b00e5a444E"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1739162903,"transactionHash":"0x78625237350cb2047aa1ec6392d2402dabf1a5d44d54e0142ae27d19546c8c74","implementations":["eth:0x9f2Ec7196596581806218D3D183581b00e5a444E"]}],"description":"* Roles:\n  * **admin**: ProxyAdmin; ultimately SecurityCouncilTokenOwners","upgradableBy":[{"name":"SecurityCouncilTokenOwners","delay":"no"}],"discoveryDrivenData":true},{"name":"L2OutputOracle","isVerified":true,"address":"eth:0x180c77aE51a9c505a43A2C7D81f8CE70cacb93A6","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x665c23A5722B6A237fa6Be2B49c0A94504db1edd"],"implementations":["eth:0x4B68F22d96a04F6d80e284C20A648f8Da2fD569b"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1693880807,"transactionHash":"0xf1ce5facb5ac6b858552c8af4867797e1c69ad89629f1c836b7f489770683783","implementations":["eth:0x14126FFa3889a026A79F0f99FaE80B3dc9E38095"]},{"timestamp":1729744127,"transactionHash":"0xb2a500d332d7b3348b8ffa91aba9b8a5a3bc018b44225a1b6e99605c56c6564e","implementations":["eth:0x4B68F22d96a04F6d80e284C20A648f8Da2fD569b"]}],"description":"The L2OutputOracle contract contains a list of proposed state roots which Proposers assert to be a result of block execution. Anyone can participate as a Proposer by depositing in the ValidatorPool. A root can be proposed every 1800 blocks (2s block time).\n* Roles:\n  * **admin**: ProxyAdmin; ultimately SecurityCouncilTokenOwners","upgradableBy":[{"name":"SecurityCouncilTokenOwners","delay":"no"}],"discoveryDrivenData":true},{"name":"Timelock","isVerified":true,"address":"eth:0x22605A12cB77Fe420B0cC1263cEb58a77352FDc1","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x665c23A5722B6A237fa6Be2B49c0A94504db1edd"],"implementations":["eth:0xe44da6e9fA92E3FD897Da84d38fa6B9322Dd22c3"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1693881035,"transactionHash":"0xc92251d7f8a454b533f0e272ba324cb7572ca4142aabf17cd29821e1d8ebfe1b","implementations":["eth:0x595E1b330892Fcbf18b2BF099DE501Ad4d6A07C4"]},{"timestamp":1700638271,"transactionHash":"0xf4e23f51e23f9549e6bed354f5330524c65d5796b765bd38fdacdb6758e7f8ff","implementations":["eth:0xe44da6e9fA92E3FD897Da84d38fa6B9322Dd22c3"]}],"description":"A standard timelock with access control. The current minimum delay is 0s.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately SecurityCouncilTokenOwners\n  * **canceller**: UpgradeGovernor; ultimately SecurityCouncilTokenOwners\n  * **executor**: UpgradeGovernor; ultimately SecurityCouncilTokenOwners\n  * **proposer**: UpgradeGovernor; ultimately SecurityCouncilTokenOwners\n  * **timelockAdmin**: Timelock, UpgradeGovernor; ultimately SecurityCouncilTokenOwners","upgradableBy":[{"name":"SecurityCouncilTokenOwners","delay":"no"}],"discoveryDrivenData":true},{"name":"ValidatorManager","isVerified":true,"address":"eth:0x232277d9672eEdd53c4B26C0F386C2Eb88DC7363","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x665c23A5722B6A237fa6Be2B49c0A94504db1edd"],"implementations":["eth:0x8687b9ecD75ea00997a999B9DdE54C735DE9DEE1"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1729744127,"transactionHash":"0xb2a500d332d7b3348b8ffa91aba9b8a5a3bc018b44225a1b6e99605c56c6564e","implementations":["eth:0x0Ed7bb332F7307F5c97E566E74A4A73ab6671082"]},{"timestamp":1739162903,"transactionHash":"0x78625237350cb2047aa1ec6392d2402dabf1a5d44d54e0142ae27d19546c8c74","implementations":["eth:0x8687b9ecD75ea00997a999B9DdE54C735DE9DEE1"]}],"description":"Manages the set of Proposers (Validators in Kroma) and selects the next proposer with the window to submit the output root within 30m, after which anyone can propose for them. It is also the entry point for other contracts, such as the L2OutputOracle and the Colosseum, which distribute output rewards and slash challenge losers. It makes successive calls to the AssetManager to apply changes to the proposers' assets.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately SecurityCouncilTokenOwners","upgradableBy":[{"name":"SecurityCouncilTokenOwners","delay":"no"}],"discoveryDrivenData":true},{"name":"KromaPortal","isVerified":true,"address":"eth:0x31F648572b67e60Ec6eb8E197E1848CC5F5558de","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x665c23A5722B6A237fa6Be2B49c0A94504db1edd"],"implementations":["eth:0x5C8eE8323a33ebBF3ea3c6c3b84DACFca44A9316"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1693880879,"transactionHash":"0x3166f6173eb630e96f74c5c9d6765cd93e39566dc592a423fddae11eb09f8d17","implementations":["eth:0x381F53695230BAF83a39D1a08304D233A35730Fa"]},{"timestamp":1739162903,"transactionHash":"0x78625237350cb2047aa1ec6392d2402dabf1a5d44d54e0142ae27d19546c8c74","implementations":["eth:0x5C8eE8323a33ebBF3ea3c6c3b84DACFca44A9316"]}],"description":"This is a fork of the standard OP stack OptimismPortal contract, the main entry point to deposit funds from L1 to L2. It also allows to prove and finalize withdrawals.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately SecurityCouncilTokenOwners\n  * **guardian**: KromaSecurityCouncil","upgradableBy":[{"name":"SecurityCouncilTokenOwners","delay":"no"}],"discoveryDrivenData":true},{"name":"ZKMerkleTrie","isVerified":true,"address":"eth:0x339208824010425cBE73201ceD4372308ACD610B","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Merkle Trie contract used to prove withdrawals that were initiated in the legacy system, deprecated for new withdrawals and succeeded by a merkle tree library in the KromaPortal.\n","discoveryDrivenData":true},{"name":"ProxyAdmin","isVerified":true,"address":"eth:0x665c23A5722B6A237fa6Be2B49c0A94504db1edd","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"* Roles:\n  * **owner**: Timelock","discoveryDrivenData":true},{"name":"ZkVerifier","isVerified":true,"address":"eth:0x6deb6a630D7b486c1C08d4016AEe3835a2F52Fa7","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x665c23A5722B6A237fa6Be2B49c0A94504db1edd"],"implementations":["eth:0x4cd05aB629055a449617a28E3466660403eA7126"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1693288163,"transactionHash":"0x6ab34004b7846a1d1406bc53825ee386d905f8499c72ab9bfe07f4721d773ae9","implementations":["eth:0xD3b1D396330EA8dd79615f12433B856160d7D8B4"]},{"timestamp":1693539719,"transactionHash":"0x66fecb7dffc867d91d6f840e65fc28f81ad1301204cfca38b3bbb22146ffa361","implementations":["eth:0x7E79726560B140fd6e089547bD049509F5423BFf"]},{"timestamp":1718950391,"transactionHash":"0xe56ba658fc810d727438e3bb124aa2e8ef1c25e5c21cbfe9715983ba5ce65a63","implementations":["eth:0x4cd05aB629055a449617a28E3466660403eA7126"]}],"description":"ZK verifier used to verify the last step of a legacy zkEVM proof, which corresponds to a block.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately SecurityCouncilTokenOwners","upgradableBy":[{"name":"SecurityCouncilTokenOwners","delay":"no"}],"discoveryDrivenData":true},{"name":"Colosseum","isVerified":true,"address":"eth:0x713C2BEd44eB45D490afB8D4d1aA6F12290B829a","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x665c23A5722B6A237fa6Be2B49c0A94504db1edd"],"implementations":["eth:0xBFcA810D1c26a3aC6F81a32Ab5C023F24bE93dAC"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1693880831,"transactionHash":"0x70494d42df3a5668be6ac9bd1a46cdcfebe8980cae31dddcb7ec86c97200d60f","implementations":["eth:0x7526F997ea040B3949415c3a44e708273863AA2b"]},{"timestamp":1712304899,"transactionHash":"0xd420f3a8af8254ca1095409b3c4c2a3a1faa26fbe50c0477663e1bcb39727dfc","implementations":["eth:0x311b4A33b6dC4e080eE0d98caAaf8dF86C833066"]},{"timestamp":1714032551,"transactionHash":"0x0fb2eca6483b1d042af562bf0e8e804c1356df56d7b8094e9d6edd4b63edf715","implementations":["eth:0xb87eaB624EE684C1799f1E8b24936A1c90759eEc"]},{"timestamp":1729744127,"transactionHash":"0xb2a500d332d7b3348b8ffa91aba9b8a5a3bc018b44225a1b6e99605c56c6564e","implementations":["eth:0xAB54b3e775f645cf4486039bfA4dA539E70c9f99"]},{"timestamp":1739162903,"transactionHash":"0x78625237350cb2047aa1ec6392d2402dabf1a5d44d54e0142ae27d19546c8c74","implementations":["eth:0xBFcA810D1c26a3aC6F81a32Ab5C023F24bE93dAC"]}],"description":"Contract used to challenge state roots and prove fraud. If successful, the wrong state root in the L2OutputOracle is replaced.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately SecurityCouncilTokenOwners\n  * **security_council**: KromaSecurityCouncil","upgradableBy":[{"name":"SecurityCouncilTokenOwners","delay":"no"}],"discoveryDrivenData":true},{"name":"USDCBridge","isVerified":true,"address":"eth:0x7e1Bdb9ee75B6ef1BCAAE3B1De1c616C7B11ef6e","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x22605A12cB77Fe420B0cC1263cEb58a77352FDc1"],"implementations":["eth:0xE4e9F3AD8A6F224c4b39854D3550AD258441AfE3"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1700122631,"transactionHash":"0x04a7ec0dad1a7a0ebf4cb2bd1f983b19d43e57972e91c4e73aabf2bff3530014","implementations":["eth:0xE4e9F3AD8A6F224c4b39854D3550AD258441AfE3"]}],"description":"* Roles:\n  * **admin**: Timelock; ultimately SecurityCouncilTokenOwners","upgradableBy":[{"name":"SecurityCouncilTokenOwners","delay":"no"}],"discoveryDrivenData":true},{"name":"AssetManager","isVerified":true,"address":"eth:0xa295310DE52b86F236A815AFb2f518F3C0F5A6D3","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x665c23A5722B6A237fa6Be2B49c0A94504db1edd"],"implementations":["eth:0xf34fa8D3ac4AAcAD8307da8C8E51bDddCDa60Ede"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1729744127,"transactionHash":"0xb2a500d332d7b3348b8ffa91aba9b8a5a3bc018b44225a1b6e99605c56c6564e","implementations":["eth:0xf34fa8D3ac4AAcAD8307da8C8E51bDddCDa60Ede"]}],"description":"Manages the delegation and undelegation of KRO tokens and Kroma Guardian House (KGH) NFTs for Proposers (Kroma Validators) and distributes rewards.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately SecurityCouncilTokenOwners","upgradableBy":[{"name":"SecurityCouncilTokenOwners","delay":"no"}],"discoveryDrivenData":true},{"name":"UpgradeGovernor","isVerified":true,"address":"eth:0xb3c415c2Aad428D5570208e1772cb68e7D06a537","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x665c23A5722B6A237fa6Be2B49c0A94504db1edd"],"implementations":["eth:0x64F8F4EB207D51F74caf6db644Bf710Ad86989b3"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1693881059,"transactionHash":"0x1474ff104cbd078775403ee9b33a18394d045e5e00e03e94586e73a3596cbde0","implementations":["eth:0x2a51e099CC7AF922CcDe7F3db909DC7b71B8D030"]},{"timestamp":1700638271,"transactionHash":"0xf4e23f51e23f9549e6bed354f5330524c65d5796b765bd38fdacdb6758e7f8ff","implementations":["eth:0x64F8F4EB207D51F74caf6db644Bf710Ad86989b3"]}],"description":"A governance proxy contract using token voting with SecurityCouncilTokenOwners as identification of actors allowed to vote/sign a proposal which is passed to the Timelock afterwards.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately SecurityCouncilTokenOwners\n  * **token**: SecurityCouncilTokenOwners","upgradableBy":[{"name":"SecurityCouncilTokenOwners","delay":"no"}],"discoveryDrivenData":true},{"name":"ValidatorPool","isVerified":true,"address":"eth:0xFdFF462845953D90719A78Fd12a2d103541d2103","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x665c23A5722B6A237fa6Be2B49c0A94504db1edd"],"implementations":["eth:0xE36776FFA20a9206dcD742C981402a3f3d81938d"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1693880783,"transactionHash":"0x31c5282eb4cc1bcf3b3a3fbbbb0116c0ee335b4ccabd497f02b2761b0bc65dbd","implementations":["eth:0x6e1781678ffE6CDc109fd3bC0833c47BD0F23de1"]},{"timestamp":1700638271,"transactionHash":"0xf4e23f51e23f9549e6bed354f5330524c65d5796b765bd38fdacdb6758e7f8ff","implementations":["eth:0x3eb033BAc5c449bDcb6D082c4f728eDAfC8D75fa"]},{"timestamp":1712304899,"transactionHash":"0xd420f3a8af8254ca1095409b3c4c2a3a1faa26fbe50c0477663e1bcb39727dfc","implementations":["eth:0x8EDc4cCa2aF96f5D5141d55333043a65c3f59Ec4"]},{"timestamp":1729744127,"transactionHash":"0xb2a500d332d7b3348b8ffa91aba9b8a5a3bc018b44225a1b6e99605c56c6564e","implementations":["eth:0xE36776FFA20a9206dcD742C981402a3f3d81938d"]}],"description":"Contract used to manage the Proposers. Anyone can submit a deposit and bond to a state root, or create a challenge. It also manages the Proposer rotation for each submittable block using a random selection. If the selected proposer fails to publish a root within 30m then the submission becomes open to everyone.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately SecurityCouncilTokenOwners\n  * **security_council**: KromaSecurityCouncil","upgradableBy":[{"name":"SecurityCouncilTokenOwners","delay":"no"}],"discoveryDrivenData":true},{"name":"SP1Verifier","isVerified":true,"address":"eth:0x0459d576A6223fEeA177Fb3DF53C9c77BF84C459","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Verifier contract for SP1 proofs (v5.0.0).\n","discoveryDrivenData":true},{"name":"SP1VerifierGateway","isVerified":true,"address":"eth:0x3B6041173B80E77f038f3F2C0f9744f04837185e","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"This contract is the router for zk proof verification. It stores the mapping between identifiers and the address of onchain verifier contracts, routing each identifier to the corresponding verifier contract.\n* Roles:\n  * **owner**: SP1VerifierGatewayMultisig","discoveryDrivenData":true}],"arbitrum":[{"name":"SP1Verifier","isVerified":true,"address":"arb1:0x0459d576A6223fEeA177Fb3DF53C9c77BF84C459","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"arbitrum","description":"Verifier contract for SP1 proofs (v5.0.0).\n","discoveryDrivenData":true},{"name":"SP1VerifierGateway","isVerified":true,"address":"arb1:0x3B6041173B80E77f038f3F2C0f9744f04837185e","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"arbitrum","description":"This contract is the router for zk proof verification. It stores the mapping between identifiers and the address of onchain verifier contracts, routing each identifier to the corresponding verifier contract.\n* Roles:\n  * **owner**: SP1VerifierGatewayMultisig","discoveryDrivenData":true}],"base":[{"name":"SP1Verifier","isVerified":true,"address":"base:0x0459d576A6223fEeA177Fb3DF53C9c77BF84C459","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"base","description":"Verifier contract for SP1 proofs (v5.0.0).\n","discoveryDrivenData":true},{"name":"SP1VerifierGateway","isVerified":true,"address":"base:0x3B6041173B80E77f038f3F2C0f9744f04837185e","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"base","description":"This contract is the router for zk proof verification. It stores the mapping between identifiers and the address of onchain verifier contracts, routing each identifier to the corresponding verifier contract.\n* Roles:\n  * **owner**: SP1VerifierGatewayMultisig","discoveryDrivenData":true}]},"risks":[{"category":"Funds can be stolen if","text":"a contract receives a malicious code upgrade. There is no delay on code upgrades.","isCritical":true}]},"milestones":[{"title":"Kroma shutdown announcement","url":"https://x.com/kroma_network/status/1936692354603520198","date":"2025-06-20T00:00:00.00Z","description":"Kroma announces its shutdown on June 30, 2025. Users must withdraw their funds before that date.","type":"incident"},{"title":"Plonky3 vulnerability patch","url":"https://x.com/SuccinctLabs/status/1929773028034204121","date":"2025-06-04T00:00:00.00Z","description":"SP1 verifier is patched to fix critical vulnerability in Plonky3 proof system (SP1 dependency).","type":"incident"},{"title":"SP1 fault proofs upgrade","url":"https://blog.kroma.network/kromas-transition-to-zkvm-fault-proof-b8c8d2dc39c6","date":"2025-02-11T00:00:00Z","description":"Kroma adds an option to prove faults using the SP1 zk virtual machine.","type":"general"},{"title":"Chain fork #2 - Output root replaced","url":"https://x.com/kroma_network/status/1774683208753590506","date":"2024-04-05T00:00:00Z","description":"The chain forked and an L2 output on Ethereum has to be replaced by the Security Council.","type":"incident"},{"title":"Chain fork - Output root replaced","url":"https://x.com/kroma_network/status/1767478100819153009","date":"2024-03-18T00:00:00Z","description":"The chain forked and an L2 output on Ethereum has to be replaced by the Security Council.","type":"incident"},{"title":"Ecotone upgrade","url":"https://twitter.com/kroma_network/status/1783410075346063564","date":"2024-04-25T00:00:00.00Z","description":"Introduces EIP-4844 data blobs for L1 data availability and more L2 opcodes.","type":"general"},{"title":"Mainnet Launch","url":"https://twitter.com/kroma_network/status/1699267271968055305?s=20","date":"2023-09-06T00:00:00Z","description":"Kroma is live on mainnet.","type":"general"}],"discoveryInfo":{"isDiscoDriven":false,"permissionsDiscoDriven":false,"contractsDiscoDriven":false,"baseTimestamp":1752575723,"hasDiscoUi":false}}