{"type":"layer2","id":"paradex","capability":"universal","addedAt":1698756386,"badges":[{"id":"CairoVM","type":"VM","name":"CairoVM","description":"This project uses the Cairo Virtual Machine to run its smart contracts and supports the Cairo programming language","action":{"type":"scalingFilter","id":"vm","value":"CairoVM"}},{"id":"EthereumBlobs","type":"DA","name":"Ethereum with blobs","description":"This project is posting its data to Ethereum as blobs","action":{"type":"publicDaHighlight","slug":"ethereum"}},{"id":"SNStack","type":"Stack","name":"Built on the SN Stack","description":"The project is built on the SN Stack","action":{"type":"scalingFilter","id":"stack","value":"SN Stack"}},{"id":"SHARP","type":"Infra","name":"Uses SHARP","description":"The project uses a shared prover contract - SHARP","action":{"type":"scalingFilter","id":"infrastructure","value":"SHARP"}}],"display":{"name":"Paradex","slug":"paradex","stacks":["SN Stack"],"description":"Paradex is a high-performance crypto-derivatives exchange built on a Starknet Appchain.","purposes":["Universal","Exchange"],"links":{"websites":["https://paradex.trade/"],"bridges":["https://app.paradex.trade","https://paradex.trade/stats"],"documentation":["https://docs.paradex.trade/"],"repositories":["https://github.com/tradeparadex"],"socialMedia":["https://twitter.com/tradeparadex","https://discord.com/invite/paradex"]},"liveness":{"explanation":"Paradex is a ZK rollup that posts state diffs to the L1. For a transaction to be considered final, the state diffs have to be submitted and validity proof should be generated, submitted, and verified. Proofs are aggregated with other projects using SHARP and state updates have to refer to proved claims."}},"proofSystem":{"type":"Validity","zkCatalogId":"stone"},"chainConfig":{"name":"paradex","gasTokens":["ETH"],"apis":[{"type":"starknet","url":"https://pathfinder.api.prod.paradex.trade/rpc/v0_7","callsPerMinute":120}]},"config":{"activityConfig":{"type":"block"},"escrows":[{"address":"0xE3cbE3A636AB6A754e9e41B12b09d09Ce9E53Db3","sinceTimestamp":1692341159,"tokens":["USDC"],"contract":{"isVerified":true,"address":"eth:0xE3cbE3A636AB6A754e9e41B12b09d09Ce9E53Db3","upgradeability":{"proxyType":"StarkWare proxy","admins":["eth:0xFF57A3bB6465501c993acF8f3b29125a862661C0"],"implementations":["eth:0x8A4e51ff0F2a45899519e6049FB2D1F038Be1e77"],"immutable":false},"chain":"ethereum","description":"Paradex USDC Escrow. The current bridge cap is 100 M USDC.","upgradableBy":[{"name":"USDC Escrow owner","delay":"0s"}]},"chain":"ethereum","includeInTotal":true}],"daTracking":[{"type":"ethereum","daLayer":"ethereum","sinceBlock":0,"inbox":"0xF338cad020D506e8e3d9B4854986E0EcE6C23640","sequencers":["0xC70ae19B5FeAA5c19f576e621d2bad9771864fe2"]}],"trackedTxs":[{"uses":[{"type":"liveness","subtype":"proofSubmissions"}],"query":{"formula":"sharpSubmission","sinceTimestamp":1636978914,"untilTimestamp":1704729971,"programHashes":["3258367057337572248818716706664617507069572185152472699066582725377748079373"]}},{"uses":[{"type":"liveness","subtype":"proofSubmissions"}],"query":{"formula":"sharpSubmission","sinceTimestamp":1704729971,"untilTimestamp":1706626427,"programHashes":["54878256403880350656938046611252303365750679698042371543935159963667935317"]}},{"uses":[{"type":"liveness","subtype":"proofSubmissions"}],"query":{"formula":"sharpSubmission","sinceTimestamp":1706626427,"untilTimestamp":1710346919,"programHashes":["2479841346739966073527450029179698923866252973805981504232089731754042431018"]}},{"uses":[{"type":"liveness","subtype":"proofSubmissions"}],"query":{"formula":"sharpSubmission","sinceTimestamp":1710346919,"untilTimestamp":1710764843,"programHashes":["109586309220455887239200613090920758778188956576212125550190099009305121410"]}},{"uses":[{"type":"liveness","subtype":"proofSubmissions"}],"query":{"formula":"sharpSubmission","sinceTimestamp":1710764843,"untilTimestamp":1725811535,"programHashes":["3383082961563516565935611087683915026448707331436034043529592588079494402084"]}},{"uses":[{"type":"liveness","subtype":"proofSubmissions"}],"query":{"formula":"sharpSubmission","sinceTimestamp":1725811535,"untilTimestamp":1744056299,"programHashes":["853638403225561750106379562222782223909906501242604214771127703946595519856"]}},{"uses":[{"type":"liveness","subtype":"proofSubmissions"}],"query":{"formula":"sharpSubmission","sinceTimestamp":1725811535,"untilTimestamp":1744056299,"programHashes":["1161178844461337253856226043908368523817098764221830529880464854589141231910"]}},{"uses":[{"type":"liveness","subtype":"proofSubmissions"}],"query":{"formula":"sharpSubmission","sinceTimestamp":1744056299,"programHashes":["2534935718742676028234156221136000178296467523045214874259117268197132196876"]}},{"uses":[{"type":"liveness","subtype":"proofSubmissions"}],"query":{"formula":"sharpSubmission","sinceTimestamp":1744056299,"programHashes":["273279642033703284306509103355536170486431195329675679055627933497997642494"]}},{"uses":[{"type":"liveness","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0xF338cad020D506e8e3d9B4854986E0EcE6C23640","selector":"0x77552641","functionSignature":"function updateState(uint256[] programOutput, uint256 onchainDataHash, uint256 onchainDataSize)","sinceTimestamp":1689850631}},{"uses":[{"type":"liveness","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0xF338cad020D506e8e3d9B4854986E0EcE6C23640","selector":"0xb72d42a1","functionSignature":"function updateStateKzgDA(uint256[] programOutput, bytes kzgProof)","sinceTimestamp":1710346919,"untilTimestamp":1725811535}},{"uses":[{"type":"liveness","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0xF338cad020D506e8e3d9B4854986E0EcE6C23640","selector":"0x507ee528","functionSignature":"function updateStateKzgDA(uint256[] programOutput, bytes[] kzgProofs)","sinceTimestamp":1725811667}}]},"dataAvailability":{"layer":{"value":"Ethereum","secondLine":"Blobs or Calldata","sentiment":"good","description":"The data is posted to Ethereum as calldata or blobs.","projectId":"ethereum"},"bridge":{"value":"Enshrined","sentiment":"good","description":"The validating bridge has access to all the data, as it is posted onchain.","projectId":"ethereum"},"mode":{"value":"State diffs"}},"riskView":{"stateValidation":{"value":"Validity proofs (ST)","description":"STARKs are zero knowledge proofs that ensure state correctness.","sentiment":"good","orderHint":null,"executionDelay":0},"dataAvailability":{"value":"Onchain (SD)","description":"All of the data (SD = state diffs) needed for proof construction is published onchain.","sentiment":"good","orderHint":null},"exitWindow":{"value":"None","description":"There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable.","sentiment":"bad","orderHint":0},"sequencerFailure":{"value":"No mechanism","description":"There is no mechanism to have transactions be included if the sequencer is down or censoring.","sentiment":"bad"},"proposerFailure":{"value":"Cannot withdraw","description":"Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen.","sentiment":"bad","orderHint":null}},"stage":{"stage":"Stage 0","missing":{"nextStage":"Stage 1","requirements":["Users' withdrawals can be censored by the permissioned operators.","Upgrades executed by actors with more centralized control than a Security Council provide less than 7d for users to exit if the permissioned operator is down or censoring."],"principle":"Compromising ≥75% of the Security Council should be the only way (other than bugs) for a rollup to indefinitely block an L2→L1 message (e.g. a withdrawal) or push an invalid L2→L1 message (e.g. an invalid withdrawal)."},"summary":[{"stage":"Stage 0","requirements":[{"satisfied":true,"description":"A complete and functional proof system is deployed."},{"satisfied":true,"description":"The project calls itself a rollup."},{"satisfied":true,"description":"State roots are posted to Ethereum L1."},{"satisfied":true,"description":"Inputs for the state transition function are posted to Ethereum L1."},{"satisfied":true,"description":"A source-available node exists that can recreate the state from Ethereum L1 data. Please note that the L2BEAT team has not verified the validity of the node source code. [View code](https://docs.paradex.trade/documentation/paradex-chain/node-setup)"}]},{"stage":"Stage 1","requirements":[{"satisfied":false,"description":"Users' withdrawals can be censored by the permissioned operators."},{"satisfied":false,"description":"Upgrades executed by actors with more centralized control than a Security Council provide less than 7d for users to exit if the permissioned operator is down or censoring."}],"principle":{"satisfied":false,"description":"Compromising ≥75% of the Security Council should be the only way (other than bugs) for a rollup to indefinitely block an L2→L1 message (e.g. a withdrawal) or push an invalid L2→L1 message (e.g. an invalid withdrawal)."}},{"stage":"Stage 2","requirements":[{"satisfied":false,"description":"Upgrades unrelated to onchain provable bugs provide less than 30d to exit."}]}]},"stateDerivation":{"nodeSoftware":"SN stack-compatible node software can be used, please find the Paradex-specific node setup guide [in their docs](https://docs.paradex.trade/documentation/paradex-chain/node-setup).The [Juno](https://github.com/NethermindEth/juno) node software can be used to reconstruct the L2 state entirely from L1. The feature has not been released yet, but can be found in this [PR](https://github.com/NethermindEth/juno/pull/1335).","compressionScheme":"Paradex uses [stateful compression since v0.13.4](https://docs.starknet.io/architecture/data-availability/#v0_13_4).","genesisState":"There is no non-empty genesis state.","dataFormat":"The data format has been updated with different versions, and the full specification can be found [here](https://docs.starknet.io/architecture/data-availability/)."},"stateValidation":{"categories":[{"title":"Validity proofs","description":"Each update to the system state must be accompanied by a ZK proof that ensures that the new state was derived by correctly applying a series of valid user transactions to the previous state. These proofs are then verified on Ethereum by a smart contract.","risks":[],"references":[]}]},"technology":{"dataAvailability":{"name":"All data required to reconstruct rollup state is published on chain","description":"State diffs are publish onchain as blob or calldata on every state update. The state diffs contain information on every contact whose storage was updated, and additional information on contract deployments. From diffs full system state can be recovered. Contracts' code is not published on L1, but can be trustlessly verified if available elsewhere.","risks":[],"references":[{"title":"On-Chain Data - Starknet documentation","url":"https://docs.starknet.io/architecture/data-availability/"}]},"operator":{"name":"The system has a centralized operator","description":"The operator is the only entity that can propose blocks. A live and trustworthy operator is vital to the health of the system.","risks":[{"category":"MEV can be extracted if","text":"the operator exploits their centralized position and frontruns user transactions."}],"references":[]},"forceTransactions":{"name":"Users can't force any transaction","description":"There is no general mechanism to force the sequencer to include the transaction.","risks":[{"category":"Users can be censored if","text":"the operator refuses to include their transactions."}],"references":[{"title":"Censorship resistance of Starknet - Forum Discussion","url":"https://community.starknet.io/t/censorship-resistance/196"}]},"exitMechanisms":[{"name":"Regular messaging","description":"The user initiates L2->L1 messages by submitting a regular transaction on this chain. When the block containing that transaction is settled, the message becomes available for processing on L1. ZK proofs are required to settle blocks. Note that the message request can be censored by the Sequencer.","risks":[{"category":"Funds can be frozen if","text":"the operator censors withdrawal transaction."}],"references":[{"title":"Withdrawing is based on l2 to l1 messages - Starknet documentation","url":"https://book.cairo-lang.org/ch16-04-L1-L2-messaging.html#sending-messages-from-starknet-to-ethereum"}]},{"name":"Emergency exit","risks":[],"description":"There is no generic escape hatch mechanism as Starknet cannot be forced by users into a frozen state. Note that a freezing mechanism on L2, to be secure, requires anti-censorship protection.","references":[]}]},"contracts":{"addresses":{"ethereum":[{"name":"Paradex","isVerified":true,"address":"eth:0xF338cad020D506e8e3d9B4854986E0EcE6C23640","upgradeability":{"proxyType":"StarkWare proxy","admins":["eth:0x0a64d3D7747549aF6d65C225D56ac8f71e436B93"],"implementations":["eth:0x2793010E6711Acd5C46ed17f2183a9d58db71e04"],"immutable":false},"chain":"ethereum","description":"Central rollup contract. Receives (verified) state roots from the Sequencer, allows users to consume L2 -> L1 messages and send L1 -> L2 messages. Critical configuration values for the L2's logic are defined here by various governance roles.\n* Roles:\n  * **admin**: Paradex Multisig\n  * **operators**: EOA 1","upgradableBy":[{"name":"Paradex Multisig","delay":"no"}],"discoveryDrivenData":true},{"name":"SHARPVerifierCallProxy","isVerified":true,"address":"eth:0x47312450B3Ac8b5b8e247a6bB6d523e7605bDb60","upgradeability":{"proxyType":"StarkWare proxy","admins":["eth:0x21F9eC47b19d95b5C2DDFB6Ae5D4F92fAdacAEc4"],"implementations":["eth:0xD4C4044ACa68ebBcB81B13cC2699e1Bca2d3F458"],"immutable":false},"chain":"ethereum","description":"Upgradable call proxy contract through which the SHARPVerifier can be called. A call proxy does not delegatecall and the storage context remains at the target contract. It allows SHARP Multisig to change the otherwise immutable verifier contract with 8d delay.\n* Roles:\n  * **admin**: SHARP Multisig","upgradableBy":[{"name":"SHARP Multisig","delay":"8d"}],"discoveryDrivenData":true},{"name":"SHARPVerifier","isVerified":true,"address":"eth:0x9fb7F48dCB26b7bFA4e580b2dEFf637B13751942","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Shared Starkware SHARP verifier used collectively by Starknet and other SN stack and StarkEx projects. It receives STARK proofs from the Prover and verifies the integrity of the offchain execution including a correctly computed state root which is part of the Program Output.\n","discoveryDrivenData":true},{"name":"USDC Bridge","isVerified":true,"address":"eth:0xE3cbE3A636AB6A754e9e41B12b09d09Ce9E53Db3","upgradeability":{"proxyType":"StarkWare proxy","admins":["eth:0xFF57A3bB6465501c993acF8f3b29125a862661C0"],"implementations":["eth:0x8A4e51ff0F2a45899519e6049FB2D1F038Be1e77"],"immutable":false},"chain":"ethereum","description":"Standard Starkware bridge escrow (single token). Withdrawals can be throttled to 0% of the locked funds per 24 hours.\n* Roles:\n  * **admin**: Paradex Multisig 2\n  * **govAdmin**: Paradex Multisig 2\n  * **secAdmin**: Paradex Multisig 2\n  * **secAgent**: Paradex Multisig 2","upgradableBy":[{"name":"Paradex Multisig 2","delay":"no"}],"discoveryDrivenData":true},{"name":"MemoryPageFactRegistry","isVerified":true,"address":"eth:0xe583BcDE0160b637330b27a3ea1F3c02ba2eC460","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Auxiliary to the SHARPVerifier contract: Verified 'memory fact pages' get stored here. This is important as it registers all necessary onchain data produced by the verifier.\n","discoveryDrivenData":true}]},"risks":[{"category":"Funds can be stolen if","text":"a contract receives a malicious code upgrade. There is no delay on code upgrades.","isCritical":true}]},"permissions":{"ethereum":{"roles":[{"name":"Operator","description":"Permissioned to regularly update the state of the L2 on L1. Each state update must have been proven via the SHARP verifier and contains state diffs for data availability.","accounts":[{"address":"eth:0xC70ae19B5FeAA5c19f576e621d2bad9771864fe2","type":"EOA","isVerified":true,"name":"0xC70a…4fe2","url":"https://etherscan.io/address/0xC70ae19B5FeAA5c19f576e621d2bad9771864fe2"}],"chain":"ethereum","discoveryDrivenData":true},{"name":"Governor","description":"Permissioned to manage the Operator role, finalize state and change critical parameters like the programHash, configHash, or message cancellation delay in the core contract.","accounts":[{"address":"eth:0x0a64d3D7747549aF6d65C225D56ac8f71e436B93","type":"Contract","isVerified":true,"name":"Paradex Multisig","url":"#Paradex Multisig"}],"chain":"ethereum","discoveryDrivenData":true}],"actors":[{"name":"Paradex Multisig","description":"A Multisig with 2/5 threshold. \n* Can upgrade **with no delay**\n  * Paradex \n* A Governor - acting directly","accounts":[{"address":"eth:0x0a64d3D7747549aF6d65C225D56ac8f71e436B93","type":"Contract","isVerified":true,"name":"0x0a64…6B93","url":"https://etherscan.io/address/0x0a64d3D7747549aF6d65C225D56ac8f71e436B93"}],"chain":"ethereum","references":[],"participants":[{"address":"eth:0x64F4396bb0669C72858Cc50C779b48EB25F45770","type":"EOA","isVerified":true,"name":"0x64F4…5770","url":"https://etherscan.io/address/0x64F4396bb0669C72858Cc50C779b48EB25F45770"},{"address":"eth:0x2871B956bC19D25961E9a7519f32D7fDaA21B403","type":"EOA","isVerified":true,"name":"0x2871…B403","url":"https://etherscan.io/address/0x2871B956bC19D25961E9a7519f32D7fDaA21B403"},{"address":"eth:0x804d60CB1ade94511f7915A2062948685Ca8C81f","type":"EOA","isVerified":true,"name":"0x804d…C81f","url":"https://etherscan.io/address/0x804d60CB1ade94511f7915A2062948685Ca8C81f"},{"address":"eth:0xBF6aAc7Ae78B351180AD42b3dc5087eAd886B4A6","type":"EOA","isVerified":true,"name":"0xBF6a…B4A6","url":"https://etherscan.io/address/0xBF6aAc7Ae78B351180AD42b3dc5087eAd886B4A6"},{"address":"eth:0x59232aC80E6d403b6381393e52f4665ECA328558","type":"EOA","isVerified":true,"name":"0x5923…8558","url":"https://etherscan.io/address/0x59232aC80E6d403b6381393e52f4665ECA328558"}],"discoveryDrivenData":true},{"name":"Paradex Multisig 2","description":"A Multisig with 3/5 threshold. \n* Can upgrade **with no delay**\n  * USDC Bridge \n* Can interact with USDC Bridge\n  * disable the withdrawal limit and manage the security agent role that can enable it \n  * enable the withdrawal limit \n  * manage critical access control roles related to upgrades and set the proxy governor that can upgrade the implementation ","accounts":[{"address":"eth:0xFF57A3bB6465501c993acF8f3b29125a862661C0","type":"Contract","isVerified":true,"name":"0xFF57…61C0","url":"https://etherscan.io/address/0xFF57A3bB6465501c993acF8f3b29125a862661C0"}],"chain":"ethereum","references":[],"participants":[{"address":"eth:0xdaA9c7160E33d7c5C7D292f452c074Ec60f5C199","type":"EOA","isVerified":true,"name":"0xdaA9…C199","url":"https://etherscan.io/address/0xdaA9c7160E33d7c5C7D292f452c074Ec60f5C199"},{"address":"eth:0xfF206f46453A9dd8e1664532788f4987c15B937d","type":"EOA","isVerified":true,"name":"0xfF20…937d","url":"https://etherscan.io/address/0xfF206f46453A9dd8e1664532788f4987c15B937d"},{"address":"eth:0x3552F50fFe9517d8c6913992F3d4bA8030Ca1512","type":"EOA","isVerified":true,"name":"0x3552…1512","url":"https://etherscan.io/address/0x3552F50fFe9517d8c6913992F3d4bA8030Ca1512"},{"address":"eth:0x94d5dc7c96Eb6176783787669571970C7ba43e01","type":"EOA","isVerified":true,"name":"0x94d5…3e01","url":"https://etherscan.io/address/0x94d5dc7c96Eb6176783787669571970C7ba43e01"},{"address":"eth:0x661B48092a5af3F8d5B551D66f5B3F639deD3155","type":"EOA","isVerified":true,"name":"0x661B…3155","url":"https://etherscan.io/address/0x661B48092a5af3F8d5B551D66f5B3F639deD3155"}],"discoveryDrivenData":true},{"name":"SHARP Multisig","description":"A Multisig with 2/4 threshold. \n* Can upgrade **with 8d delay**\n  * SHARPVerifierCallProxy [via: - acting directly with 8d delay]","accounts":[{"address":"eth:0x21F9eC47b19d95b5C2DDFB6Ae5D4F92fAdacAEc4","type":"Contract","isVerified":true,"name":"0x21F9…AEc4","url":"https://etherscan.io/address/0x21F9eC47b19d95b5C2DDFB6Ae5D4F92fAdacAEc4"}],"chain":"ethereum","references":[],"participants":[{"address":"eth:0x0405107a60391Eb51821be373ff978115Ee58488","type":"EOA","isVerified":true,"name":"0x0405…8488","url":"https://etherscan.io/address/0x0405107a60391Eb51821be373ff978115Ee58488"},{"address":"eth:0x59232aC80E6d403b6381393e52f4665ECA328558","type":"EOA","isVerified":true,"name":"0x5923…8558","url":"https://etherscan.io/address/0x59232aC80E6d403b6381393e52f4665ECA328558"},{"address":"eth:0xebc8416179fE90854fe8B3f774801165572cfD7F","type":"EOA","isVerified":true,"name":"0xebc8…fD7F","url":"https://etherscan.io/address/0xebc8416179fE90854fe8B3f774801165572cfD7F"},{"address":"eth:0x955B978F3ee7818dA71fA25c676062E6BC462Fec","type":"EOA","isVerified":true,"name":"0x955B…2Fec","url":"https://etherscan.io/address/0x955B978F3ee7818dA71fA25c676062E6BC462Fec"}],"discoveryDrivenData":true}]}},"milestones":[{"title":"Perpetual Options Launch","url":"https://x.com/tradeparadex/status/1907041207177613610","date":"2025-04-01T00:00:00Z","description":"Paradex opens perpetual options trading to all users.","type":"general"},{"title":"Vaults Launched","url":"https://x.com/tradeparadex/status/1843550172443512998","date":"2024-10-08T00:00:00Z","description":"Paradex launches Vaults, the future of on-chain investment management.","type":"general"},{"title":"Paradex exits Open Beta","url":"https://x.com/tradeparadex/status/1854537396714651707","date":"2024-11-07T00:00:00Z","description":"Paradex launches XP Warzone Season 1 and exits Open Beta.","type":"general"},{"title":"Paradex starts using blobs","url":"https://twitter.com/tradeparadex/status/1768306190596153799","date":"2024-03-26T00:00:00Z","description":"Paradex starts publishing data to blobs.","type":"general"},{"title":"Open Beta Mainnet Launch","url":"https://twitter.com/tradeparadex","date":"2023-10-01T00:00:00.00Z","description":"Paradex launches Open Beta on Mainnet.","type":"general"}],"discoveryInfo":{"isDiscoDriven":false,"permissionsDiscoDriven":false,"contractsDiscoDriven":false,"timestampPerChain":{"ethereum":1755516515},"hasDiscoUi":false}}