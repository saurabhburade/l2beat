{"type":"layer2","addedAt":1679651674,"id":"polygonzkevm","capability":"universal","ecosystemInfo":{"id":"agglayer"},"display":{"name":"Polygon zkEVM","slug":"polygonzkevm","warning":"The forced transaction mechanism is currently disabled.","description":"Polygon zkEVM is an EVM-compatible ZK Rollup built by Polygon Labs.","links":{"websites":["https://polygon.technology/polygon-zkevm"],"bridges":["https://portal.polygon.technology/bridge"],"documentation":["https://docs.polygon.technology/zkEVM/"],"explorers":["https://zkevm.polygonscan.com/"],"repositories":["https://github.com/0xPolygon/zkevm-node","https://github.com/0xPolygon/"],"socialMedia":["https://x.com/0xPolygon","https://t.me/polygonofficial","https://reddit.com/r/0xPolygon/","https://discord.com/invite/0xPolygonCommunity","https://discord.com/invite/0xpolygonRnD","https://polygon.technology/blog"],"rollupCodes":"https://rollup.codes/polygon-zkevm"},"liveness":{"explanation":"Polygon zkEVM is a ZK rollup that posts transaction data to the L1. For a transaction to be considered final, it has to be posted on L1. State updates are a three step process: first blocks are committed to L1, then they are proved, and then it is possible to execute them."},"upgradesAndGovernanceImage":"polygoncdk","purposes":["Universal"],"architectureImage":"polygon-cdk-rollup","stacks":["Agglayer CDK"]},"proofSystem":{"type":"Validity","zkCatalogId":"zkprover"},"config":{"associatedTokens":["POL","MATIC"],"escrows":[{"address":"0x2a3DD3EB832aF982ec71669E178424b10Dca2EDe","sinceTimestamp":1679653127,"tokens":"*","contract":{"isVerified":true,"address":"eth:0x2a3DD3EB832aF982ec71669E178424b10Dca2EDe","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x0F99738B2Fc14D77308337f3e2596b63aE7BCC4A"],"implementations":["eth:0x75D28BfDfF93B3e4f20184b442d2634DC01cA48b"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1679653127,"transactionHash":"0x28f93532243dd8a8cc92ce630ef1920f40de15af7db2903efbf42f21fdf8152c","implementations":["eth:0x5ac4182A1dd41AeEf465E40B82fd326BF66AB82C"]},{"timestamp":1707822059,"transactionHash":"0xb83824c7eb1e87bd12222d98cf1cbff317b0853ba1e5beda1e3e3d8a4cfd1b24","implementations":["eth:0x0FeB850B183C57534b56b7d56520133C8f9BDB65"]},{"timestamp":1750689983,"transactionHash":"0xcdd772d0b4764da67b80a72af2da7230f4f70f8c810cb8c4fe3882b8c4506ff3","implementations":["eth:0x75D28BfDfF93B3e4f20184b442d2634DC01cA48b"]}]},"chain":"ethereum","includeInTotal":true,"sharedEscrow":{"type":"AggLayer","nativeAsset":"etherPreminted","premintedAmount":"200000000000000000000000000"}},{"address":"0x70E70e58ed7B1Cec0D8ef7464072ED8A52d755eB","sinceTimestamp":1700125979,"tokens":["USDC"],"contract":{"isVerified":true,"address":"eth:0x70E70e58ed7B1Cec0D8ef7464072ED8A52d755eB","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0xf694C9e3a34f5Fa48b6f3a0Ff186C1c6c4FcE904"],"implementations":["eth:0xA4e6762eAAf259DA74696F46fAAF79bA9DdE14E6"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1700125979,"transactionHash":"0x6402dc60bb9c4f704f126f4b11e40b33c287b4ac7f73ea60c50d7452d52ce735","implementations":["eth:0xA4e6762eAAf259DA74696F46fAAF79bA9DdE14E6"]}],"description":"Custom Bridge escrow for USDC bridged to PolygonZkEVM allowing for a custom L2 tokens contract."},"chain":"ethereum","includeInTotal":true},{"address":"0xf0CDE1E7F0FAD79771cd526b1Eb0A12F69582C01","sinceTimestamp":1703945135,"tokens":["wstETH"],"contract":{"isVerified":true,"address":"eth:0xf0CDE1E7F0FAD79771cd526b1Eb0A12F69582C01","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0xf694C9e3a34f5Fa48b6f3a0Ff186C1c6c4FcE904"],"implementations":["eth:0x18FED1E19dC564DC917D203be9d40790472D22e9"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1703945135,"transactionHash":"0x12c54f4243dc8e3b41be87984b78248eecbf98b92e30ff10b487be2599d7e3a1","implementations":["eth:0x18FED1E19dC564DC917D203be9d40790472D22e9"]}],"description":"Custom Bridge escrow for wstETH bridged to PolygonZkEVM allowing for a custom L2 tokens contract."},"chain":"ethereum","includeInTotal":true},{"address":"0x4A27aC91c5cD3768F140ECabDe3FC2B2d92eDb98","sinceTimestamp":1695199499,"tokens":["DAI","sDAI"],"contract":{"isVerified":true,"address":"eth:0x4A27aC91c5cD3768F140ECabDe3FC2B2d92eDb98","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0xf694C9e3a34f5Fa48b6f3a0Ff186C1c6c4FcE904"],"implementations":["eth:0xF684f2CB299cCDaAB483ffc1573B82f40C6b775b"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1695199499,"transactionHash":"0x2c7c12aeaf738701352017fc49f5268db9632b84bdc6f76474e6776371f53b7e","implementations":["eth:0xF684f2CB299cCDaAB483ffc1573B82f40C6b775b"]}],"description":"Custom Bridge escrow for DAI bridged to PolygonZkEVM allowing for a custom L2 tokens contract."},"chain":"ethereum","includeInTotal":true}],"activityConfig":{"type":"block","startBlock":1},"trackedTxs":[{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"functionCall","address":"0x5132A183E9F3CB7C848b0AAC5Ae0c4f0491B7aB2","selector":"0x5e9145c9","functionSignature":"function sequenceBatches((bytes,bytes32,uint64,uint64)[] batches,address l2Coinbase)","sinceTimestamp":1679653163,"untilTimestamp":1707822059}},{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0x5132A183E9F3CB7C848b0AAC5Ae0c4f0491B7aB2","selector":"0x2b0006fa","functionSignature":"function verifyBatchesTrustedAggregator(uint64 pendingStateNum,uint64 initNumBatch,uint64 finalNewBatch,bytes32 newLocalExitRoot,bytes32 newStateRoot,bytes32[24] proof)","sinceTimestamp":1679653163,"untilTimestamp":1707822059}},{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0x5132A183E9F3CB7C848b0AAC5Ae0c4f0491B7aB2","selector":"0x621dd411","functionSignature":"function verifyBatches(uint64 pendingStateNum,uint64 initNumBatch,uint64 finalNewBatch,bytes32 newLocalExitRoot,bytes32 newStateRoot,bytes32[24] calldata proof) ","sinceTimestamp":1679653163,"untilTimestamp":1707822059}},{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0x5132A183E9F3CB7C848b0AAC5Ae0c4f0491B7aB2","selector":"0x87c20c01","functionSignature":"function verifyBatches(uint32,uint64,uint64,uint64,bytes32,bytes32,address,bytes32[24])","sinceTimestamp":1707822059,"untilTimestamp":1738594559}},{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0x5132A183E9F3CB7C848b0AAC5Ae0c4f0491B7aB2","selector":"0x1489ed10","functionSignature":"function verifyBatchesTrustedAggregator(uint32,uint64,uint64,uint64,bytes32,bytes32,address,bytes32[24])","sinceTimestamp":1707822059}},{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"functionCall","address":"0x519E42c24163192Dca44CD3fBDCEBF6be9130987","selector":"0xecef3f99","functionSignature":"function sequenceBatches(tuple(bytes transactions, bytes32 forcedGlobalExitRoot, uint64 forcedTimestamp, bytes32 forcedBlockHashL1)[] batches, address l2Coinbase)","sinceTimestamp":1707824735,"untilTimestamp":1710419699}},{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"functionCall","address":"0x519E42c24163192Dca44CD3fBDCEBF6be9130987","selector":"0xdef57e54","functionSignature":"function sequenceBatches(tuple(bytes transactions, bytes32 forcedGlobalExitRoot, uint64 forcedTimestamp, bytes32 forcedBlockHashL1)[] batches, uint64 maxSequenceTimestamp, uint64 initSequencedBatch, address l2Coinbase)","sinceTimestamp":1710419699,"untilTimestamp":1736943371}},{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"functionCall","address":"0x519E42c24163192Dca44CD3fBDCEBF6be9130987","selector":"0xb910e0f9","functionSignature":"function sequenceBatches(tuple(bytes transactions, bytes32 forcedGlobalExitRoot, uint64 forcedTimestamp, bytes32 forcedBlockHashL1)[] batches, uint32 l1InfoTreeLeafCount, uint64 maxSequenceTimestamp, bytes32 expectedFinalAccInputHash, address l2Coinbase)","sinceTimestamp":1736943371}}],"liveness":{"duplicateData":{"from":"stateUpdates","to":"proofSubmissions"}}},"chainConfig":{"name":"polygonzkevm","chainId":1101,"explorerUrl":"https://zkevm.polygonscan.com","sinceTimestamp":1679679015,"multicallContracts":[{"address":"0xcA11bde05977b3631167028862bE2a173976CA11","batchSize":150,"sinceBlock":57746,"version":"3"}],"apis":[{"type":"rpc","url":"https://polygon-rpc.com/zkevm","callsPerMinute":500},{"type":"etherscan","chainId":1101},{"type":"blockscoutV2","url":"https://zkevm.blockscout.com/api/v2"}],"gasTokens":["ETH"]},"dataAvailability":{"layer":{"value":"Ethereum","secondLine":"Calldata","sentiment":"good","description":"The data is posted to Ethereum as calldata.","projectId":"ethereum"},"bridge":{"value":"Enshrined","sentiment":"good","description":"The validating bridge has access to all the data, as it is posted onchain.","projectId":"ethereum"},"mode":{"value":"Transaction data"}},"riskView":{"stateValidation":{"value":"Validity proofs (ST, SN)","description":"STARKs and SNARKs are zero knowledge proofs that ensure state correctness. STARKs proofs are wrapped in SNARKs proofs for efficiency. SNARKs require a trusted setup.","sentiment":"good","orderHint":null,"executionDelay":0},"dataAvailability":{"value":"Onchain","description":"All of the data needed for proof construction is published on Ethereum L1. Unlike most ZK rollups transactions are posted instead of state diffs.","sentiment":"good","orderHint":null},"exitWindow":{"value":"None","description":"Even though there is a 3d Timelock for upgrades, forced transactions are disabled.","sentiment":"bad","orderHint":-1,"warning":{"value":"The Security Council can remove the delay on upgrades.","sentiment":"bad"}},"sequencerFailure":{"value":"No mechanism","description":"There is no mechanism to have transactions be included if the sequencer is down or censoring. Although the functionality exists in the code, it is currently disabled.","sentiment":"bad"},"proposerFailure":{"value":"Cannot withdraw","description":"Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen.","sentiment":"bad","orderHint":null}},"stage":{"stage":"Stage 0","missing":{"nextStage":"Stage 1","requirements":["Users' withdrawals can be censored by the permissioned operators.","Upgrades executed by actors with more centralized control than a Security Council provide less than 7d for users to exit if the permissioned operator is down or censoring.","Security Council members are not publicly known."],"principle":"Compromising ≥75% of the Security Council should be the only way (other than bugs) for a rollup to indefinitely block an L2→L1 message (e.g. a withdrawal) or push an invalid L2→L1 message (e.g. an invalid withdrawal) wiith a <7d exit window."},"summary":[{"stage":"Stage 0","requirements":[{"satisfied":true,"description":"A complete and functional proof system is deployed."},{"satisfied":true,"description":"The project calls itself a rollup."},{"satisfied":true,"description":"State roots are posted to Ethereum L1."},{"satisfied":true,"description":"Inputs for the state transition function are posted to Ethereum L1."},{"satisfied":true,"description":"A source-available node exists that can recreate the state from Ethereum L1 data. Please note that the L2BEAT team has not verified the validity of the node source code. [View code](https://github.com/0xPolygonHermez/zkevm-node)"}]},{"stage":"Stage 1","requirements":[{"satisfied":false,"description":"Users' withdrawals can be censored by the permissioned operators."},{"satisfied":false,"description":"Upgrades executed by actors with more centralized control than a Security Council provide less than 7d for users to exit if the permissioned operator is down or censoring."},{"satisfied":false,"description":"Security Council members are not publicly known."}],"principle":{"satisfied":false,"description":"Compromising ≥75% of the Security Council should be the only way (other than bugs) for a rollup to indefinitely block an L2→L1 message (e.g. a withdrawal) or push an invalid L2→L1 message (e.g. an invalid withdrawal) wiith a <7d exit window."}},{"stage":"Stage 2","requirements":[{"satisfied":false,"description":"Upgrades unrelated to onchain provable bugs provide less than 30d to exit."},{"satisfied":false,"description":"The Security Council's actions are not confined to onchain provable bugs."}]}]},"technology":{"dataAvailability":{"name":"All transaction data is recorded on chain","description":"All executed transactions are submitted to an on chain smart contract. The execution of the rollup is based entirely on the submitted transactions, so anyone monitoring the contract can know the correct state of the rollup chain.","risks":[],"references":[{"title":"PolygonZkEVM.sol - Etherscan source code, sequenceBatches() function","url":"https://etherscan.io/address/0x7253F329302b1b5E774Ac641EA3743E9E3244f2E#code"}]},"operator":{"name":"The system has a centralized sequencer","description":"Only a trusted sequencer is allowed to submit transaction batches. A mechanism for users to submit their own batches is currently disabled.","risks":[{"category":"MEV can be extracted if","text":"the operator exploits their centralized position and frontruns user transactions."},{"category":"Funds can be frozen if","text":"the sequencer refuses to include an exit transaction.","isCritical":true}],"references":[{"title":"PolygonZkEVM.sol - source code, onlyTrustedSequencer modifier","url":"https://etherscan.io/address/0x7253F329302b1b5E774Ac641EA3743E9E3244f2E#code"}]},"forceTransactions":{"name":"Users can't force any transaction","description":"The mechanism for allowing users to submit their own transactions is currently disabled.","risks":[{"category":"Users can be censored if","text":"the operator refuses to include their transactions."}],"references":[{"title":"PolygonZkEVM.sol - source code, forceBatchAddress address","url":"https://etherscan.io/address/0x7253F329302b1b5E774Ac641EA3743E9E3244f2E#code"}]},"exitMechanisms":[{"name":"Regular messaging","description":"The user initiates L2->L1 messages by submitting a regular transaction on this chain. When the block containing that transaction is settled, the message becomes available for processing on L1. ZK proofs are required to settle blocks.","risks":[],"references":[{"title":"PolygonSharedBridge.sol - source code, claimAsset function","url":"https://etherscan.io/address/0x75D28BfDfF93B3e4f20184b442d2634DC01cA48b#code"}]}],"otherConsiderations":[{"name":"Shared bridge and Pessimistic Proofs","description":"Polygon Agglayer uses a shared bridge escrow for Rollups, Validiums and external chains that opt in to participate in interoperability. Each participating chain needs to provide zk proofs to access any assets in the shared bridge. In addition to the full execution proofs that are used for the state validation of Rollups and Validiums, accounting proofs over the bridges state (Polygon calls them 'Pessimistic Proofs') are used by external chains ('cdk-sovereign'). Using the SP1 zkVM by Succinct, projects without a full proof system on Ethereum are able to share the bridge with the zkEVM Agglayer projects.","risks":[{"category":"Funds can be lost if","text":"the accounting proof system for the bridge (pessimistic proofs, SP1) is implemented incorrectly."}],"references":[{"title":"Pessimistic Proof - Polygon Knowledge Layer","url":"https://docs.polygon.technology/learn/agglayer/pessimistic_proof"},{"title":"Etherscan: PolygonRollupManager.sol - verifyPessimisticTrustedAggregator() function","url":"https://etherscan.io/address/0x42B9fF0644741e3353162678596e7D6aA6a13240#code#F1#L1280"}]}]},"stateDerivation":{"nodeSoftware":"Node software can be found [here](https://github.com/0xPolygonHermez/zkevm-node) and [here](https://github.com/0xPolygonHermez/cdk-erigon). The cdk-erigon node is the more recent implementation.","compressionScheme":"No compression scheme is used.","genesisState":"The genesis state, whose corresponding root is accessible as Batch 0 root in the [`_legacyBatchNumToStateRoot`](https://evm.storage/eth/19489007/0x5132a183e9f3cb7c848b0aac5ae0c4f0491b7ab2/_legacyBatchNumToStateRoot#map) variable of PolygonRollupManager, is available [here](https://github.com/0xPolygonHermez/zkevm-contracts/blob/0d0e69a6f299e273343461f6350343cf4b048269/deployment/genesis.json).","dataFormat":"The trusted sequencer batches transactions according to the specifications documented [here](https://docs.polygon.technology/zkEVM/architecture/protocol/transaction-life-cycle/transaction-batching/)."},"stateValidation":{"description":"Each update to the system state must be accompanied by a ZK proof that ensures that the new state was derived by correctly applying a series of valid user transactions to the previous state. These proofs are then verified on Ethereum by a smart contract.","categories":[{"title":"Prover Architecture","description":"Polygon zkEVM proof system PIL-STARK can be found [here](https://github.com/0xPolygonHermez/pil-stark)."},{"title":"ZK Circuits","description":"Polygon zkEVM circuits are built from PIL (polynomial identity language) and are designed to replicate the behavior of the EVM. The source code can be found [here](https://github.com/0xPolygonHermez/zkevm-rom).","risks":[{"category":"Funds can be lost if","text":"the proof system is implemented incorrectly."}]},{"title":"Verification Keys Generation","description":"SNARK verification keys can be generated and checked against the Ethereum verifier contract using [this guide](https://github.com/0xPolygonHermez/zkevm-contracts/blob/main/verifyMainnetDeployment/verifyMainnetProofVerifier.md). The system requires a trusted setup."},{"title":"Pessimistic Proofs","description":"The pessimistic proofs that are used to prove correct accounting in the shared bridge are using the [SP1 zkVM by Succinct](https://github.com/succinctlabs/sp1)."}],"proofVerification":{"shortDescription":"Polygon zkEVM is a ZK-EVM rollup on Ethereum.","aggregation":true,"requiredTools":[{"name":"circom","version":"v2.1.8","link":"https://github.com/iden3/circom/releases/tag/v2.1.8"}],"verifiers":[{"name":"PolygonZkEvmVerifier (old RollupType 5 and current RollupType 6)","description":"Polygon zkEVM utilizes [PIL-STARK](https://github.com/0xPolygonHermez/pil-stark) as the main proving stack for their system. PIL-STARK is an implementation of the [eSTARK](https://eprint.iacr.org/2023/474) protocol. The circuits and the computations are represented using the PIL and zkASM custom languages. The protocol makes use of recursive proof aggregation. The final eSTARK proof is wrapped in a fflonk proof.","verified":"no","contractAddress":"0xc521580cd8586Cc688A7430F9DcE0f6A803F2883","chainId":1,"subVerifiers":[{"name":"Final wrap","proofSystem":"fflonk","mainArithmetization":"Plonkish","mainPCS":"KZG-fflonk","trustedSetup":"Powers of Tau 28"},{"name":"Aggregation circuit","proofSystem":"eSTARK","mainArithmetization":"eAIR","mainPCS":"FRI","trustedSetup":"None"},{"name":"Polygon zkEVM ROM","proofSystem":"eSTARK","mainArithmetization":"eAIR","mainPCS":"FRI","trustedSetup":"None","link":"https://github.com/0xPolygonHermez/zkevm-rom"}]},{"name":"PolygonZkEvmVerifier (old RollupType 3)","description":"Polygon zkEVM utilizes [PIL-STARK](https://github.com/0xPolygonHermez/pil-stark) as the main proving stack for their system. PIL-STARK is an implementation of the [eSTARK](https://eprint.iacr.org/2023/474) protocol. The circuits and the computations are represented using the PIL and zkASM custom languages. The protocol makes use of recursive proof aggregation. The final eSTARK proof is wrapped in a fflonk proof.","verified":"no","contractAddress":"0x0775e11309d75aA6b0967917fB0213C5673eDf81","chainId":1,"subVerifiers":[{"name":"Final wrap","proofSystem":"fflonk","mainArithmetization":"Plonkish","mainPCS":"KZG-fflonk","trustedSetup":"Powers of Tau 28"},{"name":"Aggregation circuit","proofSystem":"eSTARK","mainArithmetization":"eAIR","mainPCS":"FRI","trustedSetup":"None"},{"name":"Polygon zkEVM ROM","proofSystem":"eSTARK","mainArithmetization":"eAIR","mainPCS":"FRI","trustedSetup":"None","link":"https://github.com/0xPolygonHermez/zkevm-rom"}]}]}},"permissions":{"ethereum":{"roles":[{"id":"Sequencer","name":"Sequencer","description":"Allowed to commit transactions from the current layer to the host chain.","accounts":[{"address":"eth:0x148Ee7dAF16574cD020aFa34CC658f8F3fbd2800","type":"EOA","isVerified":true,"name":"EOA 1","url":"#EOA-1"}],"chain":"ethereum","discoveryDrivenData":true},{"id":"Trusted Aggregator (Proposer)","name":"Trusted Aggregator (Proposer)","description":"Permissioned to post new state roots and global exit roots accompanied by ZK proofs.","accounts":[{"address":"eth:0x20A53dCb196cD2bcc14Ece01F358f1C849aA51dE","type":"EOA","isVerified":true,"name":"EOA 2","url":"#EOA-2-and-EOA-3"},{"address":"eth:0x6329Fe417621925C81c16F9F9a18c203C21Af7ab","type":"EOA","isVerified":true,"name":"EOA 3","url":"#EOA-2-and-EOA-3"}],"chain":"ethereum","discoveryDrivenData":true}],"actors":[{"id":"PolygonAdminMultisig","name":"PolygonAdminMultisig","description":"A Multisig with 5/12 threshold. \n* Can upgrade **with 3d delay**\n  * AggLayerGateway [via: Timelock with 3d delay (no delay if in emergency state) → SharedProxyAdmin]\n  * PolygonSharedBridge [via: Timelock with 3d delay (no delay if in emergency state) → SharedProxyAdmin]\n  * PolygonRollupManager [via: Timelock with 3d delay (no delay if in emergency state) → SharedProxyAdmin]\n  * PolygonGlobalExitRootV2 [via: Timelock with 3d delay (no delay if in emergency state) → SharedProxyAdmin]\n* Can interact with AggLayerGateway\n  * add new routes from proof selector to verifier / pessimisticVkey for pessimistic proofs **with 3d delay** [via: Timelock with 3d delay (no delay if in emergency state)]\n  * add or update default aggchain verification keys (aggchainVkey) for any given selectors \n  * freeze routes from proof selector to verifier / pessimisticVkey for pessimistic proofs \n* Can interact with PolygonSharedBridge\n  * upgrade the implementation of wrapped tokens deployed by the bridge **with 3d delay** [via: Timelock with 3d delay (no delay if in emergency state)]\n* Can interact with PolygonRollupManager\n  * deploy new projects that use predefined rollup types (implementations) and connect them or other Agglayer chains to the PolygonRollupManager \n  * manage all access control roles, add new rollup types (which are implementation contracts that can then be upgraded to by connected projects), update any connected projects to new rollup types, migrate to pessimistic proofs and rollback batches, connect existing rollups to the PolygonRollupManager **with 3d delay** [via: Timelock with 3d delay (no delay if in emergency state)]\n  * manage parameters like fees for all connected projects, set the trusted aggregator, stop the emergency state, update projects and obsolete rollup types \n* Can interact with Timelock\n  * propose, cancel and execute transactions in the timelock, manage all access control roles and change the minimum delay **with 6d delay or with 3d delay** [via: Timelock with 3d delay (no delay if in emergency state) with 3d delay (no delay if in emergency state) - or - acting directly with 3d delay (no delay if in emergency state)]","accounts":[{"address":"eth:0x242daE44F5d8fb54B198D03a94dA45B5a4413e21","type":"Contract","isVerified":true,"name":"0x242d…3e21","url":"https://etherscan.io/address/0x242daE44F5d8fb54B198D03a94dA45B5a4413e21"}],"chain":"ethereum","references":[],"participants":[{"address":"eth:0xcAB31b6A7b4d2eCd562A09e2BfA46535a18862f9","type":"EOA","isVerified":true,"name":"0xcAB3…62f9","url":"https://etherscan.io/address/0xcAB31b6A7b4d2eCd562A09e2BfA46535a18862f9"},{"address":"eth:0xAb3506507449bF1880f3337825efd19ac89E235E","type":"EOA","isVerified":true,"name":"0xAb35…235E","url":"https://etherscan.io/address/0xAb3506507449bF1880f3337825efd19ac89E235E"},{"address":"eth:0x54c401eD03D086fE13221E5422165f3b024265d9","type":"EOA","isVerified":true,"name":"0x54c4…65d9","url":"https://etherscan.io/address/0x54c401eD03D086fE13221E5422165f3b024265d9"},{"address":"eth:0x21618593F7147235aC8D511d68A547C935F9d417","type":"EOA","isVerified":true,"name":"0x2161…d417","url":"https://etherscan.io/address/0x21618593F7147235aC8D511d68A547C935F9d417"},{"address":"eth:0xED7cC82235A7757702475c8f77c7830c095FB5a2","type":"EOA","isVerified":true,"name":"0xED7c…B5a2","url":"https://etherscan.io/address/0xED7cC82235A7757702475c8f77c7830c095FB5a2"},{"address":"eth:0xdFEd8373695a7b3DaF268CF91e71f6a7024A56Da","type":"EOA","isVerified":true,"name":"0xdFEd…56Da","url":"https://etherscan.io/address/0xdFEd8373695a7b3DaF268CF91e71f6a7024A56Da"},{"address":"eth:0xffbfc0c8331C5fc912DDA3C6D4A86eEB80203238","type":"EOA","isVerified":true,"name":"0xffbf…3238","url":"https://etherscan.io/address/0xffbfc0c8331C5fc912DDA3C6D4A86eEB80203238"},{"address":"eth:0xeD44D1CFfB91e163CB7126bdEeA83959f175dB37","type":"EOA","isVerified":true,"name":"0xeD44…dB37","url":"https://etherscan.io/address/0xeD44D1CFfB91e163CB7126bdEeA83959f175dB37"},{"address":"eth:0x516eEcfb38aA308c5f1878497108c7d054fd46B7","type":"EOA","isVerified":true,"name":"0x516e…46B7","url":"https://etherscan.io/address/0x516eEcfb38aA308c5f1878497108c7d054fd46B7"},{"address":"eth:0x4c1665d6651ecEfa59B9B3041951608468b18891","type":"EOA","isVerified":true,"name":"0x4c16…8891","url":"https://etherscan.io/address/0x4c1665d6651ecEfa59B9B3041951608468b18891"},{"address":"eth:0xA0B02B28920812324f1cC3255bd8840867d3f227","type":"EOA","isVerified":true,"name":"0xA0B0…f227","url":"https://etherscan.io/address/0xA0B02B28920812324f1cC3255bd8840867d3f227"},{"address":"eth:0xEad77b01ea770839F7f576Cd1516Ff6A298d9dB2","type":"EOA","isVerified":true,"name":"0xEad7…9dB2","url":"https://etherscan.io/address/0xEad77b01ea770839F7f576Cd1516Ff6A298d9dB2"}],"discoveryDrivenData":true},{"id":"PolygonSecurityCouncil","name":"PolygonSecurityCouncil","description":"A Multisig with 6/8 threshold. \n* Can interact with PolygonRollupManager\n  * activate the emergency state in the PolygonRollupManager and in the shared bridge immediately, effectively pausing all projects connected to them and making system contracts instantly upgradable ","accounts":[{"address":"eth:0x37c58Dfa7BF0A165C5AAEdDf3e2EdB475ac6Dcb6","type":"Contract","isVerified":true,"name":"0x37c5…Dcb6","url":"https://etherscan.io/address/0x37c58Dfa7BF0A165C5AAEdDf3e2EdB475ac6Dcb6"}],"chain":"ethereum","references":[],"participants":[{"address":"eth:0xFe45baf0F18c207152A807c1b05926583CFE2e4b","type":"EOA","isVerified":true,"name":"0xFe45…2e4b","url":"https://etherscan.io/address/0xFe45baf0F18c207152A807c1b05926583CFE2e4b"},{"address":"eth:0xaF46a0ddf80DFFB49C87656625E65A37499B261D","type":"EOA","isVerified":true,"name":"0xaF46…261D","url":"https://etherscan.io/address/0xaF46a0ddf80DFFB49C87656625E65A37499B261D"},{"address":"eth:0xBDc235cC9d6Baa641c5ae306bc83962475A5FEFf","type":"EOA","isVerified":true,"name":"0xBDc2…FEFf","url":"https://etherscan.io/address/0xBDc235cC9d6Baa641c5ae306bc83962475A5FEFf"},{"address":"eth:0x4c1665d6651ecEfa59B9B3041951608468b18891","type":"EOA","isVerified":true,"name":"0x4c16…8891","url":"https://etherscan.io/address/0x4c1665d6651ecEfa59B9B3041951608468b18891"},{"address":"eth:0x3ab9f4b964eE665F7CDf1d65f1cEEc6196B0D622","type":"EOA","isVerified":true,"name":"0x3ab9…D622","url":"https://etherscan.io/address/0x3ab9f4b964eE665F7CDf1d65f1cEEc6196B0D622"},{"address":"eth:0x49c15936864690bCd6af0ecaca8E874adFF30E86","type":"EOA","isVerified":true,"name":"0x49c1…0E86","url":"https://etherscan.io/address/0x49c15936864690bCd6af0ecaca8E874adFF30E86"},{"address":"eth:0x9F7dfAb2222A473284205cdDF08a677726d786A0","type":"EOA","isVerified":true,"name":"0x9F7d…86A0","url":"https://etherscan.io/address/0x9F7dfAb2222A473284205cdDF08a677726d786A0"},{"address":"eth:0x21887c89368bf918346c62460e0c339113801C28","type":"EOA","isVerified":true,"name":"0x2188…1C28","url":"https://etherscan.io/address/0x21887c89368bf918346c62460e0c339113801C28"}],"discoveryDrivenData":true},{"id":"PolygonCreateRollupMultisig","name":"PolygonCreateRollupMultisig","description":"A Multisig with 3/8 threshold. \n* Can interact with PolygonRollupManager\n  * deploy new projects that use predefined rollup types (implementations) and connect them or other Agglayer chains to the PolygonRollupManager ","accounts":[{"address":"eth:0xC74eFc7fdb3BeC9c6930E91FFDF761b160dF79dB","type":"Contract","isVerified":true,"name":"0xC74e…79dB","url":"https://etherscan.io/address/0xC74eFc7fdb3BeC9c6930E91FFDF761b160dF79dB"}],"chain":"ethereum","references":[],"participants":[{"address":"eth:0xAb3506507449bF1880f3337825efd19ac89E235E","type":"EOA","isVerified":true,"name":"0xAb35…235E","url":"https://etherscan.io/address/0xAb3506507449bF1880f3337825efd19ac89E235E"},{"address":"eth:0x3038B4DBf022E80169b2A068290d4a3A8b87D3b5","type":"EOA","isVerified":true,"name":"0x3038…D3b5","url":"https://etherscan.io/address/0x3038B4DBf022E80169b2A068290d4a3A8b87D3b5"},{"address":"eth:0xa43901c63f7702C407378E55E0d0EB4064a2AE31","type":"EOA","isVerified":true,"name":"0xa439…AE31","url":"https://etherscan.io/address/0xa43901c63f7702C407378E55E0d0EB4064a2AE31"},{"address":"eth:0xD9478f759a13Bfa1d9dAB3cDF5ff0C099d5EfCFC","type":"EOA","isVerified":true,"name":"0xD947…fCFC","url":"https://etherscan.io/address/0xD9478f759a13Bfa1d9dAB3cDF5ff0C099d5EfCFC"},{"address":"eth:0xCE27d8BCee45dB3E457EcF8629264Ca7893AAaAc","type":"EOA","isVerified":true,"name":"0xCE27…AaAc","url":"https://etherscan.io/address/0xCE27d8BCee45dB3E457EcF8629264Ca7893AAaAc"},{"address":"eth:0x0B84d2e66192448B680BBd06813efF9e5923Ca77","type":"EOA","isVerified":true,"name":"0x0B84…Ca77","url":"https://etherscan.io/address/0x0B84d2e66192448B680BBd06813efF9e5923Ca77"},{"address":"eth:0x0185fb2F27f2Acda3e2a6B8530b342333e9f22A6","type":"EOA","isVerified":true,"name":"0x0185…22A6","url":"https://etherscan.io/address/0x0185fb2F27f2Acda3e2a6B8530b342333e9f22A6"},{"address":"eth:0x7316DeD96c4Ff756c74D1D9c4178f6921Aff4496","type":"EOA","isVerified":true,"name":"0x7316…4496","url":"https://etherscan.io/address/0x7316DeD96c4Ff756c74D1D9c4178f6921Aff4496"}],"discoveryDrivenData":true},{"id":"Polygon zkEVM Multisig","name":"Polygon zkEVM Multisig","description":"A Multisig with 5/10 threshold. \n* Can upgrade **with no delay**\n  * daiBridge \n  * usdcBridge \n  * wstETHBridge ","accounts":[{"address":"eth:0xf694C9e3a34f5Fa48b6f3a0Ff186C1c6c4FcE904","type":"Contract","isVerified":true,"name":"0xf694…E904","url":"https://etherscan.io/address/0xf694C9e3a34f5Fa48b6f3a0Ff186C1c6c4FcE904"}],"chain":"ethereum","references":[],"participants":[{"address":"eth:0x099198353446A9E3a20672eDC1Bd461E978842c3","type":"EOA","isVerified":true,"name":"0x0991…42c3","url":"https://etherscan.io/address/0x099198353446A9E3a20672eDC1Bd461E978842c3"},{"address":"eth:0xb771380f912E4b5F6beDdf81314C383c13F16ab5","type":"EOA","isVerified":true,"name":"0xb771…6ab5","url":"https://etherscan.io/address/0xb771380f912E4b5F6beDdf81314C383c13F16ab5"},{"address":"eth:0xD09971D8ed6C6a5e57581e90d593ee5B94e348D4","type":"EOA","isVerified":true,"name":"0xD099…48D4","url":"https://etherscan.io/address/0xD09971D8ed6C6a5e57581e90d593ee5B94e348D4"},{"address":"eth:0xc4591c41e01a7a654B5427f39Bbd1dEe5bD45D1D","type":"EOA","isVerified":true,"name":"0xc459…5D1D","url":"https://etherscan.io/address/0xc4591c41e01a7a654B5427f39Bbd1dEe5bD45D1D"},{"address":"eth:0xE6Ee0F8D81170160d50ed77b9C91E6219473d43a","type":"EOA","isVerified":true,"name":"0xE6Ee…d43a","url":"https://etherscan.io/address/0xE6Ee0F8D81170160d50ed77b9C91E6219473d43a"},{"address":"eth:0xd1B856ee12Bd00922cae8DD86ab068f8c0F95224","type":"EOA","isVerified":true,"name":"0xd1B8…5224","url":"https://etherscan.io/address/0xd1B856ee12Bd00922cae8DD86ab068f8c0F95224"},{"address":"eth:0xF53D1fB2EeD22Cf1E8f7E90Da7f1CAe88344065F","type":"EOA","isVerified":true,"name":"0xF53D…065F","url":"https://etherscan.io/address/0xF53D1fB2EeD22Cf1E8f7E90Da7f1CAe88344065F"},{"address":"eth:0xf56AE6520776934127AB68438d1b4652BCe07F8f","type":"EOA","isVerified":true,"name":"0xf56A…7F8f","url":"https://etherscan.io/address/0xf56AE6520776934127AB68438d1b4652BCe07F8f"},{"address":"eth:0x4DE44Aa0Ef9DB64DF3eB3465d35D73d0409d44ed","type":"EOA","isVerified":true,"name":"0x4DE4…44ed","url":"https://etherscan.io/address/0x4DE44Aa0Ef9DB64DF3eB3465d35D73d0409d44ed"},{"address":"eth:0x4E83124eD15b13265240B61EC9627797CCE1032E","type":"EOA","isVerified":true,"name":"0x4E83…032E","url":"https://etherscan.io/address/0x4E83124eD15b13265240B61EC9627797CCE1032E"}],"discoveryDrivenData":true},{"id":"EOA-1","name":"EOA 1","accounts":[{"address":"eth:0x148Ee7dAF16574cD020aFa34CC658f8F3fbd2800","type":"EOA","isVerified":true,"name":"0x148E…2800","url":"https://etherscan.io/address/0x148Ee7dAF16574cD020aFa34CC658f8F3fbd2800"}],"chain":"ethereum","description":"* A Sequencer - acting directly","discoveryDrivenData":true},{"id":"EOA-2-and-EOA-3","name":"EOA 2 and EOA 3","accounts":[{"address":"eth:0x20A53dCb196cD2bcc14Ece01F358f1C849aA51dE","type":"EOA","isVerified":true,"name":"0x20A5…51dE","url":"https://etherscan.io/address/0x20A53dCb196cD2bcc14Ece01F358f1C849aA51dE"},{"address":"eth:0x6329Fe417621925C81c16F9F9a18c203C21Af7ab","type":"EOA","isVerified":true,"name":"0x6329…f7ab","url":"https://etherscan.io/address/0x6329Fe417621925C81c16F9F9a18c203C21Af7ab"}],"chain":"ethereum","description":"* A trusted Aggregator - acting directly","discoveryDrivenData":true}]}},"contracts":{"addresses":{"ethereum":[{"name":"PolygonZkEVM","isVerified":true,"address":"eth:0x519E42c24163192Dca44CD3fBDCEBF6be9130987","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x5132A183E9F3CB7C848b0AAC5Ae0c4f0491B7aB2"],"implementations":["eth:0x7253F329302b1b5E774Ac641EA3743E9E3244f2E"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1706364971,"transactionHash":"0x4e3fc80071c2d0852584cb59bfcd784519bfb3582aa3334098a4b32b5f6aaef4","implementations":["eth:0x79BCB82B35A335cD8A8Ec433b304a0c91f67CDE0"]},{"timestamp":1710419135,"transactionHash":"0xeba0bc3b2674c961c5a998f22f789ea610a7c3e57e622a4dd951cca2702b8be3","implementations":["eth:0x2650a9a4fC64f63F573EF0F405064EF54BC46f71"]},{"timestamp":1711323407,"transactionHash":"0x67e892c44b9d14709693e74dd5e17fb40d98c8c2cc1c5330265e758e8958a01b","implementations":["eth:0x2650a9a4fC64f63F573EF0F405064EF54BC46f71"]},{"timestamp":1727792579,"transactionHash":"0x069690e412d29d96bc94d6bf5c816e43bb401cbf948f3e3cad261e073e2d2afe","implementations":["eth:0x2650a9a4fC64f63F573EF0F405064EF54BC46f71"]},{"timestamp":1736943371,"transactionHash":"0x9328cfd3d2833dca2d0ea16fbb34f8fc096c26ca8334476c5bf7107f32436029","implementations":["eth:0x7253F329302b1b5E774Ac641EA3743E9E3244f2E"]}],"description":"The main system contract defining the polygon zkEVM Layer 2 logic. Entry point for sequencing batches.\n* Roles:\n  * **trustedSequencer**: EOA 1","discoveryDrivenData":true},{"name":"Verifier","isVerified":true,"address":"eth:0x9B9671dB83CfcB4508bF361942488C5cA2b1286D","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Verifies ZK proofs for state roots of this Layer 2 via the PolygonRollupManager.\n","discoveryDrivenData":true},{"name":"AggLayerGateway","isVerified":true,"address":"eth:0x046Bb8bb98Db4ceCbB2929542686B74b516274b3","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x0F99738B2Fc14D77308337f3e2596b63aE7BCC4A"],"implementations":["eth:0x7bB0e8f1950722694929dB392abA805AAc6e9346"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1750087643,"transactionHash":"0xe7c64d567589723d0920e6104296a434fb24193d2ccd33814d0b3fd753be5db2","implementations":["eth:0x7bB0e8f1950722694929dB392abA805AAc6e9346"]}],"description":"A verifier gateway for pessimistic proofs. Manages a map of chains and their verifier keys and is used to route proofs based on the first 4 bytes of proofBytes data in a proof submission. The SP1 verifier is used for all proofs.\n* Roles:\n  * **addPpRoute**: Timelock; ultimately PolygonAdminMultisig\n  * **admin**: SharedProxyAdmin; ultimately PolygonAdminMultisig\n  * **aggchainDefaultVKey**: PolygonAdminMultisig\n  * **freezePpRoute**: PolygonAdminMultisig","upgradableBy":[{"name":"PolygonAdminMultisig","delay":"3d"}],"discoveryDrivenData":true},{"name":"PolygonSharedBridge","isVerified":true,"address":"eth:0x2a3DD3EB832aF982ec71669E178424b10Dca2EDe","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x0F99738B2Fc14D77308337f3e2596b63aE7BCC4A"],"implementations":["eth:0x75D28BfDfF93B3e4f20184b442d2634DC01cA48b"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1679653127,"transactionHash":"0x28f93532243dd8a8cc92ce630ef1920f40de15af7db2903efbf42f21fdf8152c","implementations":["eth:0x5ac4182A1dd41AeEf465E40B82fd326BF66AB82C"]},{"timestamp":1707822059,"transactionHash":"0xb83824c7eb1e87bd12222d98cf1cbff317b0853ba1e5beda1e3e3d8a4cfd1b24","implementations":["eth:0x0FeB850B183C57534b56b7d56520133C8f9BDB65"]},{"timestamp":1750689983,"transactionHash":"0xcdd772d0b4764da67b80a72af2da7230f4f70f8c810cb8c4fe3882b8c4506ff3","implementations":["eth:0x75D28BfDfF93B3e4f20184b442d2634DC01cA48b"]}],"description":"The shared bridge contract, escrowing user funds sent to Agglayer participants. It is usually mirrored on each chain and can be used to transfer both ERC20 assets and arbitrary messages.\n* Roles:\n  * **admin**: SharedProxyAdmin; ultimately PolygonAdminMultisig\n  * **proxiedTokensManager**: Timelock; ultimately PolygonAdminMultisig","upgradableBy":[{"name":"PolygonAdminMultisig","delay":"3d"}],"discoveryDrivenData":true},{"name":"PolygonRollupManager","isVerified":true,"address":"eth:0x5132A183E9F3CB7C848b0AAC5Ae0c4f0491B7aB2","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x0F99738B2Fc14D77308337f3e2596b63aE7BCC4A"],"implementations":["eth:0x42B9fF0644741e3353162678596e7D6aA6a13240"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1679653163,"transactionHash":"0xe34243804e1f7257acb09c97d0d6f023663200c39ee85a1e6927b0b391710bbb","implementations":["eth:0xe262Ea2782e2e8dbFe354048c3B5d6DE9603EfEF"]},{"timestamp":1695198635,"transactionHash":"0x25c342d7c5b4137b5439c16fd5fa1577c116277859202b2c68fcd9f73b3fc2ac","implementations":["eth:0x301442aA888701c8B86727d42F3C55Fb0dd9eF7F"]},{"timestamp":1699521779,"transactionHash":"0x1db1400138d6778d303b9a13e816432d11f8dfca00ef6ec6ffcb6698cb447a31","implementations":["eth:0xb1585916487AcEdD99952086f2950763D253b923"]},{"timestamp":1707822059,"transactionHash":"0xb83824c7eb1e87bd12222d98cf1cbff317b0853ba1e5beda1e3e3d8a4cfd1b24","implementations":["eth:0x3b82Da772c825283d85d5d6717A77C6Ff582053b"]},{"timestamp":1730286719,"transactionHash":"0x8c1be5b5d844d6e04b2c224cd810cda091d70e6d5c2e5e0464993f7df1ab8403","implementations":["eth:0x103388f5661d224F4aFb555C7E4a8FB52d0b752d"]},{"timestamp":1738594559,"transactionHash":"0xb499c5a8f315d72886e44eabcbf6428fb9672f3ea8eb55adcbfda0ae0612233e","implementations":["eth:0xA33619940bceb9be7c9679Dd80FA2918C2476382"]},{"timestamp":1750689983,"transactionHash":"0xcdd772d0b4764da67b80a72af2da7230f4f70f8c810cb8c4fe3882b8c4506ff3","implementations":["eth:0x9ab2cB2107d3E737f7977B2E5042C58dE98326ab"]},{"timestamp":1753882523,"transactionHash":"0x289865ea6d92cdf5be21123b6ce61447f500ba14c229f02153113f8419af1695","implementations":["eth:0x42B9fF0644741e3353162678596e7D6aA6a13240"]}],"description":"The central shared managing contract for Polygon Agglayer chains. This contract coordinates chain deployments and proof validation. All connected Layer 2s can be globally paused by activating the 'Emergency State'. This can be done by the PolygonSecurityCouncil or by anyone after 1 week of inactive verifiers.\n* Roles:\n  * **admin**: SharedProxyAdmin; ultimately PolygonAdminMultisig\n  * **createRollup**: PolygonAdminMultisig, PolygonCreateRollupMultisig\n  * **defaultAdmin**: Timelock; ultimately PolygonAdminMultisig\n  * **emergencyCouncilAdmin**: PolygonSecurityCouncil\n  * **trustedAggregator**: EOA 2, EOA 3\n  * **tweakParameters**: PolygonAdminMultisig","upgradableBy":[{"name":"PolygonAdminMultisig","delay":"3d"}],"discoveryDrivenData":true},{"name":"PolygonGlobalExitRootV2","isVerified":true,"address":"eth:0x580bda1e7A0CFAe92Fa7F6c20A3794F169CE3CFb","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x0F99738B2Fc14D77308337f3e2596b63aE7BCC4A"],"implementations":["eth:0xc38C76aE3C8A7dee99d07f1A39246ABe18919a48"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1679653151,"transactionHash":"0x9946be78d6c6d19dd1c6c7134a8fac27e76d32cad36dae2398d28fe6ff838f10","implementations":["eth:0xbc1ea504fC54D078514eFCCA1F6860B5219B6BC3"]},{"timestamp":1707822059,"transactionHash":"0xb83824c7eb1e87bd12222d98cf1cbff317b0853ba1e5beda1e3e3d8a4cfd1b24","implementations":["eth:0x2E38cD55163137483E30580Cb468C2dFf1d85077"]},{"timestamp":1730286719,"transactionHash":"0x8c1be5b5d844d6e04b2c224cd810cda091d70e6d5c2e5e0464993f7df1ab8403","implementations":["eth:0x9Bdda421219900454E94e01d641fE64c60D8f4C8"]},{"timestamp":1750689983,"transactionHash":"0xcdd772d0b4764da67b80a72af2da7230f4f70f8c810cb8c4fe3882b8c4506ff3","implementations":["eth:0xc38C76aE3C8A7dee99d07f1A39246ABe18919a48"]}],"description":"A merkle tree storage contract aggregating state roots of each participating Layer 2, thus creating a single global merkle root representing the global state of the Agglayer, the 'global exit root'. The global exit root is synchronized to all connected Layer 2s to help with their interoperability.\n* Roles:\n  * **admin**: SharedProxyAdmin; ultimately PolygonAdminMultisig","upgradableBy":[{"name":"PolygonAdminMultisig","delay":"3d"}],"discoveryDrivenData":true},{"name":"Timelock","isVerified":true,"address":"eth:0xEf1462451C30Ea7aD8555386226059Fe837CA4EF","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"A timelock with access control. In the case of an activated emergency state in the PolygonRollupManager, all transactions through this timelock are immediately executable. The current minimum delay is 3d.\n* Roles:\n  * **timelockAdmin**: PolygonAdminMultisig (no delay if in emergency state), Timelock (no delay if in emergency state); ultimately PolygonAdminMultisig (no delay if in emergency state)","discoveryDrivenData":true},{"name":"daiBridge","isVerified":true,"address":"eth:0x4A27aC91c5cD3768F140ECabDe3FC2B2d92eDb98","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0xf694C9e3a34f5Fa48b6f3a0Ff186C1c6c4FcE904"],"implementations":["eth:0xF684f2CB299cCDaAB483ffc1573B82f40C6b775b"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1695199499,"transactionHash":"0x2c7c12aeaf738701352017fc49f5268db9632b84bdc6f76474e6776371f53b7e","implementations":["eth:0xF684f2CB299cCDaAB483ffc1573B82f40C6b775b"]}],"description":"Custom Bridge escrow for DAI bridged to PolygonZkEVM allowing for a custom L2 tokens contract.\n* Roles:\n  * **admin**: Polygon zkEVM Multisig","upgradableBy":[{"name":"Polygon zkEVM Multisig","delay":"no"}],"discoveryDrivenData":true},{"name":"usdcBridge","isVerified":true,"address":"eth:0x70E70e58ed7B1Cec0D8ef7464072ED8A52d755eB","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0xf694C9e3a34f5Fa48b6f3a0Ff186C1c6c4FcE904"],"implementations":["eth:0xA4e6762eAAf259DA74696F46fAAF79bA9DdE14E6"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1700125979,"transactionHash":"0x6402dc60bb9c4f704f126f4b11e40b33c287b4ac7f73ea60c50d7452d52ce735","implementations":["eth:0xA4e6762eAAf259DA74696F46fAAF79bA9DdE14E6"]}],"description":"Custom Bridge escrow for USDC bridged to PolygonZkEVM allowing for a custom L2 tokens contract.\n* Roles:\n  * **admin**: Polygon zkEVM Multisig","upgradableBy":[{"name":"Polygon zkEVM Multisig","delay":"no"}],"discoveryDrivenData":true},{"name":"wstETHBridge","isVerified":true,"address":"eth:0xf0CDE1E7F0FAD79771cd526b1Eb0A12F69582C01","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0xf694C9e3a34f5Fa48b6f3a0Ff186C1c6c4FcE904"],"implementations":["eth:0x18FED1E19dC564DC917D203be9d40790472D22e9"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1703945135,"transactionHash":"0x12c54f4243dc8e3b41be87984b78248eecbf98b92e30ff10b487be2599d7e3a1","implementations":["eth:0x18FED1E19dC564DC917D203be9d40790472D22e9"]}],"description":"Custom Bridge escrow for wstETH bridged to PolygonZkEVM allowing for a custom L2 tokens contract.\n* Roles:\n  * **admin**: Polygon zkEVM Multisig","upgradableBy":[{"name":"Polygon zkEVM Multisig","delay":"no"}],"discoveryDrivenData":true},{"name":"SP1Verifier","isVerified":true,"address":"eth:0x0459d576A6223fEeA177Fb3DF53C9c77BF84C459","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Verifier contract for SP1 proofs (v5.0.0).\n","discoveryDrivenData":true},{"name":"SharedProxyAdmin","isVerified":true,"address":"eth:0x0F99738B2Fc14D77308337f3e2596b63aE7BCC4A","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"* Roles:\n  * **owner**: Timelock","discoveryDrivenData":true}]},"risks":[{"category":"Funds can be stolen if","text":"a contract receives a malicious code upgrade. There is a 3d delay on code upgrades unless upgrade is initiated by the     PolygonSecurityCouncil in which case there is no delay."}]},"upgradesAndGovernance":"\nThe regular upgrade process for all system contracts (shared and L2-specific) starts at the PolygonAdminMultisig. For the shared contracts, they schedule a transaction that targets the ProxyAdmin via the Timelock, wait for 3d and then execute the upgrade. An upgrade of the Layer 2 specific rollup- or validium contract requires first adding a new rollupType through the Timelock and the RollupManager (defining the new implementation and verifier contracts). Now that the rollupType is created, either the local admin or the PolygonAdminMultisig can immediately upgrade the local system contracts to it.\n\nThe PolygonSecurityCouncil can expedite the upgrade process by declaring an emergency state. This state pauses both the shared bridge and the PolygonRollupManager and allows for instant upgrades through the timelock. Accordingly, instant upgrades for all system contracts are possible with the cooperation of the SecurityCouncil. The emergency state has been activated 1 time(s) since inception.\n\nFurthermore, the PolygonAdminMultisig is permissioned to manage the shared trusted aggregator (proposer and prover) for all participating Layer 2s, deactivate the emergency state, obsolete rolupTypes and manage operational parameters and fees in the PolygonRollupManager directly. The local admin of a specific Layer 2 can manage their chain by choosing the trusted sequencer, manage forced batches and set the data availability config. Creating new Layer 2s (of existing rollupType) is outsourced to the PolygonCreateRollupMultisig but can also be done by the PolygonAdminMultisig. Custom non-shared bridge escrows have their custom upgrade admins listed in the permissions section.","milestones":[{"title":"Polygon zkEVM Etrog upgrade","url":"https://docs.polygon.technology/zkEVM/architecture/protocol/etrog-upgrade/#etrog-upgrade","date":"2024-02-13","description":"Polygon zkEVM is upgraded to the Polygon Etrog version.","type":"general"},{"title":"Polygon zkEVM Mainnet Beta is Live","url":"https://polygon.technology/blog/polygon-zkevm-mainnet-beta-is-live?utm_source=twitter&utm_medium=social&utm_campaign=zkevm-launch&utm_term=mainnet-beta-live&utm_content=blog","date":"2023-03-27T00:00:00Z","description":"Polygon zkEVM public beta launched.","type":"general"}],"badges":[{"id":"CDKErigon","type":"Stack","name":"Built on the CDK Erigon stack","description":"The project is built using the multistack Agglayer CDK, and is based on the Erigon stack","action":{"type":"scalingFilter","id":"stack","value":"Agglayer CDK"}},{"id":"EthereumCalldata","type":"DA","name":"Ethereum with calldata","description":"This project is posting its data to Ethereum as calldata","action":{"type":"publicDaHighlight","slug":"ethereum"}},{"id":"Agglayer","type":"Infra","name":"Part of the Agglayer","description":"The project is part of the Agglayer, meaning that it uses the shared Agglayer contracts","action":{"type":"scalingFilter","id":"infrastructure","value":"Agglayer"}},{"id":"EVM","type":"VM","name":"EVM","description":"This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language","action":{"type":"scalingFilter","id":"vm","value":"EVM"}}],"discoveryInfo":{"isDiscoDriven":false,"permissionsDiscoDriven":false,"contractsDiscoDriven":false,"baseTimestamp":1759928430,"hasDiscoUi":false}}