{"id":"taiko","capability":"universal","addedAt":1680768480,"dataAvailability":{"layer":{"value":"Ethereum","secondLine":"Blobs or Calldata","sentiment":"good","description":"The data is posted to Ethereum as calldata or blobs.","projectId":"ethereum"},"bridge":{"value":"Enshrined","sentiment":"good","description":"The validating bridge has access to all the data, as it is posted onchain.","projectId":"ethereum"},"mode":{"value":"Transaction data"}},"badges":[{"id":"EVM","type":"VM","name":"EVM","description":"This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language","action":{"type":"scalingFilter","id":"vm","value":"EVM"}},{"id":"EthereumBlobs","type":"DA","name":"Ethereum with blobs","description":"This project is posting its data to Ethereum as blobs","action":{"type":"publicDaHighlight","slug":"ethereum"}}],"reasonsForBeingOther":[{"label":"No proofs","shortDescription":"The proof system isn't fully functional","description":"Projects without a proper proof system fully rely on single entities to safely update the state. A malicious proposer can finalize an invalid state, which can cause loss of funds."}],"display":{"name":"Taiko Alethia","slug":"taiko","stacks":["Taiko"],"description":"Taiko Alethia is an Ethereum-equivalent rollup on the Ethereum network. Taiko aims at combining based sequencing and a multi-proof system through SP1, RISC0 and TEEs.","purposes":["Universal"],"links":{"websites":["https://taiko.xyz"],"bridges":["https://bridge.taiko.xyz/"],"documentation":["https://docs.taiko.xyz/"],"explorers":["https://taikoscan.io","https://taikoscan.network/"],"repositories":["https://github.com/taikoxyz"],"socialMedia":["https://twitter.com/taikoxyz","https://discord.gg/taikoxyz","https://taiko.mirror.xyz","https://community.taiko.xyz","https://youtube.com/@taikoxyz"],"rollupCodes":"https://rollup.codes/taiko"},"liveness":{"explanation":"Taiko posts blocks of L2 transaction data directly to the L1. For a transaction to be considered final, both a block and its parent block have to be proven on the L1. State updates are a three step process: first blocks are proposed to L1, then they are proved, and lastly settled after a cooldown period."}},"config":{"associatedTokens":["TAIKO"],"escrows":[{"address":"0xd60247c6848B7Ca29eDdF63AA924E53dB6Ddd8EC","sinceTimestamp":1714550603,"tokens":["ETH"],"chain":"ethereum"},{"address":"0x996282cA11E5DEb6B5D122CC3B9A1FcAAD4415Ab","sinceTimestamp":1714550603,"tokens":"*","chain":"ethereum"}],"activityConfig":{"type":"block","startBlock":1},"daTracking":[{"type":"ethereum","daLayer":"ethereum","sinceBlock":0,"inbox":"0x06a9Ab27c7e2255df1815E6CC0168d7755Feb19a","sequencers":[],"topics":["0xefe9c6c0b5cbd9c0eed2d1e9c00cfc1a010d6f1aff50f7facd665a639b622b26","0x9eb7fc80523943f28950bbb71ed6d584effe3e1e02ca4ddc8c86e5ee1558c096"]}],"trackedTxs":[{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"functionCall","address":"0x06a9Ab27c7e2255df1815E6CC0168d7755Feb19a","selector":"0xef16e845","functionSignature":"function proposeBlock(bytes _params, bytes _txList) payable returns (tuple(bytes32 l1Hash, bytes32 difficulty, bytes32 blobHash, bytes32 extraData, bytes32 depositsHash, address coinbase, uint64 id, uint32 gasLimit, uint64 timestamp, uint64 l1Height, uint16 minTier, bool blobUsed, bytes32 parentMetaHash, address sender) meta_, tuple(address recipient, uint96 amount, uint64 id)[] deposits_)","sinceTimestamp":1716620627,"untilTimestamp":1747823664}},{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"functionCall","address":"0x06a9Ab27c7e2255df1815E6CC0168d7755Feb19a","selector":"0x648885fb","functionSignature":"function proposeBlockV2(bytes _params, bytes _txList) returns (tuple meta_)","sinceTimestamp":1730602883,"untilTimestamp":1747823664}},{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"functionCall","address":"0x06a9Ab27c7e2255df1815E6CC0168d7755Feb19a","selector":"0x0c8f4a10","functionSignature":"function proposeBlocksV2(bytes[] _paramsArr, bytes[] _txListArr) returns (tuple[] metaArr_)","sinceTimestamp":1730602883,"untilTimestamp":1747823664}},{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"functionCall","address":"0x06a9Ab27c7e2255df1815E6CC0168d7755Feb19a","selector":"0x47faad14","functionSignature":"function proposeBatch(bytes _params, bytes _txList) returns (tuple(bytes32 txsHash, tuple(uint16 numTransactions, uint8 timeShift, bytes32[] signalSlots)[] blocks, bytes32[] blobHashes, bytes32 extraData, address coinbase, uint64 proposedIn, uint64 blobCreatedIn, uint32 blobByteOffset, uint32 blobByteSize, uint32 gasLimit, uint64 lastBlockId, uint64 lastBlockTimestamp, uint64 anchorBlockId, bytes32 anchorBlockHash, tuple(uint8 adjustmentQuotient, uint8 sharingPctg, uint32 gasIssuancePerSecond, uint64 minGasExcess, uint32 maxGasIssuancePerBlock) baseFeeConfig) info_, tuple(bytes32 infoHash, address proposer, uint64 batchId, uint64 proposedAt) meta_)","topics":["0x9eb7fc80523943f28950bbb71ed6d584effe3e1e02ca4ddc8c86e5ee1558c096"],"sinceTimestamp":1747823664}},{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0x06a9Ab27c7e2255df1815E6CC0168d7755Feb19a","selector":"0x10d008bd","functionSignature":"function proveBlock(uint64 _blockId, bytes _input)","sinceTimestamp":1716620627,"untilTimestamp":1747815696}},{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0x06a9Ab27c7e2255df1815E6CC0168d7755Feb19a","selector":"0x440b6e18","functionSignature":"function proveBlocks(uint64[] _blockIds, bytes[] _inputs, bytes _batchProof)","sinceTimestamp":1730602883,"untilTimestamp":1747815696}},{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0x06a9Ab27c7e2255df1815E6CC0168d7755Feb19a","selector":"0xc9cc2843","functionSignature":"function proveBatches(bytes _params, bytes _proof)","topics":["0xc99f03c7db71a9e8c78654b1d2f77378b413cc979a02fa22dc9d39702afa92bc"],"sinceTimestamp":1747815696}},{"uses":[{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0x06a9Ab27c7e2255df1815E6CC0168d7755Feb19a","selector":"0x0cc62b42","functionSignature":"function verifyBatches(uint64 _length)","sinceTimestamp":1747823664}}]},"chainConfig":{"name":"taiko","chainId":167000,"explorerUrl":"https://taikoscan.io","sinceTimestamp":1716620627,"gasTokens":["ETH"],"apis":[{"type":"rpc","url":"https://rpc.mainnet.taiko.xyz","callsPerMinute":500},{"type":"etherscan","chainId":167000}]},"type":"layer2","riskView":{"stateValidation":{"description":"A multi-proof system is used. There are four verifiers available: SGX (Geth), SGX (Reth), SP1 and RISC0. Two of them must be used to prove a block, and SGX (Geth) is mandatory. A block can be proved without providing a ZK proof as SGX (Geth) + SGX (Reth) is a valid combination.","sentiment":"bad","value":"Multi-proofs","executionDelay":7200},"dataAvailability":{"value":"Onchain","description":"All of the data needed for proof construction is published on Ethereum L1.","sentiment":"good","orderHint":null},"exitWindow":{"description":"There is no window for users to exit in case of an unwanted upgrade since contracts are instantly upgradable.","sentiment":"bad","value":"None"},"sequencerFailure":{"value":"Enqueue via L1","description":"Users can submit transactions to an L1 queue, but can't force them. The sequencers cannot selectively skip transactions but can stop processing the queue entirely. In other words, if the sequencers censor or are down, they are so for everyone.","sentiment":"warning"},"proposerFailure":{"value":"Self propose","description":"Anyone can be a Proposer and propose new roots to the L1 bridge. Proofs can only be submitted for blocks sequenced by whitelisted operators. Provers are required to submit two valid proofs for blocks, one of which must be SGX (Geth), and the other can be either SGX (Reth), SP1, or RISC0. If the initial proposer fails to prove the block within the proving window, they forfeit half of their liveness bond.","sentiment":"good","orderHint":0}},"stage":{"stage":"Stage 0","missing":{"nextStage":"Stage 1","requirements":["Users' withdrawals can be censored by the permissioned operators.","Upgrades executed by actors with more centralized control than a Security Council provide less than 7d for users to exit if the permissioned operator is down or censoring.","The Security Council is not properly set up."],"principle":"Compromising ≥75% of the Security Council should be the only way (other than bugs) for a rollup to indefinitely block an L2→L1 message (e.g. a withdrawal) or push an invalid L2→L1 message (e.g. an invalid withdrawal)."},"summary":[{"stage":"Stage 0","requirements":[{"satisfied":false,"description":"The proof system is still under development."},{"satisfied":true,"description":"The project calls itself a rollup."},{"satisfied":true,"description":"State roots are posted to Ethereum L1."},{"satisfied":true,"description":"Inputs for the state transition function are posted to Ethereum L1."},{"satisfied":true,"description":"A source-available node exists that can recreate the state from Ethereum L1 data. Please note that the L2BEAT team has not verified the validity of the node source code. [View code](https://github.com/taikoxyz/simple-taiko-node)"}]},{"stage":"Stage 1","requirements":[{"satisfied":false,"description":"Users' withdrawals can be censored by the permissioned operators."},{"satisfied":false,"description":"Upgrades executed by actors with more centralized control than a Security Council provide less than 7d for users to exit if the permissioned operator is down or censoring."},{"satisfied":false,"description":"The Security Council is not properly set up."}],"principle":{"satisfied":false,"description":"Compromising ≥75% of the Security Council should be the only way (other than bugs) for a rollup to indefinitely block an L2→L1 message (e.g. a withdrawal) or push an invalid L2→L1 message (e.g. an invalid withdrawal)."}},{"stage":"Stage 2","requirements":[{"satisfied":false,"description":"Upgrades unrelated to onchain provable bugs provide less than 30d to exit."},{"satisfied":false,"description":"The Security Council's actions are not confined to onchain provable bugs."}]}]},"stateValidation":{"categories":[{"title":"Validity proofs","description":"Taiko uses a multi-proof system to validate state transitions. The system requires two proofs among four available verifiers: SGX (Geth), SGX (Reth), SP1, and RISC0. The use of SGX (Geth) is mandatory, while the other three can be used interchangeably. This means that a block can be proven without providing a ZK proof if SGX (Geth) and SGX (Reth) are used together. Batch proposers are required to stake a liveness bond of 25.0 TAIKO, half of which is forfeited if they fail to prove the block within the proving window of 2h. The multi-proof system allows to detect bugs in the verifiers if they produce different results for the same block. If such a bug is detected, the system gets automatically paused.","references":[{"title":"TaikoL1.sol - Etherscan source code, liveness bond","url":"https://etherscan.io/address/0xaF95C030c7b8994Ba9213B6A3964baa64E7dF9D8#code"}],"risks":[{"category":"Funds can be stolen if","text":"a malicious block is proven by compromised SGX instances."}]}]},"technology":{"dataAvailability":{"name":"All data required for proofs is published on chain","description":"All the data that is used to construct the system state is published on chain in the form of blobs. This ensures that it will be available for enough time.","references":[],"risks":[]},"operator":{"name":"The system uses whitelist-based rotating operators","description":"The system uses a whitelist-based sequencing mechanism to allow for fast preconfirmations on the L2. On the L1, whitelisted preconfirmers (or the fallback operator) can sequence Taiko L2 blocks by proposing them on the TaikoL1 contract.\n        The whitelist is managed by the `PreconfWhitelist` contract, which currently has 4 active operators registered.\n        The proposer of a block is assigned the designated prover role, and will be the only entity allowed to provide a proof for the block during the 2h proving window.\n        Currently, proving a block requires the block proposer to run a SGX instance with Geth, plus either SGX (Reth), SP1, or RISC0 to prove the block.\n        Unless the block proposer proves the block within the proving window, it will forfeit half of its liveness bond to the TaikoL1 smart contract.","references":[{"title":"TaikoL1.sol - Etherscan source code, proposeBatch function","url":"https://etherscan.io/address/0xaF95C030c7b8994Ba9213B6A3964baa64E7dF9D8#code"},{"title":"PreconfWhitelist.sol - Etherscan source code","url":"https://etherscan.io/address/0xaF95C030c7b8994Ba9213B6A3964baa64E7dF9D8#code"}],"risks":[{"category":"MEV can be extracted if","text":"the operator exploits their centralized position and frontruns user transactions."}]},"forceTransactions":{"name":"Users can force any transaction via L1","description":"Users can submit a blob containing a standalone transaction by calling the `storeForcedInclusion()` function on the `ForcedInclusionStore` contract. \n        This forced transaction mechanism allows users to submit a transaction without running a prover.\n        This mechanism ensures that at least one forced transaction from the queue is processed every 255 batches. However, if many transactions (k) are added to the queue, an individual transaction could experience a worst-case delay of up to k * 255 batches while waiting for its turn. Also, right now there is no mechanism that forces L2 Sequencer to include transactions from the queue in an L2 block, since L1 batches submission is permissioned behind a whitelist.","references":[{"title":"ForcedInclusionStore.sol - Etherscan source code, storeForcedInclusion function","url":"https://etherscan.io/address/0xcdb25e201ad3fdcfe16730a6ca2cc0b1ce2137a2#code"}],"risks":[{"category":"Users can be censored if","text":"the operator refuses to include their transactions."}]},"exitMechanisms":[{"name":"Regular exit","description":"The user initiates the withdrawal by submitting a regular transaction on this chain. When the block containing that transaction is finalized the funds become available for withdrawal on L1. Finally the user submits an L1 transaction to claim the funds. This transaction requires a merkle proof.","risks":[],"references":[]}]},"contracts":{"addresses":{"ethereum":[{"name":"MainnetERC20Vault","isVerified":true,"address":"eth:0x996282cA11E5DEb6B5D122CC3B9A1FcAAD4415Ab","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x75Ba76403b13b26AD1beC70D6eE937314eeaCD0a"],"implementations":["eth:0xb20C8Ffc2dD49596508d262b6E8B6817e9790E63"]},"chain":"ethereum","description":"Shared vault for Taiko chains for bridged ERC20 tokens.\n* Roles:\n  * **admin**: TaikoDAOController","upgradableBy":[{"name":"TaikoDAOController","delay":"no"}],"discoveryDrivenData":true},{"name":"TaikoDAOController","isVerified":true,"address":"eth:0xfC3C4ca95a8C4e5a587373f1718CD91301d6b2D3","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x9CDf589C941ee81D75F34d3755671d614f7cf261"],"implementations":["eth:0xd1934807041B168f383870A0d8F565aDe2DF9D7D"]},"chain":"ethereum","description":"Contract that maintains ownership DAO-controlled assets and contracts. Its token weight does not count towards the DAO quorum.\n* Roles:\n  * **admin**: DAO","upgradableBy":[{"name":"DAO","delay":"no"}],"discoveryDrivenData":true},{"name":"ForcedInclusionStore","isVerified":true,"address":"eth:0x05d88855361808fA1d7fc28084Ef3fCa191c4e03","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x75Ba76403b13b26AD1beC70D6eE937314eeaCD0a"],"implementations":["eth:0xcdb25e201Ad3fdcFe16730A6CA2cC0B1Ce2137a2"]},"chain":"ethereum","description":"Contract that allows users to enqueue forced transactions via L1. The system guarantees that at least one pending forced transaction from the queue will be processed every 255 batches. Individual transactions may face longer delays if the queue is extensive.\n* Roles:\n  * **admin**: TaikoDAOController","upgradableBy":[{"name":"TaikoDAOController","delay":"no"}],"discoveryDrivenData":true},{"name":"TaikoL1","isVerified":true,"address":"eth:0x06a9Ab27c7e2255df1815E6CC0168d7755Feb19a","upgradeability":{"proxyType":"TaikoFork proxy","admins":["eth:0x75Ba76403b13b26AD1beC70D6eE937314eeaCD0a"],"implementations":["eth:0xbB1f830636e1A017b81C3E38b7f6219344149Eb7","eth:0x904Da4C5bD76f932fE09fF32Ae5D7E3d2A5D2264","eth:0xaF95C030c7b8994Ba9213B6A3964baa64E7dF9D8"]},"chain":"ethereum","description":"Main contract implementing the logic for proposing and proving Taiko blocks on L1.\n* Roles:\n  * **admin**: TaikoDAOController","upgradableBy":[{"name":"TaikoDAOController","delay":"no"}],"discoveryDrivenData":true},{"name":"SignerList","isVerified":true,"address":"eth:0x0F95E6968EC1B28c794CF1aD99609431de5179c2","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x0000000000000000000000000000000000000000"],"implementations":["eth:0x584fE70fE82F728f0Fe26488857D623f3B59E070"]},"chain":"ethereum","description":"A signer list for registering agents, similar to a Multisig.\n","discoveryDrivenData":true},{"name":"AutomataDcapV3Attestation","isVerified":true,"address":"eth:0x0ffa4A625ED9DB32B70F99180FD00759fc3e9261","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x75Ba76403b13b26AD1beC70D6eE937314eeaCD0a"],"implementations":["eth:0x5e46443bd131eB6d4c6Fb4849bAD29af9596dd72"]},"chain":"ethereum","description":"Contract managing SGX attestation certificates.\n* Roles:\n  * **admin**: TaikoDAOController\n  * **owner**: TaikoDAOController","upgradableBy":[{"name":"TaikoDAOController","delay":"no"}],"discoveryDrivenData":true},{"name":"Taiko Token","isVerified":true,"address":"eth:0x10dea67478c5F8C5E2D90e5E9B26dBe60c54d800","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x75Ba76403b13b26AD1beC70D6eE937314eeaCD0a"],"implementations":["eth:0x5C96Ff5B7F61b9E3436Ef04DA1377C8388dfC106"]},"chain":"ethereum","description":"ERC20 contract implementing the TAIKO token. It defines a list of addresses designated as non-voting.\n* Roles:\n  * **admin**: TaikoDAOController","upgradableBy":[{"name":"TaikoDAOController","delay":"no"}],"discoveryDrivenData":true},{"name":"EmergencyMultisig","isVerified":true,"address":"eth:0x2AffADEb2ef5e1F2a7F58964ee191F1e88317ECd","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x0000000000000000000000000000000000000000"],"implementations":["eth:0x437E450452E8Bc142bd5317199296EcB187c514b"]},"chain":"ethereum","description":"Modular Governance contract allowing for proposing, voting on and executing encrypted proposals (e.g. for Security Council emergency proposals).\n","discoveryDrivenData":true},{"name":"EncryptionRegistry","isVerified":true,"address":"eth:0x2eFDb93a3B87b930E553d504db67Ee41c69C42d1","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"A registry for signers (of the Security Council) to appoint agents to operate on their behalf. These agents can also register their encryption keys for encrypted emergency proposal support.\n","discoveryDrivenData":true},{"name":"RiscZeroGroth16Verifier","isVerified":true,"address":"eth:0x34Eda8BfFb539AeC33078819847B36D221c6641c","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Verifier contract for RISC Zero Groth16 proofs (version 2.2.0).\n","discoveryDrivenData":true},{"name":"DefaultResolver","isVerified":true,"address":"eth:0x5A982Fb1818c22744f5d7D36D0C4c9f61937b33a","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x75Ba76403b13b26AD1beC70D6eE937314eeaCD0a"],"implementations":["eth:0xE78659fbF234c84C909Cf317D84edc2f6C0D8413"]},"chain":"ethereum","description":"Maps contract names to contract addresses. Changes in this mapping effectively act as contract upgrades.\n* Roles:\n  * **admin**: TaikoDAOController\n  * **owner**: TaikoDAOController","upgradableBy":[{"name":"TaikoDAOController","delay":"no"}],"discoveryDrivenData":true},{"name":"ProverSet","isVerified":true,"address":"eth:0x68d30f47F19c07bCCEf4Ac7FAE2Dc12FCa3e0dC9","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x0F026a3efE44E0Fe34B87375EFe69b16c05D0438"],"implementations":["eth:0xB8826B144eB895eFE2923b61b3b117B1298A9526"]},"chain":"ethereum","description":"An operator proxy used by the Taiko team for operating (proposing, proving) the based rollup from permissioned addresses.\n* Roles:\n  * **admin**: EOA 1","upgradableBy":[{"name":"EOA 1","delay":"no"}],"discoveryDrivenData":true},{"name":"Risc0VerifierGateway","isVerified":true,"address":"eth:0x73Ee496dA20e5C65340c040B0D8c3C891C1f74AE","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x75Ba76403b13b26AD1beC70D6eE937314eeaCD0a"],"implementations":["eth:0x3dEF88e306E449c6Abf9AaD8038C95d11Bb0b614"]},"chain":"ethereum","description":"Entry contract to verify batches using RISC Zero.\n* Roles:\n  * **admin**: TaikoDAOController\n  * **owner**: TaikoDAOController","upgradableBy":[{"name":"TaikoDAOController","delay":"no"}],"discoveryDrivenData":true},{"name":"SgxVerifier","isVerified":true,"address":"eth:0x7e6409e9b6c5e2064064a6cC994f9a2e95680782","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x75Ba76403b13b26AD1beC70D6eE937314eeaCD0a"],"implementations":["eth:0xDb7AEe4fA967C2aB0eC28f63C8675224E59340A5"]},"chain":"ethereum","description":"Verifier contract for SGX proven blocks.\n* Roles:\n  * **admin**: TaikoDAOController\n  * **owner**: TaikoDAOController","upgradableBy":[{"name":"TaikoDAOController","delay":"no"}],"discoveryDrivenData":true},{"name":"AutomataDcapV3Attestation","isVerified":true,"address":"eth:0x8d7C954960a36a7596d7eA4945dDf891967ca8A3","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x75Ba76403b13b26AD1beC70D6eE937314eeaCD0a"],"implementations":["eth:0x5f73f0AdC7dAA6134Fe751C4a78d524f9384e0B5"]},"chain":"ethereum","description":"Contract managing SGX attestation certificates.\n* Roles:\n  * **admin**: TaikoDAOController\n  * **owner**: TaikoDAOController","upgradableBy":[{"name":"TaikoDAOController","delay":"no"}],"discoveryDrivenData":true},{"name":"DefaultResolver","isVerified":true,"address":"eth:0x8Efa01564425692d0a0838DC10E300BD310Cb43e","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x75Ba76403b13b26AD1beC70D6eE937314eeaCD0a"],"implementations":["eth:0xFca4F0Ab7B95EEf2e3A60EF2Bc0c42DdAA62E66D"]},"chain":"ethereum","description":"Maps contract names to contract addresses. Changes in this mapping effectively act as contract upgrades.\n* Roles:\n  * **admin**: TaikoDAOController\n  * **owner**: TaikoDAOController","upgradableBy":[{"name":"TaikoDAOController","delay":"no"}],"discoveryDrivenData":true},{"name":"QuotaManager","isVerified":true,"address":"eth:0x91f67118DD47d502B1f0C354D0611997B022f29E","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x75Ba76403b13b26AD1beC70D6eE937314eeaCD0a"],"implementations":["eth:0xdb627bfD79e81fE42138Eb875287F94FAd5BBc64"]},"chain":"ethereum","description":"Defines withdrawal limits per token.\n* Roles:\n  * **admin**: TaikoDAOController","upgradableBy":[{"name":"TaikoDAOController","delay":"no"}],"discoveryDrivenData":true},{"name":"OptimisticTokenVotingPlugin","isVerified":true,"address":"eth:0x989E348275b659d36f8751ea1c10D146211650BE","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x0000000000000000000000000000000000000000"],"implementations":["eth:0x5B0Da2FB08754a5dDf32e28887D2F5437485f085"]},"chain":"ethereum","description":"An optimistic governance module. Proposals pass and can be executed unless 10% of votable TAIKO veto them within 7d.\n","discoveryDrivenData":true},{"name":"SgxVerifier","isVerified":true,"address":"eth:0x9e322fC59b8f4A29e6b25c3a166ac1892AA30136","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x75Ba76403b13b26AD1beC70D6eE937314eeaCD0a"],"implementations":["eth:0x8ADDcf5d4CD7BD9dA1CE62eF84AeE22c9E2BfbA5"]},"chain":"ethereum","description":"Verifier contract for SGX proven blocks.\n* Roles:\n  * **admin**: TaikoDAOController\n  * **owner**: TaikoDAOController","upgradableBy":[{"name":"TaikoDAOController","delay":"no"}],"discoveryDrivenData":true},{"name":"TaikoWrapper","isVerified":true,"address":"eth:0x9F9D2fC7abe74C79f86F0D1212107692430eef72","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x75Ba76403b13b26AD1beC70D6eE937314eeaCD0a"],"implementations":["eth:0x52D6FC6F6db9E370c336f64f61ff3C29568d1859"]},"chain":"ethereum","description":"Entry point for proposing blocks. It enforces the inclusion of forced transactions after their deadline.\n* Roles:\n  * **admin**: TaikoDAOController","upgradableBy":[{"name":"TaikoDAOController","delay":"no"}],"discoveryDrivenData":true},{"name":"VerifierGateway","isVerified":true,"address":"eth:0xB16931e78d0cE3c9298bbEEf3b5e2276D34b8da1","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x75Ba76403b13b26AD1beC70D6eE937314eeaCD0a"],"implementations":["eth:0x8C520BB75590deaBC30c4fcaFD8778A43E5481b9"]},"chain":"ethereum","description":"Gateway contract for the multi-proof system. It redirects proof to the appropriate verifier based on the proof type.\n* Roles:\n  * **admin**: TaikoDAOController","upgradableBy":[{"name":"TaikoDAOController","delay":"no"}],"discoveryDrivenData":true},{"name":"SP1VerifierGateway","isVerified":true,"address":"eth:0xbee1040D0Aab17AE19454384904525aE4A3602B9","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x75Ba76403b13b26AD1beC70D6eE937314eeaCD0a"],"implementations":["eth:0x2E17aC86CafC1db939C9942E478F92bF0E548Ee7"]},"chain":"ethereum","description":"Entry contract to verify batches using SP1.\n* Roles:\n  * **admin**: TaikoDAOController\n  * **owner**: TaikoDAOController","upgradableBy":[{"name":"TaikoDAOController","delay":"no"}],"discoveryDrivenData":true},{"name":"PreconfRouter","isVerified":true,"address":"eth:0xD5AA0e20e8A6e9b04F080Cf8797410fafAa9688a","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x75Ba76403b13b26AD1beC70D6eE937314eeaCD0a"],"implementations":["eth:0xC44577BAA22f999a16a9dF817A2aba6e5e696913"]},"chain":"ethereum","description":"Entry point for batch proposals under the pre-confirmation architecture. It allows batches to be proposed only by whitelisted addresses.\n* Roles:\n  * **admin**: TaikoDAOController","upgradableBy":[{"name":"TaikoDAOController","delay":"no"}],"discoveryDrivenData":true},{"name":"MainnetBridge","isVerified":true,"address":"eth:0xd60247c6848B7Ca29eDdF63AA924E53dB6Ddd8EC","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x75Ba76403b13b26AD1beC70D6eE937314eeaCD0a"],"implementations":["eth:0x2705B12a971dA766A3f9321a743d61ceAD67dA2F"]},"chain":"ethereum","description":"Shared bridge for Taiko chains for bridged ETH.\n* Roles:\n  * **admin**: TaikoDAOController","upgradableBy":[{"name":"TaikoDAOController","delay":"no"}],"discoveryDrivenData":true},{"name":"Multisig","isVerified":true,"address":"eth:0xD7dA1C25E915438720692bC55eb3a7170cA90321","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x0000000000000000000000000000000000000000"],"implementations":["eth:0x8510d389236d7213eE9B9C38CAaBc0aD24853C25"]},"chain":"ethereum","description":"Modular Governance contract allowing for proposing, voting on and executing proposals (e.g. for Security Council standard proposals).\n","discoveryDrivenData":true},{"name":"L1SharedAddressManager","isVerified":true,"address":"eth:0xEf9EaA1dd30a9AA1df01c36411b5F082aA65fBaa","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x75Ba76403b13b26AD1beC70D6eE937314eeaCD0a"],"implementations":["eth:0xEC1a9aa1C648F047752fe4eeDb2C21ceab0c6449"]},"chain":"ethereum","description":"Maps contract names to contract addresses. Changes in this mapping effectively act as contract upgrades.\n* Roles:\n  * **admin**: TaikoDAOController\n  * **owner**: TaikoDAOController","upgradableBy":[{"name":"TaikoDAOController","delay":"no"}],"discoveryDrivenData":true},{"name":"PreconfWhitelist","isVerified":true,"address":"eth:0xFD019460881e6EeC632258222393d5821029b2ac","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x75Ba76403b13b26AD1beC70D6eE937314eeaCD0a"],"implementations":["eth:0x54FeDc114D78dcbDb8c7b2DeA433f9749E8fd0Fc"]},"chain":"ethereum","description":"Contract that contains the whitelist for addresses allowed to propose (pre-confirmation) batches. There are currently 4 operators registered.\n* Roles:\n  * **admin**: TaikoDAOController\n  * **getOperatorCandidatesForCurrentEpoch**: EOA 2, EOA 3, EOA 4, EOA 5","upgradableBy":[{"name":"TaikoDAOController","delay":"no"}],"discoveryDrivenData":true},{"name":"SP1Verifier","isVerified":true,"address":"eth:0xFF5Adab685362DC4C33536a65aF5873738D1216B","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Verifier contract for SP1 proofs (v5.0.0).\n","discoveryDrivenData":true}],"taiko":[{"name":"Bridge","isVerified":true,"address":"taiko:0x1670000000000000000000000000000000000001","upgradeability":{"proxyType":"EIP1967 proxy","admins":["taiko:0xfA06E15B8b4c5BF3FC5d9cfD083d45c53Cbe8C7C"],"implementations":["taiko:0x95ae2918dcbc6aFF8B4c1F1BCC1bf819b6e08B83"]},"chain":"taiko","description":"* Roles:\n  * **admin**: DelegateController","upgradableBy":[{"name":"DelegateController","delay":"no"}],"discoveryDrivenData":true},{"name":"SignalService","isVerified":true,"address":"taiko:0x1670000000000000000000000000000000000005","upgradeability":{"proxyType":"EIP1967 proxy","admins":["taiko:0xfA06E15B8b4c5BF3FC5d9cfD083d45c53Cbe8C7C"],"implementations":["taiko:0xaea51c413Bd15bBee72737C8094BE942B5208762"]},"chain":"taiko","description":"* Roles:\n  * **admin**: DelegateController","upgradableBy":[{"name":"DelegateController","delay":"no"}],"discoveryDrivenData":true},{"name":"L2AddressManager","isVerified":true,"address":"taiko:0x1670000000000000000000000000000000000006","upgradeability":{"proxyType":"EIP1967 proxy","admins":["taiko:0xfA06E15B8b4c5BF3FC5d9cfD083d45c53Cbe8C7C"],"implementations":["taiko:0x0167000000000000000000000000000000000006"]},"chain":"taiko","description":"Maps contract names to contract addresses. Changes in this mapping effectively act as contract upgrades.\n* Roles:\n  * **admin**: DelegateController\n  * **owner**: DelegateController","upgradableBy":[{"name":"DelegateController","delay":"no"}],"discoveryDrivenData":true},{"name":"TaikoAnchor","isVerified":true,"address":"taiko:0x1670000000000000000000000000000000010001","upgradeability":{"proxyType":"EIP1967 proxy","admins":["taiko:0xfA06E15B8b4c5BF3FC5d9cfD083d45c53Cbe8C7C"],"implementations":["taiko:0xE6d1efcC6AC8969474308C99a3805c332D33a1E0"]},"chain":"taiko","description":"Handles cross-layer message verification and manages EIP-1559 gas pricing for L2 operations. Anchors L1 block details to L2 for cross-layer communication.\n* Roles:\n  * **admin**: DelegateController","upgradableBy":[{"name":"DelegateController","delay":"no"}],"discoveryDrivenData":true},{"name":"DefaultResolver","isVerified":true,"address":"taiko:0xc32277f541bBADAA260337E71Cea53871D310DC8","upgradeability":{"proxyType":"EIP1967 proxy","admins":["taiko:0xfA06E15B8b4c5BF3FC5d9cfD083d45c53Cbe8C7C"],"implementations":["taiko:0xDaD5a963618b340bC88F267920907bE567Fd88c4"]},"chain":"taiko","description":"Maps contract names to contract addresses. Changes in this mapping effectively act as contract upgrades.\n* Roles:\n  * **admin**: DelegateController\n  * **owner**: DelegateController","upgradableBy":[{"name":"DelegateController","delay":"no"}],"discoveryDrivenData":true}]},"risks":[{"category":"Funds can be stolen if","text":"a contract receives a malicious code upgrade. There is no delay on code upgrades.","isCritical":true}]},"permissions":{"ethereum":{"roles":[{"name":"Sequencer","description":"Allowed to commit transactions from the current layer to the host chain.","accounts":[{"address":"eth:0x000cb000E880A92a8f383D69dA2142a969B93DE7","type":"EOA","isVerified":true,"name":"0x000c…3DE7","url":"https://etherscan.io/address/0x000cb000E880A92a8f383D69dA2142a969B93DE7"},{"address":"eth:0x5F62d006C10C009ff50C878Cd6157aC861C99990","type":"EOA","isVerified":true,"name":"0x5F62…9990","url":"https://etherscan.io/address/0x5F62d006C10C009ff50C878Cd6157aC861C99990"},{"address":"eth:0xCbeB5d484b54498d3893A0c3Eb790331962e9e9d","type":"EOA","isVerified":true,"name":"0xCbeB…9e9d","url":"https://etherscan.io/address/0xCbeB5d484b54498d3893A0c3Eb790331962e9e9d"},{"address":"eth:0xe2dA8aC2E550cd141198a117520D4EDc8692AB74","type":"EOA","isVerified":true,"name":"0xe2dA…AB74","url":"https://etherscan.io/address/0xe2dA8aC2E550cd141198a117520D4EDc8692AB74"}],"chain":"ethereum","discoveryDrivenData":true}],"actors":[{"name":"DAO","accounts":[{"address":"eth:0x9CDf589C941ee81D75F34d3755671d614f7cf261","type":"Contract","isVerified":true,"name":"0x9CDf…f261","url":"https://etherscan.io/address/0x9CDf589C941ee81D75F34d3755671d614f7cf261"}],"chain":"ethereum","description":"The main contract of the Aragon-based DAO governance framework.\n* Can upgrade **with no delay**\n  * TaikoDAOController \n  * TaikoDAOController ","discoveryDrivenData":true},{"name":"TaikoDAOController","accounts":[{"address":"eth:0x75Ba76403b13b26AD1beC70D6eE937314eeaCD0a","type":"Contract","isVerified":true,"name":"0x75Ba…CD0a","url":"https://etherscan.io/address/0x75Ba76403b13b26AD1beC70D6eE937314eeaCD0a"}],"chain":"ethereum","description":"Contract that maintains ownership DAO-controlled assets and contracts. Its token weight does not count towards the DAO quorum.\nMember of Taiko Foundation Treasury Multisig.\n* Can upgrade **with no delay**\n  * ForcedInclusionStore \n  * TaikoL1 \n  * AutomataDcapV3Attestation \n  * Taiko Token \n  * DefaultResolver \n  * Risc0VerifierGateway \n  * SgxVerifier \n  * AutomataDcapV3Attestation \n  * DefaultResolver \n  * QuotaManager \n  * MainnetERC20Vault \n  * MainnetSignalService \n  * SgxVerifier \n  * TaikoWrapper \n  * VerifierGateway \n  * SP1VerifierGateway \n  * PreconfRouter \n  * MainnetBridge \n  * L1SharedAddressManager \n  * PreconfWhitelist \n* Can interact with AutomataDcapV3Attestation\n  * can update the program being verified \n* Can interact with DefaultResolver\n  * can update the contract address for a given name \n* Can interact with Risc0VerifierGateway\n  * can update the program being verified \n* Can interact with SgxVerifier\n  * can add new instances without a DCAP attestation \n* Can interact with AutomataDcapV3Attestation\n  * can update the program being verified \n* Can interact with DefaultResolver\n  * can update the contract address for a given name \n* Can interact with SgxVerifier\n  * can add new instances without a DCAP attestation \n* Can interact with SP1VerifierGateway\n  * can update the program being verified \n* Can interact with L1SharedAddressManager\n  * can update the contract address for a given name ","discoveryDrivenData":true},{"name":"Taiko Foundation Treasury Multisig","description":"A Multisig with 2/3 threshold. ","accounts":[{"address":"eth:0x363e846B91AF677Fb82f709b6c35BD1AaFc6B3Da","type":"Contract","isVerified":true,"name":"0x363e…B3Da","url":"https://etherscan.io/address/0x363e846B91AF677Fb82f709b6c35BD1AaFc6B3Da"}],"chain":"ethereum","references":[],"participants":[{"address":"eth:0x75Ba76403b13b26AD1beC70D6eE937314eeaCD0a","type":"Contract","isVerified":true,"name":"TaikoDAOController","url":"#TaikoDAOController"},{"address":"eth:0x0F026a3efE44E0Fe34B87375EFe69b16c05D0438","type":"EOA","isVerified":true,"name":"EOA 1","url":"#EOA 1"},{"address":"eth:0x3b1D1F89E0b6803174A2dE72e21A6f6f8464d5F1","type":"EOA","isVerified":true,"name":"0x3b1D…d5F1","url":"https://etherscan.io/address/0x3b1D1F89E0b6803174A2dE72e21A6f6f8464d5F1"}],"discoveryDrivenData":true},{"name":"Taiko Multisig","description":"A Multisig with 5/7 threshold. ","accounts":[{"address":"eth:0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F","type":"Contract","isVerified":true,"name":"0x9CBe…9C7F","url":"https://etherscan.io/address/0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F"}],"chain":"ethereum","references":[],"participants":[{"address":"eth:0xAC5898b0FFFd23F4Ef09F0E50Fa1bC4896eF7163","type":"EOA","isVerified":true,"name":"0xAC58…7163","url":"https://etherscan.io/address/0xAC5898b0FFFd23F4Ef09F0E50Fa1bC4896eF7163"},{"address":"eth:0xDC4ece5620659F4d5d1536Cab52BD5e5B15F8a0a","type":"EOA","isVerified":true,"name":"0xDC4e…8a0a","url":"https://etherscan.io/address/0xDC4ece5620659F4d5d1536Cab52BD5e5B15F8a0a"},{"address":"eth:0x0aED2375549D1115e180bd0caea829C429Ea50B3","type":"EOA","isVerified":true,"name":"0x0aED…50B3","url":"https://etherscan.io/address/0x0aED2375549D1115e180bd0caea829C429Ea50B3"},{"address":"eth:0x1eE487CEdCe52c370DB11e62987F3ABe873E145A","type":"EOA","isVerified":true,"name":"0x1eE4…145A","url":"https://etherscan.io/address/0x1eE487CEdCe52c370DB11e62987F3ABe873E145A"},{"address":"eth:0x0F026a3efE44E0Fe34B87375EFe69b16c05D0438","type":"EOA","isVerified":true,"name":"EOA 1","url":"#EOA 1"},{"address":"eth:0x7Cdd1c128Cd72dd252f569eeD942735330937F91","type":"EOA","isVerified":true,"name":"0x7Cdd…7F91","url":"https://etherscan.io/address/0x7Cdd1c128Cd72dd252f569eeD942735330937F91"},{"address":"eth:0x3b1D1F89E0b6803174A2dE72e21A6f6f8464d5F1","type":"EOA","isVerified":true,"name":"0x3b1D…d5F1","url":"https://etherscan.io/address/0x3b1D1F89E0b6803174A2dE72e21A6f6f8464d5F1"}],"discoveryDrivenData":true},{"name":"EOA 1","accounts":[{"address":"eth:0x0F026a3efE44E0Fe34B87375EFe69b16c05D0438","type":"EOA","isVerified":true,"name":"0x0F02…0438","url":"https://etherscan.io/address/0x0F026a3efE44E0Fe34B87375EFe69b16c05D0438"}],"chain":"ethereum","description":"Member of Taiko Foundation Treasury Multisig, Taiko Multisig.\n* Can upgrade **with no delay**\n  * ProverSet ","discoveryDrivenData":true}]},"taiko":{"roles":[],"actors":[{"name":"DelegateController","accounts":[{"address":"taiko:0xfA06E15B8b4c5BF3FC5d9cfD083d45c53Cbe8C7C","type":"Contract","isVerified":false,"name":"0xfA06…8C7C","url":"https://taikoscan.io/address/0xfA06E15B8b4c5BF3FC5d9cfD083d45c53Cbe8C7C"}],"chain":"taiko","description":"* Can upgrade **with no delay**\n  * Bridge \n  * SignalService \n  * L2AddressManager \n  * TaikoAnchor \n  * DefaultResolver \n  * DelegateController \n* Can interact with L2AddressManager\n  * can update the contract address for a given name \n* Can interact with DefaultResolver\n  * can update the contract address for a given name ","discoveryDrivenData":true}]}},"milestones":[{"title":"Preconfs introduction","url":"https://taiko.mirror.xyz/rbgD_KM06QkDe1t0Gw1wI_MLvwobTS1PqEIfstZRo48","date":"2025-08-11T00:00:00.00Z","description":"Taiko implements preconfs - whitelisted actors provide fast soft confirmations for L2 txs.","type":"general"},{"title":"Plonky3 vulnerability patch","url":"https://x.com/SuccinctLabs/status/1929773028034204121","date":"2025-06-04T00:00:00.00Z","description":"SP1 verifier is patched to fix critical vulnerability in Plonky3 proof system (SP1 dependency).","type":"incident"},{"title":"Taiko Pacaya Hardfork","url":"https://taiko.mirror.xyz/pIchmo0E-DfSySCzL52BFbus54Z3XJEO0k0Ptqqpm_I","date":"2025-05-21T00:00:00.00Z","description":"Taiko Pacaya hardfork replaces the contestable rollup design with a batch based protocol.","type":"general"},{"title":"TAIKO Token Airdrop","url":"https://taiko.mirror.xyz/VSOtILX2DQsc_6IMt5hBT1fEYSH8243pZ8IA_pBfHks","date":"2024-06-05T00:00:00.00Z","description":"TAIKO token launches.","type":"general"},{"title":"Mainnet Launch","url":"https://taiko.mirror.xyz/Pizjv30FvjsZUwEG-Da7Gs6F8qeDLc4CKKEBqy3pTt8","date":"2024-05-27T00:00:00.00Z","description":"Taiko is deployed on Ethereum mainnet.","type":"general"},{"title":"Taiko Based Sequencing Upgrade","url":"https://taiko.mirror.xyz/_oKlnpzKSOxGILyy4WlvpUmYEqD7BFxzmRo3XETlJqE","date":"2024-06-06T00:00:00.00Z","description":"Proposing blocks on Taiko is now permissionless.","type":"general"}],"discoveryInfo":{"isDiscoDriven":false,"permissionsDiscoDriven":false,"contractsDiscoDriven":false,"baseTimestamp":1757403234,"hasDiscoUi":false}}