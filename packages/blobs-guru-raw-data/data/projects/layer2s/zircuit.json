{"type":"layer2","id":"zircuit","addedAt":1712559704,"capability":"universal","display":{"purposes":["Universal"],"architectureImage":"zircuit","stacks":["OP Stack"],"name":"Zircuit","slug":"zircuit","description":"Zircuit is a universal ZK Rollup. It is based on the Optimism Bedrock architecture, employing AI to identify and stop malicious transactions at the sequencer level.","links":{"websites":["https://zircuit.com/"],"bridges":["https://bridge.zircuit.com/","https://app.zircuit.com/"],"documentation":["https://docs.zircuit.com/"],"explorers":["https://explorer.zircuit.com"],"repositories":["https://github.com/zircuit-labs"],"socialMedia":["https://x.com/ZircuitL2","https://discord.com/invite/zircuit","https://zircuit.com/blog","https://t.me/zircuitl2_bot"],"rollupCodes":"https://rollup.codes/zircuit"},"liveness":{"warnings":{"stateUpdates":"Please note, for Optimistic rollups the state is not finalized until the challenge period passes."},"explanation":"Zircuit is an Optimistic rollup that posts transaction data to the L1. For a transaction to be considered final, it has to be posted within a tx batch on L1 that links to a previous finalized batch. If the previous batch is missing, transaction finalization can be delayed up to 12h or until it gets published. The state root is settled 4h after it has been posted."}},"chainConfig":{"name":"zircuit","chainId":48900,"coingeckoPlatform":"zircuit","sinceTimestamp":1719936217,"apis":[{"type":"rpc","url":"https://zircuit1-mainnet.p2pify.com/","callsPerMinute":1500},{"type":"rpc","url":"https://zircuit1-mainnet.liquify.com/","callsPerMinute":1500},{"type":"rpc","url":"https://zircuit-mainnet.drpc.org/","callsPerMinute":1500},{"type":"sourcify","chainId":48900}],"explorerUrl":"https://explorer.zircuit.com","gasTokens":["ETH"]},"config":{"associatedTokens":["ZRC"],"activityConfig":{"type":"block","startBlock":1},"escrows":[{"address":"0x17bfAfA932d2e23Bd9B909Fd5B4D2e2a27043fb1","sinceTimestamp":1719936491,"tokens":["ETH"],"contract":{"isVerified":true,"address":"eth:0x17bfAfA932d2e23Bd9B909Fd5B4D2e2a27043fb1","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257"],"implementations":["eth:0xF7209f5471628aC5f68FE4ae98Feb7f02E0f40Be"]},"chain":"ethereum","description":"Main entry point for users depositing ETH.","upgradableBy":[{"name":"ProxyAdmin","delay":"no"}]},"chain":"ethereum","includeInTotal":true},{"address":"0x386B76D9cA5F5Fb150B6BFB35CF5379B22B26dd8","sinceTimestamp":1719936539,"tokens":"*","excludedTokens":["rswETH","rsETH"],"premintedTokens":["ZRC"],"contract":{"isVerified":true,"address":"eth:0x386B76D9cA5F5Fb150B6BFB35CF5379B22B26dd8","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257"],"implementations":["eth:0xFF30d6E9acecc919e4E9e1A2e67980ee44Df6Ebb"]},"chain":"ethereum","description":"Main entry point for users depositing ERC20 token that do not require custom gateway.","upgradableBy":[{"name":"ProxyAdmin","delay":"no"}]},"chain":"ethereum","includeInTotal":true},{"address":"0x912C7271a6A3622dfb8B218eb46a6122aB046C79","sinceTimestamp":1726591415,"tokens":["wstETH"],"contract":{"isVerified":true,"address":"eth:0x912C7271a6A3622dfb8B218eb46a6122aB046C79","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c"],"implementations":["eth:0x6bc726C993103197C41d787dd72eCd4D2e1614E8"]},"chain":"ethereum","description":"custom wstETH Vault controlled by Lido governance, using the canonical bridge for messaging."},"chain":"ethereum","includeInTotal":true,"source":"external","bridgedUsing":{"bridges":[{"name":"Custom escrow"}]}}],"daTracking":[{"type":"ethereum","daLayer":"ethereum","sinceBlock":20219939,"inbox":"0xFF00000000000000000000000000000000048900","sequencers":["0xAF1E4f6a47af647F87C0Ec814d8032C4a4bFF145"]}],"trackedTxs":[{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0x92Ef6Af472b39F1b363da45E35530c24619245A4","selector":"0xa9efd6b8","functionSignature":"function proposeL2Output(bytes32 _outputRoot, uint256 _l2BlockNumber, bytes32 _l1Blockhash, uint256 _l1BlockNumber, bytes _proof)","sinceTimestamp":1720137600,"untilTimestamp":1741654919}},{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"transfer","from":"0xAF1E4f6a47af647F87C0Ec814d8032C4a4bFF145","to":"0xFF00000000000000000000000000000000048900","sinceTimestamp":1719936217}},{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"},{"type":"liveness","subtype":"proofSubmissions"}],"query":{"formula":"functionCall","address":"0x92Ef6Af472b39F1b363da45E35530c24619245A4","selector":"0x1bf75d29","functionSignature":"function proposeL2OutputV2(uint256 _batchIndex, bytes32 _batchHash, bytes32 _poseidonPostStateRoot, bytes32 _outputRoot, uint256 _l2BlockNumber, bytes32 _l1BlockHash, uint256 _l1BlockNumber, bytes _aggrProof) payable","sinceTimestamp":1741654919,"untilTimestamp":1756148051}},{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"},{"type":"liveness","subtype":"proofSubmissions"}],"query":{"formula":"functionCall","address":"0x92Ef6Af472b39F1b363da45E35530c24619245A4","selector":"0x76340d0a","functionSignature":"function proposeL2OutputV3(bytes32 _outputRoot, uint256 _l2BlockNumber, uint256 _l1BlockNumber, bytes _proof, address _proverAddress) payable","sinceTimestamp":1756148051}}]},"ecosystemInfo":{"id":"superchain","isPartOfSuperchain":false},"technology":{"dataAvailability":{"name":"All data required for proofs is published on chain","description":"All the data that is used to construct the system state is published on chain in the form of cheap blobs or calldata. This ensures that it will be available for enough time.","risks":[],"references":[{"title":"Derivation: Batch submission - OP Mainnet specs","url":"https://github.com/ethereum-optimism/specs/blob/main/specs/protocol/derivation.md#batch-submission"},{"title":"BatchInbox - address","url":"https://etherscan.io/address/0xFF00000000000000000000000000000000048900#code"},{"title":"OptimismPortal.sol - source code, depositTransaction function","url":"https://etherscan.io/address/0xF7209f5471628aC5f68FE4ae98Feb7f02E0f40Be#code"}]},"operator":{"name":"The system has a centralized operator","description":"The operator is the only entity that can propose blocks. A live and trustworthy operator is vital to the health of the system. The L2 code has been modified to allow the sequencer to explicitly censor selected L1->L2 transactions.","risks":[{"category":"MEV can be extracted if","text":"the operator exploits their centralized position and frontruns user transactions."}],"references":[{"title":"L1Block.sol - Sourcify explorer source code","url":"https://repo.sourcify.dev/48900/0xFf256497D61dcd71a9e9Ff43967C13fdE1F72D12"}]},"forceTransactions":{"name":"Users can force any transaction","description":"Because the state of the system is based on transactions submitted on the underlying host chain and anyone can submit their transactions there it allows the users to circumvent censorship by interacting with the smart contract on the host chain directly.","risks":[],"references":[{"title":"Sequencing Window - OP Mainnet Specs","url":"https://github.com/ethereum-optimism/optimism/blob/51eeb76efeb32b3df3e978f311188aa29f5e3e94/specs/glossary.md#sequencing-window"},{"title":"OptimismPortal.sol - source code, depositTransaction function","url":"https://etherscan.io/address/0xF7209f5471628aC5f68FE4ae98Feb7f02E0f40Be#code"}]},"exitMechanisms":[{"name":"Regular messaging","description":"The user initiates L2->L1 messages by submitting a regular transaction on this chain. When the block containing that transaction is settled, the message becomes available for processing on L1. The process of block finalization takes a challenge period of 4h to complete.","risks":[{"category":"Funds can be frozen if","text":"the centralized validator goes down. Users cannot produce blocks themselves and exiting the system requires new block production.","isCritical":true}],"references":[{"title":"OptimismPortal.sol - source code, proveWithdrawalTransaction function","url":"https://explorer.zircuit.com/address/0xF7209f5471628aC5f68FE4ae98Feb7f02E0f40Be#code"},{"title":"OptimismPortal.sol - source code, finalizeWithdrawalTransaction function","url":"https://explorer.zircuit.com/address/0xF7209f5471628aC5f68FE4ae98Feb7f02E0f40Be#code"},{"title":"L2OutputOracle.sol - source code, PROPOSER check","url":"https://explorer.zircuit.com/address/0x6AB82bb139383BB758348fBb81EdA57458e59f65#code"}]},{"name":"Forced messaging","description":"If the user experiences censorship from the operator with regular L2->L1 messaging they can submit their messages directly on L1. The system is then obliged to service this request or halt all messages, including forced withdrawals from L1 and regular messages initiated on L2. Once the force operation is submitted and if the request is serviced, the operation follows the flow of a regular message.","risks":[{"category":"Users can be censored if","text":"the operator explicitly censors their forced transaction, possible through a modification in the smart contracts."}],"references":[{"title":"Forced withdrawal from an OP Stack blockchain","url":"https://docs.optimism.io/stack/transactions/forced-transaction"}]},{"name":"Escape mechanism","description":"Zircuit employs a custom escape mechanism that can help users exit the system in certain situations. If the operator disappears or is down for more than 30d, users can submit a merkle proof to the L1 contracts to withdraw any ETH or ERC-20 balance they have on L2. L2 DeFi contracts and their deployers can manually distribute their pooled L2 balance using 'Resolver' contracts on L1 in case of an escape. In contrast to individual account escapes, the redistribution of these contract balances to users is permissioned.","references":[{"title":"Etherscan - OptimismPortal - escapeEth() function","url":"https://etherscan.io/address/0x17bfAfA932d2e23Bd9B909Fd5B4D2e2a27043fb1"}],"risks":[]}],"otherConsiderations":[{"name":"EVM compatible smart contracts are supported","description":"OP stack chains are pursuing the EVM Equivalence model. No changes to smart contracts are required regardless of the language they are written in, i.e. anything deployed on L1 can be deployed on L2.","risks":[],"references":[{"title":"Introducing EVM Equivalence","url":"https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306"}]}]},"permissions":{"ethereum":{"roles":[{"name":"Challenger","description":"Allowed to challenge or delete state roots proposed by a Proposer.","accounts":[{"address":"eth:0xC463EaC02572CC964D43D2414023E2c6B62bAF38","type":"Contract","isVerified":true,"name":"Zircuit Multisig 1","url":"#Zircuit Multisig 1"}],"chain":"ethereum","discoveryDrivenData":true},{"name":"Guardian","description":"Allowed to pause withdrawals. In op stack systems with a proof system, the Guardian can also blacklist dispute games and set the respected game type (permissioned / permissionless).","accounts":[{"address":"eth:0x2c0B27F7C8F083B539557a0bA787041BF22DB276","type":"Contract","isVerified":true,"name":"Zircuit Multisig 2","url":"#Zircuit Multisig 2"},{"address":"eth:0xf9Fda17D91383120D59a7c60eAEA8Bd7319B5AE5","type":"EOA","isVerified":true,"name":"0xf9Fd…5AE5","url":"https://etherscan.io/address/0xf9Fda17D91383120D59a7c60eAEA8Bd7319B5AE5"}],"chain":"ethereum","discoveryDrivenData":true},{"name":"Proposer","description":"Allowed to post new state roots of the current layer to the host chain.","accounts":[{"address":"eth:0xE8C20EA8eF100d7aa3846616E5D07A5aBb067C65","type":"EOA","isVerified":true,"name":"0xE8C2…7C65","url":"https://etherscan.io/address/0xE8C20EA8eF100d7aa3846616E5D07A5aBb067C65"}],"chain":"ethereum","discoveryDrivenData":true},{"name":"Sequencer","description":"Allowed to commit transactions from the current layer to the host chain.","accounts":[{"address":"eth:0xAF1E4f6a47af647F87C0Ec814d8032C4a4bFF145","type":"EOA","isVerified":true,"name":"0xAF1E…F145","url":"https://etherscan.io/address/0xAF1E4f6a47af647F87C0Ec814d8032C4a4bFF145"}],"chain":"ethereum","discoveryDrivenData":true}],"actors":[{"name":"Zircuit Multisig 1","description":"A Multisig with 6/8 threshold. \n* Can upgrade **with no delay**\n  * OptimismPortal [via: ProxyAdmin]\n  * L1CrossDomainMessenger [via: ProxyAdmin]\n  * SystemConfig [via: ProxyAdmin]\n  * L1StandardBridge [via: ProxyAdmin]\n  * ResolverRegistry [via: ProxyAdmin]\n  * ZircuitSuperchainConfig [via: ProxyAdmin]\n  * L2OutputOracle [via: ProxyAdmin]\n  * L1ERC721Bridge [via: ProxyAdmin]\n  * VerifierV2 [via: ProxyAdmin]\n  * OptimismMintableERC20Factory [via: ProxyAdmin]\n* Can interact with SystemConfig\n  * it can update the preconfer address, the batch submitter (Sequencer) address and the gas configuration of the system \n* Can interact with SP1VerifierGateway\n  * affect the liveness and safety of the gateway - can transfer ownership, add and freeze verifier routes \n* A Challenger - acting directly","accounts":[{"address":"eth:0xC463EaC02572CC964D43D2414023E2c6B62bAF38","type":"Contract","isVerified":true,"name":"0xC463…AF38","url":"https://etherscan.io/address/0xC463EaC02572CC964D43D2414023E2c6B62bAF38"}],"chain":"ethereum","references":[],"participants":[{"address":"eth:0xD8399320cF3a6C7068DaC0C35ea5e74ddd650BD4","type":"EOA","isVerified":true,"name":"0xD839…0BD4","url":"https://etherscan.io/address/0xD8399320cF3a6C7068DaC0C35ea5e74ddd650BD4"},{"address":"eth:0xC1Ea584f696ABF39044c18D510067f0Ce2cC8966","type":"EOA","isVerified":true,"name":"0xC1Ea…8966","url":"https://etherscan.io/address/0xC1Ea584f696ABF39044c18D510067f0Ce2cC8966"},{"address":"eth:0x63cbB9fA540F6249AE4A3576f48BF07609b3a355","type":"EOA","isVerified":true,"name":"0x63cb…a355","url":"https://etherscan.io/address/0x63cbB9fA540F6249AE4A3576f48BF07609b3a355"},{"address":"eth:0x5E2a81d611e973C2ab1A4cAa71DD4E4Cdb2617d4","type":"EOA","isVerified":true,"name":"0x5E2a…17d4","url":"https://etherscan.io/address/0x5E2a81d611e973C2ab1A4cAa71DD4E4Cdb2617d4"},{"address":"eth:0x2F9072d5A8118a60ce41611AEe3e393D107f8Cec","type":"EOA","isVerified":true,"name":"0x2F90…8Cec","url":"https://etherscan.io/address/0x2F9072d5A8118a60ce41611AEe3e393D107f8Cec"},{"address":"eth:0x0D5edFC67Ae336eddC91031FD6402EeAD6350CAb","type":"EOA","isVerified":true,"name":"0x0D5e…0CAb","url":"https://etherscan.io/address/0x0D5edFC67Ae336eddC91031FD6402EeAD6350CAb"},{"address":"eth:0x62C688FCa995e07632D64A9586896BB7EcD68567","type":"EOA","isVerified":true,"name":"0x62C6…8567","url":"https://etherscan.io/address/0x62C688FCa995e07632D64A9586896BB7EcD68567"},{"address":"eth:0x38809210f69ed6204E276d2Be6b15cd530698679","type":"EOA","isVerified":true,"name":"0x3880…8679","url":"https://etherscan.io/address/0x38809210f69ed6204E276d2Be6b15cd530698679"}],"discoveryDrivenData":true},{"name":"Zircuit Multisig 2","description":"A Multisig with 2/5 threshold. \n* Can interact with ZircuitSuperchainConfig\n  * manage roles including the guardian role \n* A Guardian - acting directly","accounts":[{"address":"eth:0x2c0B27F7C8F083B539557a0bA787041BF22DB276","type":"Contract","isVerified":true,"name":"0x2c0B…B276","url":"https://etherscan.io/address/0x2c0B27F7C8F083B539557a0bA787041BF22DB276"}],"chain":"ethereum","references":[],"participants":[{"address":"eth:0x5E2a81d611e973C2ab1A4cAa71DD4E4Cdb2617d4","type":"EOA","isVerified":true,"name":"0x5E2a…17d4","url":"https://etherscan.io/address/0x5E2a81d611e973C2ab1A4cAa71DD4E4Cdb2617d4"},{"address":"eth:0x63cbB9fA540F6249AE4A3576f48BF07609b3a355","type":"EOA","isVerified":true,"name":"0x63cb…a355","url":"https://etherscan.io/address/0x63cbB9fA540F6249AE4A3576f48BF07609b3a355"},{"address":"eth:0x62C688FCa995e07632D64A9586896BB7EcD68567","type":"EOA","isVerified":true,"name":"0x62C6…8567","url":"https://etherscan.io/address/0x62C688FCa995e07632D64A9586896BB7EcD68567"},{"address":"eth:0x0D5edFC67Ae336eddC91031FD6402EeAD6350CAb","type":"EOA","isVerified":true,"name":"0x0D5e…0CAb","url":"https://etherscan.io/address/0x0D5edFC67Ae336eddC91031FD6402EeAD6350CAb"},{"address":"eth:0x38809210f69ed6204E276d2Be6b15cd530698679","type":"EOA","isVerified":true,"name":"0x3880…8679","url":"https://etherscan.io/address/0x38809210f69ed6204E276d2Be6b15cd530698679"}],"discoveryDrivenData":true}]},"zircuit":{"roles":[],"actors":[{"name":"GnosisSafe","description":"A Multisig with 6/8 threshold. \n* Can upgrade **with no delay**\n  * L1Block [via: ProxyAdmin]\n  * ProxyAdmin [via: ProxyAdmin]","accounts":[{"address":"zircuit:0xC463EaC02572CC964D43D2414023E2c6B62bAF38","type":"Contract","isVerified":true,"name":"0xC463…AF38","url":"https://explorer.zircuit.com/address/0xC463EaC02572CC964D43D2414023E2c6B62bAF38"}],"chain":"zircuit","references":[],"participants":[{"address":"zircuit:0xD8399320cF3a6C7068DaC0C35ea5e74ddd650BD4","type":"EOA","isVerified":true,"name":"0xD839…0BD4","url":"https://explorer.zircuit.com/address/0xD8399320cF3a6C7068DaC0C35ea5e74ddd650BD4"},{"address":"zircuit:0xC1Ea584f696ABF39044c18D510067f0Ce2cC8966","type":"EOA","isVerified":true,"name":"0xC1Ea…8966","url":"https://explorer.zircuit.com/address/0xC1Ea584f696ABF39044c18D510067f0Ce2cC8966"},{"address":"zircuit:0x63cbB9fA540F6249AE4A3576f48BF07609b3a355","type":"EOA","isVerified":true,"name":"0x63cb…a355","url":"https://explorer.zircuit.com/address/0x63cbB9fA540F6249AE4A3576f48BF07609b3a355"},{"address":"zircuit:0x5E2a81d611e973C2ab1A4cAa71DD4E4Cdb2617d4","type":"EOA","isVerified":true,"name":"0x5E2a…17d4","url":"https://explorer.zircuit.com/address/0x5E2a81d611e973C2ab1A4cAa71DD4E4Cdb2617d4"},{"address":"zircuit:0x2F9072d5A8118a60ce41611AEe3e393D107f8Cec","type":"EOA","isVerified":true,"name":"0x2F90…8Cec","url":"https://explorer.zircuit.com/address/0x2F9072d5A8118a60ce41611AEe3e393D107f8Cec"},{"address":"zircuit:0x0D5edFC67Ae336eddC91031FD6402EeAD6350CAb","type":"EOA","isVerified":true,"name":"0x0D5e…0CAb","url":"https://explorer.zircuit.com/address/0x0D5edFC67Ae336eddC91031FD6402EeAD6350CAb"},{"address":"zircuit:0x62C688FCa995e07632D64A9586896BB7EcD68567","type":"EOA","isVerified":true,"name":"0x62C6…8567","url":"https://explorer.zircuit.com/address/0x62C688FCa995e07632D64A9586896BB7EcD68567"},{"address":"zircuit:0x38809210f69ed6204E276d2Be6b15cd530698679","type":"EOA","isVerified":true,"name":"0x3880…8679","url":"https://explorer.zircuit.com/address/0x38809210f69ed6204E276d2Be6b15cd530698679"}],"discoveryDrivenData":true}]}},"contracts":{"addresses":{"ethereum":[{"name":"OptimismPortal","isVerified":true,"address":"eth:0x17bfAfA932d2e23Bd9B909Fd5B4D2e2a27043fb1","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257"],"implementations":["eth:0xF7209f5471628aC5f68FE4ae98Feb7f02E0f40Be"]},"chain":"ethereum","description":"The main entry point to deposit funds from the host chain to this chain. It also allows to prove and finalize withdrawals. This fork of the standard OP stack contract allows for permissionless 'escaping' of assets with merkle proofs or a resolver if there were no state updates for a time defined by the L2OutputOracle.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Zircuit Multisig 1\n  * **guardian**: Zircuit Multisig 2","upgradableBy":[{"name":"Zircuit Multisig 1","delay":"no"}],"discoveryDrivenData":true},{"name":"SystemConfig","isVerified":true,"address":"eth:0x30F82a1Ca89226E8b8815d6EbB728e3b18a428ff","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257"],"implementations":["eth:0x83085450544c3F360a40720859EbB1bfd311584D"]},"chain":"ethereum","description":"Contains configuration parameters such as the Sequencer address, gas limit on this chain and the unsafe block signer address.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Zircuit Multisig 1\n  * **batcherHash**: EOA 1\n  * **owner**: Zircuit Multisig 1","upgradableBy":[{"name":"Zircuit Multisig 1","delay":"no"}],"discoveryDrivenData":true},{"name":"L2OutputOracle","isVerified":true,"address":"eth:0x92Ef6Af472b39F1b363da45E35530c24619245A4","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257"],"implementations":["eth:0x6AB82bb139383BB758348fBb81EdA57458e59f65"]},"chain":"ethereum","description":"Entrypoint for permissioned proposers to propose new L2 outputs (state roots). New proposals have to be accompanied by a zk-SNARK proof of a correct state transition, but there currently is a backdoor that lets this contract accept a state root without proof if the operator has not updated the state in 4h. Additionally, users can 'escape' their funds after 30d of no state updates by supplying merkle proofs or using a resolver.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Zircuit Multisig 1\n  * **challenger**: Zircuit Multisig 1\n  * **proposer**: EOA 2","upgradableBy":[{"name":"Zircuit Multisig 1","delay":"no"}],"discoveryDrivenData":true},{"name":"ZircuitSuperchainConfig","isVerified":true,"address":"eth:0x745393Cc03b5fE668ECd52c0E625f59aAD6D3Da0","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257"],"implementations":["eth:0x70D688D4Bd6B1b195aE51040b54ab501278D1d31"]},"chain":"ethereum","description":"This is NOT the shared SuperchainConfig contract of the OP stack Superchain but rather a local fork. It manages the `PAUSED_SLOT`, a boolean value indicating whether the local chain is paused, and access control for configuring actors who can pause and unpause the system.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Zircuit Multisig 1\n  * **defaultAdmin**: Zircuit Multisig 2\n  * **monitor**: EOA 3","upgradableBy":[{"name":"Zircuit Multisig 1","delay":"no"}],"discoveryDrivenData":true},{"name":"L1CrossDomainMessenger","isVerified":true,"address":"eth:0x2a721cBE81a128be0F01040e3353c3805A5EA091","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257"],"implementations":["eth:0xA5B66A9FBCE3d57dA2b3Bd764d0a05B95052f73F"]},"chain":"ethereum","description":"Sends messages from host chain to this chain, and relays messages back onto host chain. In the event that a message sent from host chain to this chain is rejected for exceeding this chain's epoch gas limit, it can be resubmitted via this contract's replay function.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Zircuit Multisig 1","upgradableBy":[{"name":"Zircuit Multisig 1","delay":"no"}],"discoveryDrivenData":true},{"name":"L1StandardBridge","isVerified":true,"address":"eth:0x386B76D9cA5F5Fb150B6BFB35CF5379B22B26dd8","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257"],"implementations":["eth:0xFF30d6E9acecc919e4E9e1A2e67980ee44Df6Ebb"]},"chain":"ethereum","description":"The main entry point to deposit ERC20 tokens from the host chain to this chain. This fork of the standard OP stack contract allows for permissionless 'escaping' of assets with merkle proofs or a resolver if there were no state updates for a configurable time.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Zircuit Multisig 1","upgradableBy":[{"name":"Zircuit Multisig 1","delay":"no"}],"discoveryDrivenData":true},{"name":"L1ERC721Bridge","isVerified":true,"address":"eth:0x994eEb321F9cD79B077a5455fC248c77f30Dd244","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257"],"implementations":["eth:0xDF129ECFc63Af454F62b69d03C0f0E21e69bcDAb"]},"chain":"ethereum","description":"Used to bridge ERC-721 tokens from host chain to this chain.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Zircuit Multisig 1","upgradableBy":[{"name":"Zircuit Multisig 1","delay":"no"}],"discoveryDrivenData":true},{"name":"SP1Verifier","isVerified":true,"address":"eth:0x50ACFBEdecf4cbe350E1a86fC6f03a821772f1e5","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Verifier contract for SP1 proofs (v5.0.0).\n","discoveryDrivenData":true},{"name":"ProxyAdmin","isVerified":true,"address":"eth:0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"* Roles:\n  * **owner**: Zircuit Multisig 1","discoveryDrivenData":true},{"name":"ResolverRegistry","isVerified":true,"address":"eth:0x6c89104690452AD7e209f0ab72287C2561d5cF0E","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257"],"implementations":["eth:0xC82fB8FB873b0c56E1aeb9238d79b27e3d67f155"]},"chain":"ethereum","description":"Registers 'resolvers' which are allowed to supply authoritative data for blockchain balances to support escapes without merkle proofs from e.g. DeFi smart contracts on L2. A resolver can either be registered directly by the respective contract on L2 or by its deployer from L1, using deterministic deployment derivation.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Zircuit Multisig 1","upgradableBy":[{"name":"Zircuit Multisig 1","delay":"no"}],"discoveryDrivenData":true},{"name":"L1ERC20TokenBridge","isVerified":true,"address":"eth:0x912C7271a6A3622dfb8B218eb46a6122aB046C79","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c"],"implementations":["eth:0x6bc726C993103197C41d787dd72eCd4D2e1614E8"]},"chain":"ethereum","description":"Escrow for custom external tokens that use the canonical bridge for messaging but are governed externally.\n","discoveryDrivenData":true},{"name":"OptimismMintableERC20Factory","isVerified":true,"address":"eth:0xc77ece87C91C44AFb5f19638f9a0F75b5d90E932","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257"],"implementations":["eth:0xf885DA6A3B4c93905b02f36f9a13680922A554b0"]},"chain":"ethereum","description":"A helper contract that generates OptimismMintableERC20 contracts on the network it's deployed to. OptimismMintableERC20 is a standard extension of the base ERC20 token contract designed to allow the L1StandardBridge contracts to mint and burn tokens. This makes it possible to use an OptimismMintableERC20 as this chain's representation of a token on the host chain, or vice-versa.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Zircuit Multisig 1","upgradableBy":[{"name":"Zircuit Multisig 1","delay":"no"}],"discoveryDrivenData":true},{"name":"SP1VerifierGateway","isVerified":true,"address":"eth:0xf35A4088eA0231C44B9DB52D25c0E9E2fEe31f67","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"This contract is the router for zk proof verification. It stores the mapping between identifiers and the address of onchain verifier contracts, routing each identifier to the corresponding verifier contract.\n* Roles:\n  * **owner**: Zircuit Multisig 1","discoveryDrivenData":true}],"zircuit":[{"name":"L1Block","isVerified":true,"address":"zircuit:0x4200000000000000000000000000000000000015","upgradeability":{"proxyType":"EIP1967 proxy","admins":["zircuit:0x4200000000000000000000000000000000000018"],"implementations":["zircuit:0xFf256497D61dcd71a9e9Ff43967C13fdE1F72D12"]},"chain":"zircuit","description":"Simple contract that returns information about the latest L1 block, which is derived permissionlessly from the L1 chain. This version though also contains a storage slot for `depositExclusions`.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately GnosisSafe","upgradableBy":[{"name":"GnosisSafe","delay":"no"}],"discoveryDrivenData":true},{"name":"ProxyAdmin","isVerified":true,"address":"zircuit:0x4200000000000000000000000000000000000018","upgradeability":{"proxyType":"EIP1967 proxy","admins":["zircuit:0x4200000000000000000000000000000000000018"],"implementations":["zircuit:0xC0d3C0D3c0d3C0d3c0d3c0D3C0D3C0d3C0D30018"]},"chain":"zircuit","description":"* Roles:\n  * **admin**: ProxyAdmin; ultimately GnosisSafe\n  * **owner**: GnosisSafe","upgradableBy":[{"name":"GnosisSafe","delay":"no"}],"discoveryDrivenData":true}]},"risks":[{"category":"Funds can be stolen if","text":"a contract receives a malicious code upgrade. There is no delay on code upgrades.","isCritical":true}]},"milestones":[{"title":"Proof system migrated to SP1","date":"2025-08-25T00:00:00.00Z","description":"Zircuit deprecates its in-house proof system in favor of SP1.","type":"general","url":"https://etherscan.io/address/0xf35A4088eA0231C44B9DB52D25c0E9E2fEe31f67"},{"title":"Escape mechanism","url":"https://www.zircuit.com/blog/mainnet-phase-1-is-live","date":"2025-08-05T00:00:00.00Z","description":"Zircuit introduces a custom escape mechanism.","type":"general"},{"title":"Mainnet Launch","url":"https://www.zircuit.com/blog/mainnet-phase-1-is-live","date":"2024-08-05T00:00:00.00Z","description":"Zircuit is live on mainnet.","type":"general"}],"badges":[{"id":"OPStack","type":"Stack","name":"Built on OP Stack","description":"The project is built on the OP Stack","action":{"type":"scalingFilter","id":"stack","value":"OP Stack"}},{"id":"EthereumBlobs","type":"DA","name":"Ethereum with blobs","description":"This project is posting its data to Ethereum as blobs","action":{"type":"publicDaHighlight","slug":"ethereum"}},{"id":"EVM","type":"VM","name":"EVM","description":"This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language","action":{"type":"scalingFilter","id":"vm","value":"EVM"}}],"reasonsForBeingOther":[{"label":"No proofs","shortDescription":"The proof system isn't fully functional","description":"Projects without a proper proof system fully rely on single entities to safely update the state. A malicious proposer can finalize an invalid state, which can cause loss of funds."}],"stateValidation":{"categories":[{"title":"Validity proofs","description":"Each update to the system state must be accompanied by a ZK proof that ensures that the new state was derived by correctly applying a series of valid user transactions to the previous state. These proofs are then verified on Ethereum by a smart contract. Currently state updates do not require a proof if the last state update was made >= 4h ago and is optimistically considered to be valid.","risks":[{"category":"Funds can be stolen if","text":"the published state is invalid and the Challenger does not react during the 4h finalization window."}],"references":[{"title":"L2OutputOracle.sol - Etherscan source code - bootstrapL2Output() function","url":"https://etherscan.io/address/0x92Ef6Af472b39F1b363da45E35530c24619245A4"},{"title":"VerifierV3 (SP1VerifierGateway) - Etherscan source code","url":"https://etherscan.io/address/0xf35A4088eA0231C44B9DB52D25c0E9E2fEe31f67#code"}]}]},"riskView":{"stateValidation":{"value":"None","description":"Currently the system permits invalid state roots. More details in project overview.","sentiment":"bad","orderHint":null,"challengeDelay":14400},"exitWindow":{"value":"None","description":"There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable.","sentiment":"bad","orderHint":-14400},"proposerFailure":{"value":"Use escape hatch","sentiment":"warning","orderHint":null,"description":"Users are able to trustlessly exit by submitting a Merkle proof of funds after 30d with no new state proposals have passed. The escape of ETH and ERC-20 balances is permissionless while the escape of DeFi contract balances is trusted."},"dataAvailability":{"value":"Onchain","description":"All of the data needed for proof construction is published on Ethereum L1.","sentiment":"good","orderHint":null},"sequencerFailure":{"value":"No mechanism","description":"There is no mechanism to have transactions be included if the sequencer is down or censoring. The L2 code has been modified to allow the sequencer to explicitly censor selected L1->L2 transactions.","sentiment":"bad"}},"stage":{"stage":"Stage 0","missing":{"nextStage":"Stage 1","requirements":["Users' withdrawals can be censored by the permissioned operators.","Upgrades executed by actors with more centralized control than a Security Council provide less than 7d for users to exit if the permissioned operator is down or censoring."],"principle":"Compromising ≥75% of the Security Council should be the only way (other than bugs) for a rollup to indefinitely block an L2→L1 message (e.g. a withdrawal) or push an invalid L2→L1 message (e.g. an invalid withdrawal)."},"summary":[{"stage":"Stage 0","requirements":[{"satisfied":false,"description":"The proof system is still under development."},{"satisfied":true,"description":"The project calls itself a rollup."},{"satisfied":true,"description":"State roots are posted to Ethereum L1."},{"satisfied":true,"description":"Inputs for the state transition function are posted to Ethereum L1."},{"satisfied":"UnderReview","description":"A source-available node exists that can recreate the state from Ethereum L1 data. Please note that the L2BEAT team has not verified the validity of the node source code."}]},{"stage":"Stage 1","requirements":[{"satisfied":false,"description":"Users' withdrawals can be censored by the permissioned operators."},{"satisfied":false,"description":"Upgrades executed by actors with more centralized control than a Security Council provide less than 7d for users to exit if the permissioned operator is down or censoring."}],"principle":{"satisfied":false,"description":"Compromising ≥75% of the Security Council should be the only way (other than bugs) for a rollup to indefinitely block an L2→L1 message (e.g. a withdrawal) or push an invalid L2→L1 message (e.g. an invalid withdrawal)."}},{"stage":"Stage 2","requirements":[{"satisfied":false,"description":"Upgrades unrelated to onchain provable bugs provide less than 30d to exit."}]}],"message":{"type":"underReview","text":"The requirement for available node software is under review"}},"dataAvailability":{"layer":{"value":"Ethereum","secondLine":"Blobs or Calldata","sentiment":"good","description":"The data is posted to Ethereum as calldata or blobs.","projectId":"ethereum"},"bridge":{"value":"Enshrined","sentiment":"good","description":"The validating bridge has access to all the data, as it is posted onchain.","projectId":"ethereum"},"mode":{"value":"Transaction data","secondLine":"Compressed"}},"discoveryInfo":{"isDiscoDriven":false,"permissionsDiscoDriven":false,"contractsDiscoDriven":false,"baseTimestamp":1756451851,"hasDiscoUi":false}}