{"type":"layer2","id":"sophon","addedAt":1734480000,"capability":"universal","badges":[{"id":"AvailVector","type":"DA","name":"Avail with Vector","description":"This project utilizes Avail and has Vector enabled, facilitating the bridging of data availability commitments between Avail and Ethereum.","action":{"type":"publicDaHighlight","slug":"avail"}},{"id":"ZKStack","type":"Stack","name":"Built on the ZK Stack","description":"The project is built on the ZK Stack","action":{"type":"scalingFilter","id":"stack","value":"ZK Stack"}},{"id":"ElasticChain","type":"Infra","name":"Part of the Elastic Chain","description":"The project is part of the Elastic Chain, meaning it's based on the ZK stack and uses the shared contracts","action":{"type":"scalingFilter","id":"infrastructure","value":"Elastic Chain"}},{"id":"EVM","type":"VM","name":"EVM","description":"This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language","action":{"type":"scalingFilter","id":"vm","value":"EVM"}}],"display":{"purposes":["Gaming","Social","AI"],"upgradesAndGovernanceImage":"zkstack","stacks":["ZK Stack"],"architectureImage":"zkstack-validium-vector","liveness":{"explanation":"Sophon is a Validium that posts commitments to the L1. Transactions within a state diff can be considered final when proven on L1 using a ZK proof, except that an operator can revert them if not executed yet. Currently, there is at least a 3h delay between state diffs verification and the execution of the corresponding state actions."},"name":"Sophon","slug":"sophon","description":"Sophon is a consumer-centric ecosystem on a ZK Stack Validium L2, designed to bring onchain benefits to everyday lifestyle and entertainment applications.","links":{"websites":["https://sophon.xyz/"],"bridges":["https://portal.sophon.xyz/","https://farm.sophon.xyz/"],"documentation":["https://docs.sophon.xyz/sophon"],"explorers":["https://explorer.sophon.xyz/"],"repositories":["https://github.com/sophon-org"],"socialMedia":["https://x.com/sophon","https://blog.sophon.xyz/","https://t.me/SophonHub","https://discord.gg/sophonhub"]}},"proofSystem":{"type":"Validity","zkCatalogId":"boojum"},"config":{"associatedTokens":["SOPH"],"escrows":[{"address":"0xbeD1EB542f9a5aA6419Ff3deb921A372681111f6","sinceTimestamp":1739109131,"tokens":["ETH","USDT","BEAM","stAethir","PEPE","wstETH","weETH","sDAI","DAI","WBTC","stAZUR","stAVAIL","OPN","SOPH"],"premintedTokens":["SOPH"],"contract":{"isVerified":true,"address":"eth:0xbeD1EB542f9a5aA6419Ff3deb921A372681111f6","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1"],"implementations":["eth:0xBa05B8B761386289Ba413a74AF1933d6a76E1b52"]},"chain":"ethereum","description":"Shared bridge for depositing tokens to Treasure and other ZK stack chains."},"chain":"ethereum","includeInTotal":true,"sharedEscrow":{"type":"ElasticChain","l2BridgeAddress":"0x954ba8223a6BFEC1Cc3867139243A02BA0Bc66e4","l2EtherAddress":"0x72af9F169B619D85A47Dfa8fefbCD39dE55c567D","tokensToAssignFromL1":["SOPH"]}}],"activityConfig":{"type":"block","startBlock":1},"daTracking":[{"type":"avail","daLayer":"avail","sinceBlock":0,"appIds":["17","36","37","38"]}],"trackedTxs":[{"uses":[{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"sharedBridge","chainId":50104,"address":"0x5D8ba173Dc6C3c90C8f7C04C9288BeF5FDbAd06E","selector":"0x6edd4f12","functionSignature":"function commitBatchesSharedBridge(uint256 _chainId, (uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment) _lastCommittedBatchData, (uint64 batchNumber, uint64 timestamp, uint64 indexRepeatedStorageChanges, bytes32 newStateRoot, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 bootloaderHeapInitialContentsHash, bytes32 eventsQueueStateHash, bytes systemLogs, bytes pubdataCommitments)[] _newBatchesData)","sinceTimestamp":1742940287,"untilTimestamp":1743095267}},{"uses":[{"type":"liveness","subtype":"proofSubmissions"},{"type":"l2costs","subtype":"proofSubmissions"}],"query":{"formula":"sharedBridge","chainId":50104,"address":"0x5D8ba173Dc6C3c90C8f7C04C9288BeF5FDbAd06E","selector":"0xc37533bb","functionSignature":"function proveBatchesSharedBridge(uint256 _chainId,(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment) _prevBatch, (uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment)[] _committedBatches, (uint256[] recursiveAggregationInput, uint256[] serializedProof) _proof)","sinceTimestamp":1742940287,"untilTimestamp":1743095267}},{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"sharedBridge","chainId":50104,"address":"0x5D8ba173Dc6C3c90C8f7C04C9288BeF5FDbAd06E","selector":"0x6f497ac6","functionSignature":"function executeBatchesSharedBridge(uint256 _chainId, (uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment)[] _batchesData)","sinceTimestamp":1742940287,"untilTimestamp":1743095267}},{"uses":[{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"sharedBridge","chainId":50104,"address":"0x8c0Bfc04AdA21fd496c55B8C50331f904306F564","selector":"0x98f81962","functionSignature":"function commitBatchesSharedBridge(uint256 _chainId, uint256 _processBatchFrom, uint256 _processBatchTo, bytes)","sinceTimestamp":1743095267}},{"uses":[{"type":"liveness","subtype":"proofSubmissions"},{"type":"l2costs","subtype":"proofSubmissions"}],"query":{"formula":"sharedBridge","chainId":50104,"address":"0x8c0Bfc04AdA21fd496c55B8C50331f904306F564","selector":"0xe12a6137","functionSignature":"function proveBatchesSharedBridge(uint256 _chainId, uint256, uint256, bytes)","sinceTimestamp":1743095267}},{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"sharedBridge","chainId":50104,"address":"0x8c0Bfc04AdA21fd496c55B8C50331f904306F564","selector":"0xcf02827d","functionSignature":"function executeBatchesSharedBridge(uint256 _chainId, uint256 _processBatchFrom, uint256 _processBatchTo, bytes)","sinceTimestamp":1743095267}}]},"chainConfig":{"name":"sophon","chainId":50104,"gasTokens":["SOPH"],"explorerUrl":"https://explorer.sophon.xyz","sinceTimestamp":1729531437,"apis":[{"type":"rpc","url":"https://rpc.sophon.xyz/","callsPerMinute":300}]},"ecosystemInfo":{"id":"the-elastic-network"},"dataAvailability":{"layer":{"value":"Avail","sentiment":"warning","description":"The data is posted to Avail.","projectId":"avail"},"bridge":{"value":"Vector","sentiment":"warning","description":"The Vector DA bridge is used to attest to the data availability on Avail.","projectId":"vector"},"mode":{"value":"State diffs","secondLine":"Compressed"}},"riskView":{"stateValidation":{"value":"Validity proofs (ST, SN)","description":"STARKs and SNARKs are zero knowledge proofs that ensure state correctness. STARKs proofs are wrapped in SNARKs proofs for efficiency. SNARKs require a trusted setup.","sentiment":"good","orderHint":null,"executionDelay":10800},"dataAvailability":{"value":"External","description":"Proof construction and state derivation fully rely on data that is posted on Avail. Transaction data is checked against the Vector bridge data roots, signed off by Avail validators.","sentiment":"warning"},"exitWindow":{"value":"None","sentiment":"bad","description":"There is no window for users to exit in case of an unwanted standard upgrade because the central operator can censor withdrawal transactions by implementing a TransactionFilterer with no delay. The standard upgrade delay is 4d 3h."},"sequencerFailure":{"value":"No mechanism","description":"There is no mechanism to have transactions be included if the sequencer is down or censoring. The Operator actively uses a TransactionFilterer contract, which requires accounts that enqueue or force transactions from L1 OR their targets on L2, to be whitelisted.","sentiment":"bad"},"proposerFailure":{"value":"Replace proposer","description":"Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen. There is a decentralized Governance system that can attempt changing Proposers with an upgrade.","sentiment":"warning","orderHint":null}},"stage":{"stage":"NotApplicable"},"technology":{"dataAvailability":{"name":"Data is posted to Avail","description":"Transactions roots are posted onchain and the full data is posted on Avail.  The vector bridge is used to verify attestations from the Avail validator set that the data is indeed available.","risks":[{"category":"Funds can be lost if","text":"the sequencer posts an unavailable transaction root.","isCritical":true},{"category":"Funds can be lost if","text":"the data is not available on the external provider.","isCritical":true}],"references":[{"title":"AvailL1DAValidator - checkDA() function","url":"https://etherscan.io/address/0x8f50d93B9955B285f787043B30B5F51D09bE0120#code#F1#L16"}]},"operator":{"name":"The system has a centralized operator","description":"The operator is the only entity that can propose blocks. A live and trustworthy operator is vital to the health of the system.","risks":[{"category":"MEV can be extracted if","text":"the operator exploits their centralized position and frontruns user transactions."}],"references":[]},"forceTransactions":{"name":"Users can't force all transactions","description":"If a user is censored by the L2 Sequencer, they cannot by default force their transaction via the L1 queue. An active TransactionFilterer contract which allows only whitelisted accounts to enqueue, prevents it. Even if a user was specifically whitelisted, there is no mechanism that forces the L2 Sequencer to include            transactions from the queue in an L2 block, as they have the choice to process the queue in order or not at all. The L2AssetRouter contract is currently whitelisted as a target in the TransactionFilterer which allows users to queue withdrawals that use the canonical bridge from L1.","risks":[{"category":"Users can be censored if","text":"the operator refuses to include their transactions."},{"category":"Users can be censored if","text":"the Operator does not specifically whitelist them in the TransactionFilterer."}],"references":[{"title":"L1 - L2 interoperability - Developer's documentation","url":"https://docs.zksync.io/zksync-protocol/rollup/l1_l2_communication#priority-operations-1"},{"title":"Mailbox facet","url":"https://etherscan.io/address/0x365D0ae3ECA13004daf2A4ba1501c01AaEbb4fec#code#F1#L472"},{"title":"TransactionFilterer","url":"https://etherscan.io/address/0x9D06B34adc3026eF876e4DABb859C424DbDA3063#code#F1#L34"}]},"exitMechanisms":[{"name":"Regular messaging","description":"The user initiates L2->L1 messages by submitting a regular transaction on this chain. When the block containing that transaction is settled, the message becomes available for processing on L1. ZK proofs are required to settle blocks.","risks":[],"references":[{"title":"Withdrawing funds - ZKsync documentation","url":"https://docs.zksync.io/build/developer-reference/bridging-assets"}]},{"name":"Forced messaging","description":"If the user experiences censorship from the operator with regular L2->L1 messaging they can submit their messages directly on L1. The system is then obliged to service this request or halt all messages from L1, including all forced withdrawals and deposits. Once the force operation is submitted and if the request is serviced, the operation follows the flow of a regular message.","risks":[],"references":[]}]},"upgradesAndGovernance":"\nThere are two main paths for contract upgrades in the shared ZK stack ecosystem - standard and emergency - both converging on the shared upgrade management contract ProtocolUpgradeHandler.\nThe standard path involves a governance proposal and voting through the DAO, multiple timelock delays and finally approval by the Guardians or 6 SecurityCouncil participants.\nThe emergency path allows for contract upgrades without any delay by the EmergencyUpgradeBoard, which acts as a 3/3 Multisig between SecurityCouncil, Guardians and the FoundationMultisig.\n## Standard path\n### On ZKsync Era\nDelegates can start new proposals by reaching a threshold of 21M ZK tokens on the ZKsync Era Rollup's ZkProtocolGovernor contract.\nThis launches a 3d 'voting delay' after which the 7d voting period starts. During these first two periods, the proposal can be canceled by the proposer or if it falls below the proposing threshold.\nA proposal is only successful if it reaches both quorum (630M ZK tokens) and simple majority. When it reaches quorum, a remaining voting period of 3d is guaranteed by a potential late quorum vote extension.\nIn the successful case, it can be queued in the 0s timelock which forwards it via the Gateway to Ethereum as an L2->L1 log.\n### On Ethereum\nAfter the execution of the proposal-containing batch (3h delay), the proposal is now picked up by the ProtocolUpgradeHandler and enters the 3d 'legal veto period'.\nThis serves as a window in which a veto could be coordinated offchain, to be then enforced by non-approval of Guardians and SecurityCouncil. A threshold of 2 Guardians can extend the veto period to 7d.\nAfter this a proposal enters a *waiting* state of 30d, from which it can be immediately approved (cancelling the delay) by 6 participants of the SecurityCouncil.\nFor the unlikely case that the Security Council does not approve here, the Guardians can instead approve the proposal, or nobody. In the two latter cases, the waiting period is enforced in full.\nA proposal cannot be actively cancelled in the ProtocolUpgradeHandler, but will expire if not approved within the waiting period. An approved proposal now enters the *pendingExecution* state for a final delay of 1d and can then be executed.\n### Other governance tracks\nThere are two other tracks of Governance also starting with DAO Delegate proposals the ZKsync Era rollup: 1) Token Program Proposals that add new minters, allocations or upgrade the ZK token and\n2) Governance Advisory Proposals that e.g. change the ZK Credo or other offchain Governance Procedures without onchain targets.\nThe protocol for these two other tracks is similar to the first part of the standard path described above (albeit having different quorum and timelock values), and not passing over to the Ethereum L1.\nFurther customizations are that the ZkFoundationMultisig can propose to the ZkTokenGovernor without a threshold and that the Guardians' L2 alias can cancel proposals in the ZkTokenGovernor and the ZkGovOpsGovernor.\n## Emergency path\nSecurityCouncil (9/12), Guardians (5/8) and ZkFoundationMultisig (3/5) form a de-facto 3/3 Multisig\nby pushing an immediate upgrade proposal through the EmergencyUpgradeBoard, which circumvents all delays and executes immediately via the ProtocolUpgradeHandler.\n## Upgrade Delays\nThe cumulative duration of the upgrade paths from the moment of a voted 'successful' proposal is 4d 3h or 8d 3h (depending on Guardians extending the LegalVetoPeriod) for Standard, 0 for Emergency and 34d 3h for the path in which the SecurityCouncil is not approving the proposal.\n## Freezing\nThe SecurityCouncil can freeze (pause withdrawals and settlement) all chains connected to the current ChainTypeManager.\nEither for a softFreeze of 12h or a hardFreeze of 7d.\nAfter a softFreeze and / or a hardFreeze, a proposal from the EmergencyUpgradeBoard has to be passed before subsequent freezes are possible.\nOnly the SecurityCouncil can unfreeze an active freeze.\n## ZK cluster Admin and Chain Admin\nApart from the paths that can upgrade all shared implementations, the ZK stack governance system defines other roles that can modify the system:\nA single *ZK cluster Admin* role who governs parameters in the shared contracts and a *Chain Admin* role (defined in each chain-specific diamond contract) for managing parameters of each individual ZK chain that builds on the stack.\nThese chain-specific actions include critical operations like setting a transaction filterer that can censor L1 -> L2 messages, changing the DA mode, migrating the chain to a different settlement layer and standard operations like setting fee parameters and adding / removing Validators in the ValidatorTimelock.\nFor rollups, data availability on Ethereum is validated by a RollupL1DAValidator contract (or a RelayedSLDAValidator on the Gateway). Each rollup can become a permanent rollup (through their Chain Admin) which disallows DA changes to non-whitelisted sources or settlement layers in the future.\nThe source of truth for rollup-compliant DA validator contracts is the RollupDAManager contract, which is administered via the ProtocolUpgradeHandler.\nZKsync Era's Chain Admin differs from the others as it also has the above *ZK cluster Admin* role in the shared ZK stack contracts.","permissions":{"ethereum":{"roles":[{"name":"Validator","description":"Permissioned to call the functions to commit, prove, execute and revert L2 batches through the ValidatorTimelock in the main Diamond contract.","accounts":[{"address":"eth:0x78325837C780788Ce6afF7883FdF68890010Fe30","type":"EOA","isVerified":true,"name":"0x7832…Fe30","url":"https://etherscan.io/address/0x78325837C780788Ce6afF7883FdF68890010Fe30"},{"address":"eth:0xCD0b5A01Abe9C14f6EFbC610C02ECf0FB69855dA","type":"EOA","isVerified":true,"name":"0xCD0b…55dA","url":"https://etherscan.io/address/0xCD0b5A01Abe9C14f6EFbC610C02ECf0FB69855dA"},{"address":"eth:0x4cc87B0A504047967CeD9A955431B3229237e7de","type":"EOA","isVerified":true,"name":"0x4cc8…e7de","url":"https://etherscan.io/address/0x4cc87B0A504047967CeD9A955431B3229237e7de"},{"address":"eth:0xf3b07F6744e06cd5074b7D15ed2c33760837CE1f","type":"EOA","isVerified":true,"name":"0xf3b0…CE1f","url":"https://etherscan.io/address/0xf3b07F6744e06cd5074b7D15ed2c33760837CE1f"}],"chain":"ethereum","discoveryDrivenData":true}],"actors":[{"name":"EmergencyUpgradeBoard","accounts":[{"address":"eth:0xECE8e30bFc92c2A8e11e6cb2e17B70868572E3f6","type":"Contract","isVerified":true,"name":"0xECE8…E3f6","url":"https://etherscan.io/address/0xECE8e30bFc92c2A8e11e6cb2e17B70868572E3f6"}],"chain":"ethereum","description":"A custom contract allowing a 3/3 of SecurityCouncil, ZK Foundation Multisig and Guardians to `executeEmergencyUpgrade()` via the ProtocolUpgradeHandler.\n* Can upgrade **with no delay**\n  * BridgeHub [via: ProtocolUpgradeHandler → ProxyAdmin]\n  * MessageRoot [via: ProtocolUpgradeHandler → ProxyAdmin]\n  * CTMDeploymentTracker [via: ProtocolUpgradeHandler → ProxyAdmin]\n  * L1AssetRouter [via: ProtocolUpgradeHandler → ProxyAdmin]\n  * L1NativeTokenVault [via: ProtocolUpgradeHandler → ProxyAdmin]\n  * ChainTypeManager [via: ProtocolUpgradeHandler → ProxyAdmin]\n  * L1Nullifier [via: ProtocolUpgradeHandler → ProxyAdmin]\n  * ProtocolUpgradeHandler [via: ProtocolUpgradeHandler → ProxyAdmin]\n* Can interact with BridgeHub\n  * set critical system contract addresses, register settlement layers, pause and unpause and manage zk chain registration [via: ProtocolUpgradeHandler]\n* Can interact with L1NativeTokenVault\n  * pause / unpause the bridge [via: ProtocolUpgradeHandler]\n* Can interact with ChainTypeManager\n  * manage the shared ValidatorTimelock contract address and the admin role, register and execute upgrades (and set their deadlines), freeze, revert batches and set permissioned validators and fee params for all connected chains [via: ProtocolUpgradeHandler]\n* Can interact with L1Nullifier\n  * pause, unpause and set critical escrow address references [via: ProtocolUpgradeHandler]\n* Can interact with RollupDAManager\n  * manage allowed rollup DA pairs (allowed to be used by rollups in permanent rollup mode) [via: ProtocolUpgradeHandler]","discoveryDrivenData":true},{"name":"Matter Labs Multisig","description":"A Multisig with 5/8 threshold. \n* Can upgrade **with no delay**\n  * ServerNotifier [via: EraChainAdminProxy → ProxyAdmin]\n* Can interact with BridgeHub\n  * create new zk chains (based on the current version), register tokens (ZK cluster Admin role) [via: EraChainAdminProxy]\n* Can interact with ChainTypeManager\n  * revert batches for any connected chain (ZK cluster Admin role) [via: EraChainAdminProxy]","accounts":[{"address":"eth:0x4e4943346848c4867F81dFb37c4cA9C5715A7828","type":"Contract","isVerified":true,"name":"0x4e49…7828","url":"https://etherscan.io/address/0x4e4943346848c4867F81dFb37c4cA9C5715A7828"}],"chain":"ethereum","references":[],"participants":[{"address":"eth:0x4A333c167Ce76C46149c6B0197977ae02aaeC929","type":"EOA","isVerified":true,"name":"0x4A33…C929","url":"https://etherscan.io/address/0x4A333c167Ce76C46149c6B0197977ae02aaeC929"},{"address":"eth:0x3F0009D00cc78979d00Eb635490F23E8d6aCc481","type":"EOA","isVerified":true,"name":"0x3F00…c481","url":"https://etherscan.io/address/0x3F0009D00cc78979d00Eb635490F23E8d6aCc481"},{"address":"eth:0x5C7E59Dba6557C7dAB3B69ccd3E309d1965Cf1B1","type":"EOA","isVerified":true,"name":"0x5C7E…f1B1","url":"https://etherscan.io/address/0x5C7E59Dba6557C7dAB3B69ccd3E309d1965Cf1B1"},{"address":"eth:0x3068415e0F857A5eEd03302A1F7E44f67468d2Bc","type":"EOA","isVerified":true,"name":"0x3068…d2Bc","url":"https://etherscan.io/address/0x3068415e0F857A5eEd03302A1F7E44f67468d2Bc"},{"address":"eth:0x702caCafA54B88e9c54449563Fb2e496e85c78b7","type":"EOA","isVerified":true,"name":"0x702c…78b7","url":"https://etherscan.io/address/0x702caCafA54B88e9c54449563Fb2e496e85c78b7"},{"address":"eth:0xFAdb20191Ab38362C50f52909817B74214CA79AE","type":"EOA","isVerified":true,"name":"0xFAdb…79AE","url":"https://etherscan.io/address/0xFAdb20191Ab38362C50f52909817B74214CA79AE"},{"address":"eth:0xfd03dA3aeb6807a98db96C1704Ea4CFf031BaEd2","type":"EOA","isVerified":true,"name":"0xfd03…aEd2","url":"https://etherscan.io/address/0xfd03dA3aeb6807a98db96C1704Ea4CFf031BaEd2"},{"address":"eth:0x7408A268e5E6e8F08917c5b71015F4B9044970C7","type":"EOA","isVerified":true,"name":"0x7408…70C7","url":"https://etherscan.io/address/0x7408A268e5E6e8F08917c5b71015F4B9044970C7"}],"discoveryDrivenData":true},{"name":"Avail Multisig 1","description":"A Multisig with 4/7 threshold. \n* Can upgrade **with no delay**\n  * Vector \n* Can upgrade **with 1d delay**\n  * AvailBridgeV1 [via: TimelockController with 1d delay → ProxyAdmin]\n* Can interact with Vector\n  * can freeze the Vector contract and update the list of authorized relayers \n* Can interact with AvailBridgeV1\n  * manage the pauser role and all other access control configurations, set the address of the target contract for DA verification, manage fees **with 1d delay** [via: TimelockController with 1d delay]\n* Can interact with TimelockController\n  * cancel queued transactions \n  * execute transactions that are ready \n  * manage all access control roles **with 1d delay or with no delay** [via: TimelockController with 1d delay - or - acting directly]\n  * propose transactions ","accounts":[{"address":"eth:0x7F2f87B0Efc66Fea0b7c30C61654E53C37993666","type":"Contract","isVerified":true,"name":"0x7F2f…3666","url":"https://etherscan.io/address/0x7F2f87B0Efc66Fea0b7c30C61654E53C37993666"}],"chain":"ethereum","references":[],"participants":[{"address":"eth:0xE458b870F2F59a49915591282f1Bb688901767AD","type":"EOA","isVerified":true,"name":"0xE458…67AD","url":"https://etherscan.io/address/0xE458b870F2F59a49915591282f1Bb688901767AD"},{"address":"eth:0x340e77D5e114A9D4891d3a1EbC7419CC85Ca8E4A","type":"EOA","isVerified":true,"name":"0x340e…8E4A","url":"https://etherscan.io/address/0x340e77D5e114A9D4891d3a1EbC7419CC85Ca8E4A"},{"address":"eth:0xAD379D3275a18bd4BB741C3b291a3778D51c3304","type":"EOA","isVerified":true,"name":"0xAD37…3304","url":"https://etherscan.io/address/0xAD379D3275a18bd4BB741C3b291a3778D51c3304"},{"address":"eth:0x72Ff26D9517324eEFA89A48B75c5df41132c4f54","type":"EOA","isVerified":true,"name":"0x72Ff…4f54","url":"https://etherscan.io/address/0x72Ff26D9517324eEFA89A48B75c5df41132c4f54"},{"address":"eth:0x1fbABAbDcFE0b40a9B5D2aDB054fB74F8fE985f5","type":"EOA","isVerified":true,"name":"0x1fbA…85f5","url":"https://etherscan.io/address/0x1fbABAbDcFE0b40a9B5D2aDB054fB74F8fE985f5"},{"address":"eth:0xBe1D614F13662Aff0a2Ec1e76f9c82D332Ae78A2","type":"EOA","isVerified":true,"name":"0xBe1D…78A2","url":"https://etherscan.io/address/0xBe1D614F13662Aff0a2Ec1e76f9c82D332Ae78A2"},{"address":"eth:0x4983A5ebE79c0570aa368cE84f281A8aAc50cE4d","type":"EOA","isVerified":true,"name":"0x4983…cE4d","url":"https://etherscan.io/address/0x4983A5ebE79c0570aa368cE84f281A8aAc50cE4d"}],"discoveryDrivenData":true},{"name":"Guardians","description":"A Multisig with 5/8 threshold. \nCustom Multisig implementation that has a general threshold of 5 and a specific threshold for extending the legal voting period of 2.\n* Can interact with ProtocolUpgradeHandler\n  * extend the legal veto period, approve a protocol upgrade \n* Can interact with EmergencyUpgradeBoard\n  * one of its 3/3 signers ","accounts":[{"address":"eth:0x600dA620Ab29F41ABC6596a15981e14cE58c86b8","type":"Contract","isVerified":true,"name":"0x600d…86b8","url":"https://etherscan.io/address/0x600dA620Ab29F41ABC6596a15981e14cE58c86b8"}],"chain":"ethereum","references":[{"title":"Guardians - ZK Nation docs","url":"https://docs.zknation.io/zksync-governance/schedule-4-zksync-guardians"}],"participants":[{"address":"eth:0x015318c16AE443a20DE0A776dB06a59F0D279057","type":"Contract","isVerified":true,"name":"GnosisSafe","url":"https://etherscan.io/address/0x015318c16AE443a20DE0A776dB06a59F0D279057"},{"address":"eth:0x178D8Eb1A1fb81B5102808A83318Bb04C6a9fC6D","type":"Contract","isVerified":true,"name":"GnosisSafe","url":"https://etherscan.io/address/0x178D8Eb1A1fb81B5102808A83318Bb04C6a9fC6D"},{"address":"eth:0x2A90830083C5Ca1f18d7AA7fCDC2998f93475384","type":"Contract","isVerified":true,"name":"GnosisSafe","url":"https://etherscan.io/address/0x2A90830083C5Ca1f18d7AA7fCDC2998f93475384"},{"address":"eth:0x538612F6eba6ff80FBD95D60dCDee16b8FfF2c0f","type":"Contract","isVerified":true,"name":"GnosisSafe","url":"https://etherscan.io/address/0x538612F6eba6ff80FBD95D60dCDee16b8FfF2c0f"},{"address":"eth:0x55c671BcE13120387Ded710A1d1b80C0e3d8E857","type":"Contract","isVerified":true,"name":"GnosisSafe","url":"https://etherscan.io/address/0x55c671BcE13120387Ded710A1d1b80C0e3d8E857"},{"address":"eth:0x590926dBCDfD19627c3BbD2A6Eb96DeC7a3AbF69","type":"Contract","isVerified":true,"name":"GnosisSafe","url":"https://etherscan.io/address/0x590926dBCDfD19627c3BbD2A6Eb96DeC7a3AbF69"},{"address":"eth:0x6D26874130A174839b9cd8CB87Ed4E09D0c1a5f0","type":"Contract","isVerified":true,"name":"GnosisSafe","url":"https://etherscan.io/address/0x6D26874130A174839b9cd8CB87Ed4E09D0c1a5f0"},{"address":"eth:0xCe7a3dFcc35602155809920Ff65e093aa726f6cf","type":"Contract","isVerified":true,"name":"GnosisSafe","url":"https://etherscan.io/address/0xCe7a3dFcc35602155809920Ff65e093aa726f6cf"}],"discoveryDrivenData":true},{"name":"SecurityCouncil","description":"A Multisig with 9/12 threshold. \nCustom Multisig implementation that has a general threshold of 9 but also specific thresholds for upgrade approvals (6) or soft freezes (3).\n* Can interact with ProtocolUpgradeHandler\n  * soft freeze, hard freeze, approve a protocol upgrade \n* Can interact with EmergencyUpgradeBoard\n  * one of its 3/3 signers ","accounts":[{"address":"eth:0x66E4431266DC7E04E7d8b7FE9d2181253df7F410","type":"Contract","isVerified":true,"name":"0x66E4…F410","url":"https://etherscan.io/address/0x66E4431266DC7E04E7d8b7FE9d2181253df7F410"}],"chain":"ethereum","references":[{"title":"Security Council members - ZK Nation docs","url":"https://docs.zknation.io/zksync-governance/schedule-3-zksync-security-council"}],"participants":[{"address":"eth:0x13f07d9BF17615f6a17F272fe1A913168C275A66","type":"Contract","isVerified":true,"name":"GnosisSafe","url":"https://etherscan.io/address/0x13f07d9BF17615f6a17F272fe1A913168C275A66"},{"address":"eth:0x34Ea62D4b9bBB8AD927eFB6ab31E3Ab3474aC93a","type":"Contract","isVerified":true,"name":"GnosisSafe","url":"https://etherscan.io/address/0x34Ea62D4b9bBB8AD927eFB6ab31E3Ab3474aC93a"},{"address":"eth:0x35eA56fd9eAd2567F339Eb9564B6940b9DD5653F","type":"Contract","isVerified":true,"name":"GnosisSafe","url":"https://etherscan.io/address/0x35eA56fd9eAd2567F339Eb9564B6940b9DD5653F"},{"address":"eth:0x3888777686F0b0d8c3108fc22ad8DE9E049bE26F","type":"Contract","isVerified":true,"name":"GnosisSafe","url":"https://etherscan.io/address/0x3888777686F0b0d8c3108fc22ad8DE9E049bE26F"},{"address":"eth:0x69462a81ba94D64c404575f1899a464F123497A2","type":"Contract","isVerified":true,"name":"GnosisSafe","url":"https://etherscan.io/address/0x69462a81ba94D64c404575f1899a464F123497A2"},{"address":"eth:0x725065b4eB99294BaaE57AdDA9c32e42F453FA8A","type":"Contract","isVerified":true,"name":"GnosisSafe","url":"https://etherscan.io/address/0x725065b4eB99294BaaE57AdDA9c32e42F453FA8A"},{"address":"eth:0x84BF0Ac41Eeb74373Ddddae8b7055Bf2bD3CE6E0","type":"Contract","isVerified":true,"name":"GnosisSafe","url":"https://etherscan.io/address/0x84BF0Ac41Eeb74373Ddddae8b7055Bf2bD3CE6E0"},{"address":"eth:0x9B39Ea22e838B316Ea7D74e7C4B07d91D51ccA88","type":"Contract","isVerified":true,"name":"GnosisSafe","url":"https://etherscan.io/address/0x9B39Ea22e838B316Ea7D74e7C4B07d91D51ccA88"},{"address":"eth:0x9B8Be3278B7F0168D82059eb6BAc5991DcdfA803","type":"Contract","isVerified":true,"name":"GnosisSafe","url":"https://etherscan.io/address/0x9B8Be3278B7F0168D82059eb6BAc5991DcdfA803"},{"address":"eth:0xB7aC3A79A23B148c85fba259712c5A1e7ad0ca44","type":"Contract","isVerified":true,"name":"GnosisSafe","url":"https://etherscan.io/address/0xB7aC3A79A23B148c85fba259712c5A1e7ad0ca44"},{"address":"eth:0xc3Abc9f9AA75Be8341E831482cdA0125a7B1A23e","type":"Contract","isVerified":true,"name":"GnosisSafe","url":"https://etherscan.io/address/0xc3Abc9f9AA75Be8341E831482cdA0125a7B1A23e"},{"address":"eth:0xFB90Da9DC45378A1B50775Beb03aD10C7E8DC231","type":"Contract","isVerified":true,"name":"GnosisSafe","url":"https://etherscan.io/address/0xFB90Da9DC45378A1B50775Beb03aD10C7E8DC231"}],"discoveryDrivenData":true},{"name":"ValidatorTimelock","accounts":[{"address":"eth:0x8c0Bfc04AdA21fd496c55B8C50331f904306F564","type":"Contract","isVerified":true,"name":"0x8c0B…F564","url":"https://etherscan.io/address/0x8c0Bfc04AdA21fd496c55B8C50331f904306F564"}],"chain":"ethereum","description":"Intermediary contract between the *Validators* and the central diamond contract that delays block execution (ie withdrawals and other L2 --> L1 messages) by 3h.\n* Can interact with SophonZkEvm\n  * commit, prove, execute, revert batches directly in the main Diamond contract. This role is typically held by a proxying ValidatorTimelock ","discoveryDrivenData":true},{"name":"SophonTransactionFilterer","accounts":[{"address":"eth:0x9D06B34adc3026eF876e4DABb859C424DbDA3063","type":"Contract","isVerified":true,"name":"0x9D06…3063","url":"https://etherscan.io/address/0x9D06B34adc3026eF876e4DABb859C424DbDA3063"}],"chain":"ethereum","description":"A contract implementing the ITransactionFilterer interface, able to whitelist transactions based on sender- OR contractL2 (target) addresses. The whitelist is defined in AccessControl roles.\n* Can interact with SophonZkEvm\n  * define addresses that can send transactions from L1 to L2 (e.g. for deposits, withdrawals, queued transactions). This is enforced in the Mailbox Facet ","discoveryDrivenData":true},{"name":"SophonChainAdminMultisig","description":"A Multisig with 4/8 threshold. \n* Can interact with SophonZkEvm\n  * manage fees, apply predefined upgrades, manage censorship through a TransactionFilterer, set DA mode, migrate the chain to whitelisted settlement layers (Chain Admin role) [via: SophonZkEvmAdmin]\n* Can interact with SophonTransactionFilterer\n  * manage the whitelist ","accounts":[{"address":"eth:0xe4644b6d106A18062344c0A853666bc0B8f052d1","type":"Contract","isVerified":true,"name":"0xe464…52d1","url":"https://etherscan.io/address/0xe4644b6d106A18062344c0A853666bc0B8f052d1"}],"chain":"ethereum","references":[],"participants":[{"address":"eth:0x11BB5F79750de2Cc71e80cB2C59cF0a60EFFa95d","type":"EOA","isVerified":true,"name":"0x11BB…a95d","url":"https://etherscan.io/address/0x11BB5F79750de2Cc71e80cB2C59cF0a60EFFa95d"},{"address":"eth:0x0BA5557075B4E30bA409B01797c9c78b3Ce192bF","type":"EOA","isVerified":true,"name":"0x0BA5…92bF","url":"https://etherscan.io/address/0x0BA5557075B4E30bA409B01797c9c78b3Ce192bF"},{"address":"eth:0x3b6036d410cA018661324766680674921a8b2d89","type":"EOA","isVerified":true,"name":"0x3b60…2d89","url":"https://etherscan.io/address/0x3b6036d410cA018661324766680674921a8b2d89"},{"address":"eth:0x20719Abd2E63518e68D30a295388cAd6B542dCEf","type":"EOA","isVerified":true,"name":"0x2071…dCEf","url":"https://etherscan.io/address/0x20719Abd2E63518e68D30a295388cAd6B542dCEf"},{"address":"eth:0x14574dfC6B7aF658c5033BA95673864947956521","type":"EOA","isVerified":true,"name":"0x1457…6521","url":"https://etherscan.io/address/0x14574dfC6B7aF658c5033BA95673864947956521"},{"address":"eth:0x90E10C37d8d9e854e7775B0069728642A1F88610","type":"EOA","isVerified":true,"name":"0x90E1…8610","url":"https://etherscan.io/address/0x90E10C37d8d9e854e7775B0069728642A1F88610"},{"address":"eth:0x7f413262Cb811B034d077d9184b5Efda6943f2c3","type":"EOA","isVerified":true,"name":"0x7f41…f2c3","url":"https://etherscan.io/address/0x7f413262Cb811B034d077d9184b5Efda6943f2c3"},{"address":"eth:0xd89b0f620E0C72BD82e0447dE07FB0A0Abe01F69","type":"EOA","isVerified":true,"name":"0xd89b…1F69","url":"https://etherscan.io/address/0xd89b0f620E0C72BD82e0447dE07FB0A0Abe01F69"}],"discoveryDrivenData":true},{"name":"Avail Multisig 2","description":"A Multisig with 3/5 threshold. \n* Can interact with AvailBridgeV1\n  * pause the bridge ","accounts":[{"address":"eth:0x1a5BA9447D02Ddaf7bcB5594Fc27dE2Daf588930","type":"Contract","isVerified":true,"name":"0x1a5B…8930","url":"https://etherscan.io/address/0x1a5BA9447D02Ddaf7bcB5594Fc27dE2Daf588930"}],"chain":"ethereum","references":[],"participants":[{"address":"eth:0xE458b870F2F59a49915591282f1Bb688901767AD","type":"EOA","isVerified":true,"name":"0xE458…67AD","url":"https://etherscan.io/address/0xE458b870F2F59a49915591282f1Bb688901767AD"},{"address":"eth:0x340e77D5e114A9D4891d3a1EbC7419CC85Ca8E4A","type":"EOA","isVerified":true,"name":"0x340e…8E4A","url":"https://etherscan.io/address/0x340e77D5e114A9D4891d3a1EbC7419CC85Ca8E4A"},{"address":"eth:0xAD379D3275a18bd4BB741C3b291a3778D51c3304","type":"EOA","isVerified":true,"name":"0xAD37…3304","url":"https://etherscan.io/address/0xAD379D3275a18bd4BB741C3b291a3778D51c3304"},{"address":"eth:0x72Ff26D9517324eEFA89A48B75c5df41132c4f54","type":"EOA","isVerified":true,"name":"0x72Ff…4f54","url":"https://etherscan.io/address/0x72Ff26D9517324eEFA89A48B75c5df41132c4f54"},{"address":"eth:0x1fbABAbDcFE0b40a9B5D2aDB054fB74F8fE985f5","type":"EOA","isVerified":true,"name":"0x1fbA…85f5","url":"https://etherscan.io/address/0x1fbABAbDcFE0b40a9B5D2aDB054fB74F8fE985f5"}],"discoveryDrivenData":true},{"name":"ZK Foundation Multisig","description":"A Multisig with 3/5 threshold. \n* Can interact with EmergencyUpgradeBoard\n  * one of its 3/3 signers ","accounts":[{"address":"eth:0xbC1653bd3829dfEc575AfC3816D4899cd103B51c","type":"Contract","isVerified":true,"name":"0xbC16…B51c","url":"https://etherscan.io/address/0xbC1653bd3829dfEc575AfC3816D4899cd103B51c"}],"chain":"ethereum","references":[],"participants":[{"address":"eth:0xA10fcD4B012467FAC48ce63838B7bE56AB16bE52","type":"EOA","isVerified":true,"name":"0xA10f…bE52","url":"https://etherscan.io/address/0xA10fcD4B012467FAC48ce63838B7bE56AB16bE52"},{"address":"eth:0x56B3120c32AE9C3188fafc5Cc542F9c53B0b2222","type":"EOA","isVerified":true,"name":"0x56B3…2222","url":"https://etherscan.io/address/0x56B3120c32AE9C3188fafc5Cc542F9c53B0b2222"},{"address":"eth:0x441e5c8910Ef39996B2D01499509861228cbc2d1","type":"EOA","isVerified":true,"name":"0x441e…c2d1","url":"https://etherscan.io/address/0x441e5c8910Ef39996B2D01499509861228cbc2d1"},{"address":"eth:0x0B2E7ffbcD1E3e6f5034555Fb638889FE7564709","type":"EOA","isVerified":true,"name":"0x0B2E…4709","url":"https://etherscan.io/address/0x0B2E7ffbcD1E3e6f5034555Fb638889FE7564709"},{"address":"eth:0x610e45F112e0c8a9aA7137677C83E7A198A1b991","type":"EOA","isVerified":true,"name":"0x610e…b991","url":"https://etherscan.io/address/0x610e45F112e0c8a9aA7137677C83E7A198A1b991"}],"discoveryDrivenData":true},{"name":"SP1VerifierGatewayMultisig","description":"A Multisig with 2/3 threshold. \n* Can interact with SP1VerifierGateway\n  * affect the liveness and safety of the gateway - can transfer ownership, add and freeze verifier routes ","accounts":[{"address":"eth:0xCafEf00d348Adbd57c37d1B77e0619C6244C6878","type":"Contract","isVerified":true,"name":"0xCafE…6878","url":"https://etherscan.io/address/0xCafEf00d348Adbd57c37d1B77e0619C6244C6878"}],"chain":"ethereum","references":[],"participants":[{"address":"eth:0xBaB2c2aF5b91695e65955DA60d63aD1b2aE81126","type":"EOA","isVerified":true,"name":"0xBaB2…1126","url":"https://etherscan.io/address/0xBaB2c2aF5b91695e65955DA60d63aD1b2aE81126"},{"address":"eth:0x72Ff26D9517324eEFA89A48B75c5df41132c4f54","type":"EOA","isVerified":true,"name":"0x72Ff…4f54","url":"https://etherscan.io/address/0x72Ff26D9517324eEFA89A48B75c5df41132c4f54"},{"address":"eth:0x9395e83720bf2D8ac6435f9c520b48E289Cb8885","type":"EOA","isVerified":true,"name":"0x9395…8885","url":"https://etherscan.io/address/0x9395e83720bf2D8ac6435f9c520b48E289Cb8885"}],"discoveryDrivenData":true},{"name":"ProtocolTimelockController(L2->L1)","accounts":[{"address":"eth:0x085b8B6407f150D62adB1EF926F7f304600ec714","type":"EOA","isVerified":true,"name":"0x085b…c714","url":"https://etherscan.io/address/0x085b8B6407f150D62adB1EF926F7f304600ec714"}],"chain":"ethereum","description":"* Can interact with ProtocolUpgradeHandler\n  * start (queue) upgrades ","discoveryDrivenData":true},{"name":"EOA 3","accounts":[{"address":"eth:0xe14828E4405239dD331F194F1B7883eeD73bCBF3","type":"EOA","isVerified":true,"name":"0xe148…CBF3","url":"https://etherscan.io/address/0xe14828E4405239dD331F194F1B7883eeD73bCBF3"}],"chain":"ethereum","description":"* Can interact with SophonZkEvmAdmin\n  * set the conversion factor for gas token deposits ","discoveryDrivenData":true},{"name":"EOA 4","accounts":[{"address":"eth:0x50B238788747B26c408681283D148659F9da7Cf9","type":"EOA","isVerified":true,"name":"0x50B2…7Cf9","url":"https://etherscan.io/address/0x50B238788747B26c408681283D148659F9da7Cf9"}],"chain":"ethereum","description":"* Can interact with SophonTransactionFilterer\n  * call requestL2Transaction() with any target/calldata (whitelisted superuser sender) \n  * manage the whitelist ","discoveryDrivenData":true},{"name":"EOA 5","accounts":[{"address":"eth:0x87b8171993dA656F1bdbF862B071f21E82D674B9","type":"EOA","isVerified":true,"name":"0x87b8…74B9","url":"https://etherscan.io/address/0x87b8171993dA656F1bdbF862B071f21E82D674B9"}],"chain":"ethereum","description":"* Can interact with Vector\n  * can call commitHeaderRange() to commit block ranges to the Vector contract ","discoveryDrivenData":true}]},"zksync2":{"roles":[],"actors":[{"name":"ZkProtocolGovernor","accounts":[{"address":"zksync:0x76705327e682F2d96943280D99464Ab61219e34f","type":"Contract","isVerified":true,"name":"0x7670…e34f","url":"https://era.zksync.network/address/0x76705327e682F2d96943280D99464Ab61219e34f"}],"chain":"zksync2","description":"Main Governance contract allowing for token voting (simple majority) with the ZK token through delegates. This contract is used for protocol upgrade proposals (ZIPs) that start on ZKsync Era, go through Ethereum Layer 1 and can - from there - target all L1 and L2 contracts. At least 21M ZK tokens are necessary to start a proposal and a 630M quorum of voted tokens must be met to succeed.\n* Can interact with ProtocolTimelockController\n  * cancel queued transactions \n  * execute transactions that are ready \n  * manage all access control roles and change the minimum delay [via: ProtocolTimelockController]\n  * propose transactions ","discoveryDrivenData":true},{"name":"ZkTokenGovernor","accounts":[{"address":"zksync:0xb83FF6501214ddF40C91C9565d095400f3F45746","type":"Contract","isVerified":true,"name":"0xb83F…5746","url":"https://era.zksync.network/address/0xb83FF6501214ddF40C91C9565d095400f3F45746"}],"chain":"zksync2","description":"Governance contract allowing for token voting (simple majority) with the ZK token through delegates. This contract is used for Token Program Proposals (TPPs) usually targeting the ZK token on ZKsync Era. At least 21M ZK tokens are necessary to start a proposal (for delegates) and a 630M quorum of voted tokens must be met to succeed.\n* Can interact with ZkToken\n  * grant the MINTER_ROLE to arbitrary addresses, thus controlling the minting of the ZK token **with 3d delay** [via: ZkTokenTimelockController with 3d delay]\n* Can interact with ZkTokenTimelockController\n  * manage all access control roles and change the minimum delay **with 6d delay** [via: ZkTokenTimelockController with 3d delay with 3d delay]\n  * cancel queued transactions \n  * execute transactions that are ready \n  * propose transactions ","discoveryDrivenData":true},{"name":"ZkGovOpsGovernor","accounts":[{"address":"zksync:0xEEEa739a8b6fB1b8f703E23C9Be03CeeA643b160","type":"Contract","isVerified":true,"name":"0xEEEa…b160","url":"https://era.zksync.network/address/0xEEEa739a8b6fB1b8f703E23C9Be03CeeA643b160"}],"chain":"zksync2","description":"Governance contract allowing for token voting (simple majority) with the ZK token through delegates. This contract is used for Governance Advisory Proposals (GAPs) that are not executable onchain. At least 21M ZK tokens are necessary to start a proposal and a 630M quorum of voted tokens must be met to succeed.\n* Can interact with GovOpsTimelockController\n  * manage all access control roles and change the minimum delay **with 6d delay** [via: GovOpsTimelockController with 3d delay with 3d delay]\n  * cancel queued transactions \n  * execute transactions that are ready \n  * propose transactions ","discoveryDrivenData":true},{"name":"Guardians_l2Alias","accounts":[{"address":"zksync:0x711ea620AB29f41AbC6596a15981e14ce58C97c9","type":"EOA","isVerified":true,"name":"0x711e…97c9","url":"https://era.zksync.network/address/0x711ea620AB29f41AbC6596a15981e14ce58C97c9"}],"chain":"zksync2","description":"* Can interact with ZkTokenGovernor\n  * cancel proposals while they are pending (after having been proposed) or active (during the voting period) \n* Can interact with ZkGovOpsGovernor\n  * cancel proposals while they are pending (after having been proposed) or active (during the voting period) ","discoveryDrivenData":true},{"name":"ZKFoundationMultisig_l2Alias","accounts":[{"address":"zksync:0xcd2753Bd3829dfeC575AFC3816d4899CD103C62D","type":"EOA","isVerified":true,"name":"0xcd27…C62D","url":"https://era.zksync.network/address/0xcd2753Bd3829dfeC575AFC3816d4899CD103C62D"}],"chain":"zksync2","description":"* Can interact with ZkTokenGovernor\n  * make direct proposals without owning ZK tokens. In propose-guarded mode, this address is the ONLY allowed proposer. Propose-guarded mode is currently set to false ","discoveryDrivenData":true},{"name":"ProtocolUpgradeHandler_l2Alias_deprecated","accounts":[{"address":"zksync:0xA08b9912416E8aDc4D9C21Fae1415d3318A129A8","type":"EOA","isVerified":true,"name":"0xA08b…29A8","url":"https://era.zksync.network/address/0xA08b9912416E8aDc4D9C21Fae1415d3318A129A8"}],"chain":"zksync2","description":"* Can upgrade **with no delay**\n  * ZkToken [via: ZkTokenProxyAdmin]","discoveryDrivenData":true},{"name":"ProtocolUpgradeHandler_l2Alias","accounts":[{"address":"zksync:0xF41EcA3047B37dc7d88849de4a4dc07937Ad6bc4","type":"EOA","isVerified":true,"name":"0xF41E…6bc4","url":"https://era.zksync.network/address/0xF41EcA3047B37dc7d88849de4a4dc07937Ad6bc4"}],"chain":"zksync2","description":"* Can interact with ZkToken\n  * control all roles in the ZkToken access control, including the minter roles ","discoveryDrivenData":true}]},"arbitrum":{"roles":[],"actors":[{"name":"SP1VerifierGatewayMultisig","description":"A Multisig with 2/3 threshold. \n* Can interact with SP1VerifierGateway\n  * affect the liveness and safety of the gateway - can transfer ownership, add and freeze verifier routes ","accounts":[{"address":"arb1:0xCafEf00d348Adbd57c37d1B77e0619C6244C6878","type":"Contract","isVerified":true,"name":"0xCafE…6878","url":"https://arbiscan.io/address/0xCafEf00d348Adbd57c37d1B77e0619C6244C6878"}],"chain":"arbitrum","references":[],"participants":[{"address":"arb1:0xBaB2c2aF5b91695e65955DA60d63aD1b2aE81126","type":"EOA","isVerified":true,"name":"0xBaB2…1126","url":"https://arbiscan.io/address/0xBaB2c2aF5b91695e65955DA60d63aD1b2aE81126"},{"address":"arb1:0x72Ff26D9517324eEFA89A48B75c5df41132c4f54","type":"EOA","isVerified":true,"name":"0x72Ff…4f54","url":"https://arbiscan.io/address/0x72Ff26D9517324eEFA89A48B75c5df41132c4f54"},{"address":"arb1:0x9395e83720bf2D8ac6435f9c520b48E289Cb8885","type":"EOA","isVerified":true,"name":"0x9395…8885","url":"https://arbiscan.io/address/0x9395e83720bf2D8ac6435f9c520b48E289Cb8885"}],"discoveryDrivenData":true}]},"base":{"roles":[],"actors":[{"name":"SP1VerifierGatewayMultisig","description":"A Multisig with 2/3 threshold. \n* Can interact with SP1VerifierGateway\n  * affect the liveness and safety of the gateway - can transfer ownership, add and freeze verifier routes ","accounts":[{"address":"base:0xCafEf00d348Adbd57c37d1B77e0619C6244C6878","type":"Contract","isVerified":true,"name":"0xCafE…6878","url":"https://basescan.org/address/0xCafEf00d348Adbd57c37d1B77e0619C6244C6878"}],"chain":"base","references":[],"participants":[{"address":"base:0xBaB2c2aF5b91695e65955DA60d63aD1b2aE81126","type":"EOA","isVerified":true,"name":"0xBaB2…1126","url":"https://basescan.org/address/0xBaB2c2aF5b91695e65955DA60d63aD1b2aE81126"},{"address":"base:0x72Ff26D9517324eEFA89A48B75c5df41132c4f54","type":"EOA","isVerified":true,"name":"0x72Ff…4f54","url":"https://basescan.org/address/0x72Ff26D9517324eEFA89A48B75c5df41132c4f54"},{"address":"base:0x9395e83720bf2D8ac6435f9c520b48E289Cb8885","type":"EOA","isVerified":true,"name":"0x9395…8885","url":"https://basescan.org/address/0x9395e83720bf2D8ac6435f9c520b48E289Cb8885"}],"discoveryDrivenData":true}]}},"contracts":{"addresses":{"ethereum":[{"name":"SophonZkEvm","isVerified":true,"address":"eth:0x05eDE6aD1f39B7A16C949d5C33a0658c9C7241e3","upgradeability":{"proxyType":"EIP2535 diamond proxy","admins":[],"implementations":["eth:0x431449e2a28A69122860A4956A3f7191eE15aFBC","eth:0xae5cbB5f70e134668a13d7C8EcEF5e9E6FffCF22","eth:0x365D0ae3ECA13004daf2A4ba1501c01AaEbb4fec","eth:0x2f116b9033d88Bb3Cf64C371AE5458fbA22BA39A"],"immutable":false},"chain":"ethereum","description":"The main contract defining the Layer 2. Operator actions like commiting blocks, providing ZK proofs and executing batches ultimately target this contract which then processes transactions. During batch execution it processes L1 --> L2 and L2 --> L1 transactions.\n* Roles:\n  * **getAdmin**: SophonZkEvmAdmin; ultimately SophonChainAdminMultisig\n  * **getTransactionFilterer**: SophonTransactionFilterer\n  * **validators**: ValidatorTimelock, ValidatorTimelock2","discoveryDrivenData":true},{"name":"AvailL1DAValidator","isVerified":true,"address":"eth:0x8f50d93B9955B285f787043B30B5F51D09bE0120","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Contract that verifies that the validiums data was made available on Avail by querying the AvailBridgeV1 on Ethereum for a merkle proof of inclusion.\n","discoveryDrivenData":true},{"name":"BridgeHub","isVerified":true,"address":"eth:0x303a465B659cBB0ab36eE643eA362c509EEb5213","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1"],"implementations":["eth:0x08A98B1048Fb61E9Fff7d7d98305aC6286Ae9F32"]},"chain":"ethereum","description":"The main registry (hub) for all the contracts in the ZK stack cluster and central entrypoint for bridge transactions. Stores important mappings like from chainId to diamond address, from chainId to parent CTM, from chainId to base token etc. A clone of Bridgehub is also deployed on each L2 chain, but this clone is only used on settlement layers.\n* Roles:\n  * **admin**: EraChainAdminProxy, ProxyAdmin; ultimately EmergencyUpgradeBoard, Matter Labs Multisig\n  * **owner**: ProtocolUpgradeHandler; ultimately EmergencyUpgradeBoard","upgradableBy":[{"name":"EmergencyUpgradeBoard","delay":"no"}],"discoveryDrivenData":true},{"name":"MessageRoot","isVerified":true,"address":"eth:0x5Ce9257755391D1509cD4eC1899d3F88A57BB4aD","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1"],"implementations":["eth:0x382fb241396eA915108e7B7Ce1adE1322bA73aeE"]},"chain":"ethereum","description":"Aggregates remote bridge message roots from all ZK stack chains. To be used with the Gateway when deployed.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately EmergencyUpgradeBoard","upgradableBy":[{"name":"EmergencyUpgradeBoard","delay":"no"}],"discoveryDrivenData":true},{"name":"CTMDeploymentTracker","isVerified":true,"address":"eth:0x6078F6B379f103de1Aa912dc46bb8Df0c8809860","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1"],"implementations":["eth:0x1E405E5cdF127Dc98Eb490AB0e97345f892Ff7E1"]},"chain":"ethereum","description":"Asset deployment tracker where the 'asset' is a ChainTypeManager. The registering of asset IDs for ChainTypeManagers is necessary to be able to migrate them to a given settlement layer, for example the Gateway.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately EmergencyUpgradeBoard","upgradableBy":[{"name":"EmergencyUpgradeBoard","delay":"no"}],"discoveryDrivenData":true},{"name":"RollupL1DAValidator","isVerified":true,"address":"eth:0x72213dfe8CA61B0A782970dCFebFb877778f9119","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Contract that verifies the data availability of ethereum calldata and blobs. Can be used by ZK stack rollups as the L1 part of a DAValidator pair.\n","discoveryDrivenData":true},{"name":"ChainTypeManager","isVerified":true,"address":"eth:0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1"],"implementations":["eth:0x345314c7E4af84B763d98d23f772622E23AfB5CE"]},"chain":"ethereum","description":"Defines L2 diamond contract versions, creation and upgrade data and the proof system for all ZK stack chains connected to it. ZK chains are children of this central contract and can only upgrade to versions that were previously registered here. The current protocol version is 0,28,1.\n* Roles:\n  * **admin**: EraChainAdminProxy, ProxyAdmin; ultimately EmergencyUpgradeBoard, Matter Labs Multisig\n  * **owner**: ProtocolUpgradeHandler; ultimately EmergencyUpgradeBoard","upgradableBy":[{"name":"EmergencyUpgradeBoard","delay":"no"}],"discoveryDrivenData":true},{"name":"L1Nullifier","isVerified":true,"address":"eth:0xD7f9f54194C633F36CCD5F3da84ad4a1c38cB2cB","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1"],"implementations":["eth:0xC6f08EFb7BA78f40d00F41aFAC00211d59eb9431"]},"chain":"ethereum","description":"Contract responsible for bookkeeping L1 bridging transactions. Used to finalize withdrawals and reclaim failed deposits. Does not escrow funds.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately EmergencyUpgradeBoard\n  * **owner**: ProtocolUpgradeHandler; ultimately EmergencyUpgradeBoard","upgradableBy":[{"name":"EmergencyUpgradeBoard","delay":"no"}],"discoveryDrivenData":true},{"name":"ProtocolUpgradeHandler","isVerified":true,"address":"eth:0xE30Dca3047B37dc7d88849dE4A4Dc07937ad5Ab3","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x1e4c534e7ce1FF5621Ea506D99b367D7d8EFbE3e"],"implementations":["eth:0x0A67f0Fd2f7523057039F14969Fe23a5f620f19A"]},"chain":"ethereum","description":"The central upgrade contract and Governance proxy for all ZK stack contracts. Accepts successful DAO proposals from L2 and emergency proposals from the EmergencyUpgradeBoard. The three members of the EmergencyUpgradeBoard also have special roles and permissions in this contract.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately EmergencyUpgradeBoard\n  * **emergencyUpgradeBoard**: EmergencyUpgradeBoard\n  * **guardians**: Guardians\n  * **l2_protocol_governor**: ProtocolTimelockController(L2->L1)\n  * **securityCouncil**: SecurityCouncil","upgradableBy":[{"name":"EmergencyUpgradeBoard","delay":"no"}],"discoveryDrivenData":true},{"name":"RollupDAManager","isVerified":true,"address":"eth:0xE689e79a06D3D09f99C21E534cCF6a8b7C9b3C45","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Simple registry for allowed DA address pairs for the 'rollup' data availability mode (can be permanently enforced with isPermanentRollup=true). Rollup DA address pairs (especially the L1 part) usually point to contracts that validate if data was made available on Ethereum.\n* Roles:\n  * **owner**: ProtocolUpgradeHandler; ultimately EmergencyUpgradeBoard","discoveryDrivenData":true},{"name":"AvailBridgeV1","isVerified":true,"address":"eth:0x054fd961708D8E2B9c10a63F6157c74458889F0a","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x36194271a00dBBBae314E83dA56d0FF75fDa367B"],"implementations":["eth:0x737539737b44493F65c17eAfE165197b6410d254"]},"chain":"ethereum","description":"Bridge contract that verifies merkle proofs of inclusion in the proven data of the Vector DA- and arbitrary message bridge. Also used for token- and arbitrary message transfers between Avail and Ethereum.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Avail Multisig 1\n  * **defaultAdmin**: TimelockController; ultimately Avail Multisig 1\n  * **pauser**: Avail Multisig 2","upgradableBy":[{"name":"Avail Multisig 1","delay":"1d"}],"discoveryDrivenData":true},{"name":"SophonZkEvmAdmin","isVerified":true,"address":"eth:0xE1eeA4D6443b19D373Fe99De838b930Ef0ac2Ad3","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"* Roles:\n  * **owner**: SophonChainAdminMultisig\n  * **tokenMultiplierSetter**: EOA 3","discoveryDrivenData":true},{"name":"EraChainAdminProxy","isVerified":true,"address":"eth:0x2cf3bD6a9056b39999F3883955E183F655345063","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"* Roles:\n  * **owner**: Matter Labs Multisig","discoveryDrivenData":true},{"name":"L1USDCBridge","isVerified":true,"address":"eth:0xf553E6D903AA43420ED7e3bc2313bE9286A8F987","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1"],"implementations":["eth:0x2ccD5486Ea1b2A52dcD387c01314F6A328f66cbB"]},"chain":"ethereum","description":"","discoveryDrivenData":true},{"name":"L1VerifierFflonk","isVerified":true,"address":"eth:0x1AC4F629Fdc77A7700B68d03bF8D1A53f2210911","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Verifies a zk-SNARK proof using an implementation of the fflonk proof system.\n","discoveryDrivenData":true},{"name":"L1VerifierPlonk","isVerified":true,"address":"eth:0x2db2ffdecb7446aaab01FAc3f4D55863db3C5bd6","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Verifies a zk-SNARK proof using an implementation of the PlonK proof system.\n","discoveryDrivenData":true},{"name":"DualVerifier","isVerified":true,"address":"eth:0xD71DDC9956781bf07DbFb9fCa891f971dbE9868A","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"A router contract for verifiers. Routes verification requests to L1VerifierFflonk or L1VerifierPlonk depending on the supplied proof type.\n","discoveryDrivenData":true},{"name":"ProxyAdmin","isVerified":true,"address":"eth:0x1e4c534e7ce1FF5621Ea506D99b367D7d8EFbE3e","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"* Roles:\n  * **owner**: ProtocolUpgradeHandler","discoveryDrivenData":true},{"name":"ProxyAdmin","isVerified":true,"address":"eth:0x257FC0c3EB02F7ba8C0fd3eD57692A9c1ee6D29B","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"* Roles:\n  * **owner**: EraChainAdminProxy","discoveryDrivenData":true},{"name":"L1NativeTokenVault","isVerified":true,"address":"eth:0xbeD1EB542f9a5aA6419Ff3deb921A372681111f6","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1"],"implementations":["eth:0xBa05B8B761386289Ba413a74AF1933d6a76E1b52"]},"chain":"ethereum","description":"Canonical central asset escrow for all ZK stack chains.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately EmergencyUpgradeBoard\n  * **owner**: ProtocolUpgradeHandler; ultimately EmergencyUpgradeBoard","upgradableBy":[{"name":"EmergencyUpgradeBoard","delay":"no"}],"discoveryDrivenData":true},{"name":"ProxyAdmin","isVerified":true,"address":"eth:0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"* Roles:\n  * **owner**: ProtocolUpgradeHandler","discoveryDrivenData":true},{"name":"ServerNotifier","isVerified":true,"address":"eth:0xfca808A744735D9919EEBe4660B8Fd897456Ce31","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x257FC0c3EB02F7ba8C0fd3eD57692A9c1ee6D29B"],"implementations":["eth:0x555D040F4A089D1dF14B372a87C5aF8FA37BDB7A"]},"chain":"ethereum","description":"A simple contract that can be called by the ChainAdmin to emit notifications about chain migrations.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Matter Labs Multisig","upgradableBy":[{"name":"Matter Labs Multisig","delay":"no"}],"discoveryDrivenData":true},{"name":"SP1Verifier","isVerified":true,"address":"eth:0x0459d576A6223fEeA177Fb3DF53C9c77BF84C459","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Verifier contract for SP1 proofs (v5.0.0).\n","discoveryDrivenData":true},{"name":"SP1VerifierGateway","isVerified":true,"address":"eth:0x3B6041173B80E77f038f3F2C0f9744f04837185e","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"This contract is the router for zk proof verification. It stores the mapping between identifiers and the address of onchain verifier contracts, routing each identifier to the corresponding verifier contract.\n* Roles:\n  * **owner**: SP1VerifierGatewayMultisig","discoveryDrivenData":true},{"name":"Vector","isVerified":true,"address":"eth:0x02993cdC11213985b9B13224f3aF289F03bf298d","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x0000000000000000000000000000000000000000"],"implementations":["eth:0xc6217f1549Cab6f22ac4AC56d42e6C248731a33D"]},"chain":"ethereum","description":"The Vector bridge contract that accepts and stores Avail data availability commitments on Ethereum.\n* Roles:\n  * **guardians**: Avail Multisig 1\n  * **relayers**: EOA 5\n  * **timelocks**: Avail Multisig 1","upgradableBy":[{"name":"Avail Multisig 1","delay":"no"}],"discoveryDrivenData":true},{"name":"ProxyAdmin","isVerified":true,"address":"eth:0x36194271a00dBBBae314E83dA56d0FF75fDa367B","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"* Roles:\n  * **owner**: TimelockController","discoveryDrivenData":true},{"name":"TimelockController","isVerified":true,"address":"eth:0x45828180bbE489350D621d002968A0585406d487","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"A timelock with access control. The current minimum delay is 1d.\n* Roles:\n  * **canceller**: Avail Multisig 1\n  * **defaultAdmin**: Avail Multisig 1, TimelockController; ultimately Avail Multisig 1\n  * **executor**: Avail Multisig 1\n  * **proposer**: Avail Multisig 1","discoveryDrivenData":true}],"zksync2":[{"name":"ProtocolTimelockController","isVerified":true,"address":"zksync:0x085b8B6407f150D62adB1EF926F7f304600ec714","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"zksync2","description":"Timelock contract allowing the queueing of transactions with a minimum delay of 0s.\n* Roles:\n  * **canceller**: ZkProtocolGovernor\n  * **executor**: ZkProtocolGovernor\n  * **proposer**: ZkProtocolGovernor\n  * **timelockAdmin**: ProtocolTimelockController; ultimately ZkProtocolGovernor","discoveryDrivenData":true},{"name":"ZkToken","isVerified":true,"address":"zksync:0x5A7d6b2F92C77FAD6CCaBd7EE0624E64907Eaf3E","upgradeability":{"proxyType":"EIP1967 proxy","admins":["zksync:0xdB1E46B448e68a5E35CB693a99D59f784aD115CC"],"implementations":["zksync:0x01a6715d3560241E09E865a46122bf347A576c09"]},"chain":"zksync2","description":"The ZK token contract on ZKsync Era. Mintable through access control roles. Used for voting in the ZK stack governance system.\n* Roles:\n  * **admin**: ZkTokenProxyAdmin; ultimately ProtocolUpgradeHandler_l2Alias_deprecated\n  * **defaultAdmin**: ProtocolUpgradeHandler_l2Alias\n  * **minterAdmin**: ZkTokenTimelockController; ultimately ZkTokenGovernor","upgradableBy":[{"name":"ProtocolUpgradeHandler_l2Alias_deprecated","delay":"no"}],"discoveryDrivenData":true},{"name":"GovOpsTimelockController","isVerified":true,"address":"zksync:0xC9E442574958f96C026DeF9a50C3236cab17428a","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"zksync2","description":"Timelock contract allowing the queueing of transactions with a minimum delay of 3d.\n* Roles:\n  * **canceller**: ZkGovOpsGovernor\n  * **executor**: ZkGovOpsGovernor\n  * **proposer**: ZkGovOpsGovernor\n  * **timelockAdmin**: GovOpsTimelockController; ultimately ZkGovOpsGovernor","discoveryDrivenData":true},{"name":"ZkTokenProxyAdmin","isVerified":true,"address":"zksync:0xdB1E46B448e68a5E35CB693a99D59f784aD115CC","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"zksync2","description":"* Roles:\n  * **owner**: ProtocolUpgradeHandler_l2Alias_deprecated","discoveryDrivenData":true},{"name":"ZkTokenTimelockController","isVerified":true,"address":"zksync:0xe5d21A9179CA2E1F0F327d598D464CcF60d89c3d","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"zksync2","description":"Timelock contract allowing the queueing of transactions with a minimum delay of 3d.\n* Roles:\n  * **canceller**: ZkTokenGovernor\n  * **executor**: ZkTokenGovernor\n  * **proposer**: ZkTokenGovernor\n  * **timelockAdmin**: ZkTokenTimelockController; ultimately ZkTokenGovernor","discoveryDrivenData":true}],"arbitrum":[{"name":"SP1Verifier","isVerified":true,"address":"arb1:0x0459d576A6223fEeA177Fb3DF53C9c77BF84C459","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"arbitrum","description":"Verifier contract for SP1 proofs (v5.0.0).\n","discoveryDrivenData":true},{"name":"SP1VerifierGateway","isVerified":true,"address":"arb1:0x3B6041173B80E77f038f3F2C0f9744f04837185e","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"arbitrum","description":"This contract is the router for zk proof verification. It stores the mapping between identifiers and the address of onchain verifier contracts, routing each identifier to the corresponding verifier contract.\n* Roles:\n  * **owner**: SP1VerifierGatewayMultisig","discoveryDrivenData":true}],"base":[{"name":"SP1Verifier","isVerified":true,"address":"base:0x0459d576A6223fEeA177Fb3DF53C9c77BF84C459","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"base","description":"Verifier contract for SP1 proofs (v5.0.0).\n","discoveryDrivenData":true},{"name":"SP1VerifierGateway","isVerified":true,"address":"base:0x3B6041173B80E77f038f3F2C0f9744f04837185e","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"base","description":"This contract is the router for zk proof verification. It stores the mapping between identifiers and the address of onchain verifier contracts, routing each identifier to the corresponding verifier contract.\n* Roles:\n  * **owner**: SP1VerifierGatewayMultisig","discoveryDrivenData":true}]},"risks":[{"category":"Funds can be stolen if","text":"a contract receives a malicious code upgrade. There is a 4d 3h - 8d 3h delay on code upgrades unless upgrade is initiated by the     EmergencyUpgradeBoard in which case there is no delay."}]},"stateValidation":{"description":"Each update to the system state must be accompanied by a ZK proof that ensures that the new state was derived by correctly applying a series of valid user transactions to the previous state. These proofs are then verified on Ethereum by a smart contract.","categories":[{"title":"Prover Architecture","description":"ZKsync Era proof system Boojum can be found [here](https://github.com/matter-labs/era-boojum/tree/main) and contains essential tools like the Prover, the Verifier, and other backend components. The specs of the system can be found [here](https://github.com/matter-labs/zksync-era/tree/main/prover)."},{"title":"ZK Circuits","description":"ZKsync Era circuits are built from Boojum and are designed to replicate the behavior of the EVM. The source code can be found [here](https://github.com/matter-labs/era-zkevm_circuits/tree/main). The circuits are checked against tests that can be found [here](https://github.com/matter-labs/era-zkevm_test_harness/tree/main).","risks":[{"category":"Funds can be lost if","text":"the proof system is implemented incorrectly."}]},{"title":"Verification Keys Generation","description":"SNARK verification keys can be generated and checked against the Ethereum verifier contract using [this tool](https://github.com/matter-labs/zksync-era/tree/main/prover/crates/bin/vk_setup_data_generator_server_fri). The system requires a trusted setup."}],"proofVerification":{"shortDescription":"ZKsync Era is a ZK-EVM rollup on Ethereum.","aggregation":true,"requiredTools":[{"name":"Custom tool","version":"v14.2.0","link":"https://github.com/matter-labs/zksync-era/tree/prover-v14.2.0/prover/vk_setup_data_generator_server_fri"}],"verifiers":[{"name":"ZKsyncEraVerifier","description":"ZKsync Era utilizes [Boojum](https://github.com/matter-labs/zksync-crypto/tree/main/crates/boojum) as the main proving stack for their system. Boojum is an implementation of the [Redshift](https://eprint.iacr.org/2019/1400.pdf) protocol. The protocol makes use of recursive proof aggregation. The final Redshift proof is wrapped in a SNARK (Plonk + KZG) proof.","verified":"no","contractAddress":"0x06aa7a7B07108F7C5539645e32DD5c21cBF9EB66","chainId":1,"subVerifiers":[{"name":"Final wrap","proofSystem":"Plonk SNARK","mainArithmetization":"Plonkish","mainPCS":"KZG","trustedSetup":"Aztec ceremony","link":"https://github.com/matter-labs/zksync-protocol/blob/main/crates/circuit_definitions/src/circuit_definitions/aux_layer/wrapper.rs"},{"name":"Aggregation circuit","proofSystem":"Redshift","mainArithmetization":"Plonkish","mainPCS":"LPC","trustedSetup":"None","link":"https://github.com/matter-labs/zksync-protocol/blob/7dfcc81eccc3984793646a5a47e4cd68757955a2/crates/circuit_definitions/src/circuit_definitions/recursion_layer/mod.rs#L45"},{"name":"Main circuit","proofSystem":"Redshift","mainArithmetization":"Plonkish","mainPCS":"LPC","trustedSetup":"None","link":"https://github.com/matter-labs/zksync-protocol/tree/main/crates/zkevm_circuits"}]}]}},"milestones":[{"title":"SOPH TGE","url":"https://x.com/sophon/status/1927697463655219692","date":"2025-05-28T00:00:00.00Z","description":"SOPH, the gas token of Sophon, is officially live.","type":"general"},{"title":"Avail Vector DA Bridge","url":"https://blog.availproject.org/avail-to-power-consumer-entertainment-onchain-with-sophon/","date":"2025-04-23T00:00:00.00Z","description":"Sophon is the first validium to integrate with the Vector data availability bridge to Avail.","type":"general"},{"title":"Mainnet public launch","url":"https://x.com/sophon/status/1861771965284896996","date":"2024-12-18T00:00:00Z","description":"Sophon Mainnet is now open for all users.","type":"general"},{"title":"Mainnet private launch","url":"https://blog.sophon.xyz/the-road-to-mainnet/","date":"2024-09-22T00:00:00Z","description":"Sophon launches their mainnet privately.","type":"general"}],"discoveryInfo":{"isDiscoDriven":false,"permissionsDiscoDriven":false,"contractsDiscoDriven":false,"baseTimestamp":1758619329,"hasDiscoUi":false}}