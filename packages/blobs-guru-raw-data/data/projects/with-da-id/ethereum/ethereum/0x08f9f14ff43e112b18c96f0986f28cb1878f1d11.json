{"type":"layer2","id":"bob","addedAt":1714521600,"capability":"universal","display":{"purposes":["Universal","Bitcoin DApps"],"architectureImage":"opstack-rollup-superchain-opfp-kailua","stateValidationImage":"kailua","stacks":["OP Stack"],"name":"BOB","slug":"bob","description":"BOB (Build on Bitcoin) is an OP Stack rollup that aims to natively support the Bitcoin stack. The current implementation supports a variety of canonical and external bridging for BTC-related assets and a tBTC-v2 LightRelay smart contract for verifying Bitcoin transaction proofs through their blocks' headers on the L2.","links":{"websites":["https://gobob.xyz"],"bridges":["https://app.gobob.xyz"],"documentation":["https://docs.gobob.xyz"],"explorers":["https://explorer.gobob.xyz?"],"repositories":["https://github.com/bob-collective"],"socialMedia":["https://twitter.com/build_on_bob"]},"liveness":{"warnings":{"stateUpdates":"Please note, for Optimistic rollups the state is not finalized until the challenge period passes."},"explanation":"BOB is an Optimistic rollup that posts transaction data to the L1. For a transaction to be considered final, it has to be posted within a tx batch on L1 that links to a previous finalized batch. If the previous batch is missing, transaction finalization can be delayed up to 12h or until it gets published. The state root is settled 1d after it has been posted."}},"chainConfig":{"name":"bob","chainId":60808,"coingeckoPlatform":"bob-network","explorerUrl":"https://explorer.gobob.xyz","sinceTimestamp":1712861989,"apis":[{"type":"rpc","url":"https://rpc.gobob.xyz/","callsPerMinute":300},{"type":"blockscout","url":"https://explorer.gobob.xyz/api"}],"gasTokens":["ETH"]},"proofSystem":{"type":"Optimistic","name":"OP Kailua","zkCatalogId":"risc0","challengeProtocol":"Single-step"},"config":{"activityConfig":{"type":"block","startBlock":1,"adjustCount":{"type":"SubtractOne"}},"escrows":[{"address":"0x8AdeE124447435fE03e3CD24dF3f4cAE32E65a3E","sinceTimestamp":1712862059,"tokens":["ETH"],"contract":{"isVerified":true,"address":"eth:0x8AdeE124447435fE03e3CD24dF3f4cAE32E65a3E","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x0d9f416260598313Be6FDf6B010f2FbC34957Cd0"],"implementations":["eth:0xB250566074B3c0f1B109A531A83f3d9B1a579273"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1712862419,"transactionHash":"0x86a85eda6fa19f4bcfe42bfe648335d93dde76ba0c31e0582608eefe04dd29b5","implementations":["eth:0x994e3B01D130944a3E67BFd3B8Fc73069b959FEc"]},{"timestamp":1752758927,"transactionHash":"0x1d93c182527e3c738f03ffb7baf66bbddfb29e1e60bbd9f5457c7de1a90eaaf1","implementations":["eth:0x6322C2f2D6a4305Fc033754d486A5A067Ee5F9b1"]},{"timestamp":1752758927,"transactionHash":"0x1d93c182527e3c738f03ffb7baf66bbddfb29e1e60bbd9f5457c7de1a90eaaf1","implementations":["eth:0x2D778797049FE9259d947D1ED8e5442226dFB589"]},{"timestamp":1752761915,"transactionHash":"0x5fc7da71db9e1541e3eeeedbc3dd3058bf01b5d03b10eee95eaa5668e9efd74e","implementations":["eth:0xd81f43eDBCAcb4c29a9bA38a13Ee5d79278270cC"]},{"timestamp":1752761915,"transactionHash":"0x5fc7da71db9e1541e3eeeedbc3dd3058bf01b5d03b10eee95eaa5668e9efd74e","implementations":["eth:0xe2F826324b2faf99E513D16D266c3F80aE87832B"]},{"timestamp":1752761915,"transactionHash":"0x5fc7da71db9e1541e3eeeedbc3dd3058bf01b5d03b10eee95eaa5668e9efd74e","implementations":["eth:0x2D7e764a0D9919e16983a46595CfA81fc34fa7Cd"]},{"timestamp":1752761915,"transactionHash":"0x5fc7da71db9e1541e3eeeedbc3dd3058bf01b5d03b10eee95eaa5668e9efd74e","implementations":["eth:0xB443Da3e07052204A02d630a8933dAc05a0d6fB4"]},{"timestamp":1753214303,"transactionHash":"0xa7881069c54f1028d42b83406ac5a768154f8ff34ad37ec7641b4d45766e77c3","implementations":["eth:0xB250566074B3c0f1B109A531A83f3d9B1a579273"]}],"description":"Main entry point for users depositing ETH.","upgradableBy":[{"name":"ProxyAdmin","delay":"no"}]},"chain":"ethereum","includeInTotal":true},{"address":"0x3F6cE1b36e5120BBc59D0cFe8A5aC8b6464ac1f7","sinceTimestamp":1712862107,"tokens":"*","excludedTokens":["SolvBTC","SolvBTC.BBN"],"contract":{"isVerified":true,"address":"eth:0x3F6cE1b36e5120BBc59D0cFe8A5aC8b6464ac1f7","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x0d9f416260598313Be6FDf6B010f2FbC34957Cd0"],"implementations":["eth:0x0b09ba359A106C9ea3b181CBc5F394570c7d2a7A"]},"chain":"ethereum","pastUpgrades":[],"description":"Main entry point for users depositing ERC20 token that do not require custom gateway.","upgradableBy":[{"name":"ProxyAdmin","delay":"no"}]},"chain":"ethereum","includeInTotal":true},{"address":"0x091dF5E1284E49fA682407096aD34cfD42B95B72","sinceTimestamp":1713786239,"tokens":["wstETH"],"contract":{"isVerified":true,"address":"eth:0x091dF5E1284E49fA682407096aD34cfD42B95B72","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c"],"implementations":["eth:0xB531445401926029B1647669cFAc8b4e5d8C7777"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1713786239,"transactionHash":"0x5c9f70728478f27141b59caee9f7e5e113aa710ae69566331419b511d6e4638b","implementations":["eth:0xB531445401926029B1647669cFAc8b4e5d8C7777"]}]},"chain":"ethereum","includeInTotal":true,"source":"external","bridgedUsing":{"bridges":[{"name":"Custom escrow"}]}}],"daTracking":[{"type":"ethereum","daLayer":"ethereum","sinceBlock":19634330,"inbox":"0x3A75346f81302aAc0333FB5DCDD407e12A6CfA83","sequencers":["0x08F9F14fF43E112B18c96f0986F28Cb1878f1D11"]}],"trackedTxs":[{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"transfer","from":"0x08F9F14fF43E112B18c96f0986F28Cb1878f1D11","to":"0x3A75346f81302aAc0333FB5DCDD407e12A6CfA83","sinceTimestamp":1712861989}},{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0x96123dbFC3253185B594c6a7472EE5A21E9B1079","selector":"0x82ecf2f6","functionSignature":"function create(uint32 _gameType, bytes32 _rootClaim, bytes _extraData) payable returns (address proxy_)","sinceTimestamp":1712861989}}]},"ecosystemInfo":{"id":"superchain","isPartOfSuperchain":true},"technology":{"dataAvailability":{"name":"All data required for proofs is published on chain","description":"All the data that is used to construct the system state is published on chain in the form of cheap blobs or calldata. This ensures that it will be available for enough time.","risks":[],"references":[{"title":"Derivation: Batch submission - OP Mainnet specs","url":"https://github.com/ethereum-optimism/specs/blob/main/specs/protocol/derivation.md#batch-submission"},{"title":"BatchInbox - address","url":"https://etherscan.io/address/0x3A75346f81302aAc0333FB5DCDD407e12A6CfA83#code"},{"title":"OptimismPortal2.sol - source code, depositTransaction function","url":"https://etherscan.io/address/0xB250566074B3c0f1B109A531A83f3d9B1a579273#code"}]},"operator":{"name":"The system has a centralized operator","description":"The operator is the only entity that can propose blocks. A live and trustworthy operator is vital to the health of the system.","risks":[{"category":"MEV can be extracted if","text":"the operator exploits their centralized position and frontruns user transactions."}],"references":[]},"forceTransactions":{"name":"Users can force any transaction","description":"Because the state of the system is based on transactions submitted on the underlying host chain and anyone can submit their transactions there it allows the users to circumvent censorship by interacting with the smart contract on the host chain directly.","risks":[],"references":[{"title":"Sequencing Window - OP Mainnet Specs","url":"https://github.com/ethereum-optimism/optimism/blob/51eeb76efeb32b3df3e978f311188aa29f5e3e94/specs/glossary.md#sequencing-window"},{"title":"OptimismPortal2.sol - source code, depositTransaction function","url":"https://etherscan.io/address/0xB250566074B3c0f1B109A531A83f3d9B1a579273#code"}]},"exitMechanisms":[{"name":"Regular exits","description":"The user initiates the withdrawal by submitting a regular transaction on this chain. When a state root containing such transaction is settled, the funds become available for withdrawal on L1 after 1d. Withdrawal inclusion can be proven before state root settlement, but a 1d period has to pass before it becomes actionable. The process of state root settlement takes a challenge period of at least 3d to complete. Finally the user submits an L1 transaction to claim the funds. This transaction requires a merkle proof.","risks":[],"references":[{"title":"OptimismPortal2.sol - Etherscan source code, proveWithdrawalTransaction function","url":"https://etherscan.io/address/0xB250566074B3c0f1B109A531A83f3d9B1a579273#code"},{"title":"OptimismPortal2.sol - Etherscan source code, finalizeWithdrawalTransaction function","url":"https://etherscan.io/address/0xB250566074B3c0f1B109A531A83f3d9B1a579273#code"}]},{"name":"Forced messaging","description":"If the user experiences censorship from the operator with regular L2->L1 messaging they can submit their messages directly on L1. The system is then obliged to service this request or halt all messages, including forced withdrawals from L1 and regular messages initiated on L2. Once the force operation is submitted and if the request is serviced, the operation follows the flow of a regular message.","risks":[],"references":[{"title":"Forced withdrawal from an OP Stack blockchain","url":"https://docs.optimism.io/stack/transactions/forced-transaction"}]}],"otherConsiderations":[{"name":"EVM compatible smart contracts are supported","description":"OP stack chains are pursuing the EVM Equivalence model. No changes to smart contracts are required regardless of the language they are written in, i.e. anything deployed on L1 can be deployed on L2.","risks":[],"references":[{"title":"Introducing EVM Equivalence","url":"https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306"}]}]},"permissions":{"ethereum":{"roles":[{"id":"Guardian","name":"Guardian","description":"Allowed to pause withdrawals. In op stack systems with a proof system, the Guardian can also blacklist dispute games and set the respected game type (permissioned / permissionless).","accounts":[{"address":"eth:0xC91482A96e9c2A104d9298D1980eCCf8C4dc764E","type":"Contract","isVerified":true,"name":"Bob Multisig 1","url":"#Bob Multisig 1"}],"chain":"ethereum","discoveryDrivenData":true},{"id":"Sequencer","name":"Sequencer","description":"Allowed to commit transactions from the current layer to the host chain.","accounts":[{"address":"eth:0x08F9F14fF43E112B18c96f0986F28Cb1878f1D11","type":"EOA","isVerified":true,"name":"EOA 1","url":"#EOA-1"}],"chain":"ethereum","discoveryDrivenData":true}],"actors":[{"id":"Bob Multisig 1","name":"Bob Multisig 1","description":"A Multisig with 4/6 threshold. \n* Can upgrade **with no delay**\n  * DelayedWETH [via: ProxyAdmin]\n  * L1StandardBridge [via: ProxyAdmin]\n  * OptimismMintableERC20Factory [via: ProxyAdmin]\n  * L1ERC721Bridge [via: ProxyAdmin]\n  * OptimismPortal2 [via: ProxyAdmin]\n  * DisputeGameFactory [via: ProxyAdmin]\n  * SystemConfig [via: ProxyAdmin]\n  * L1CrossDomainMessenger [via: ProxyAdmin]\n  * SuperchainConfig [via: ProxyAdmin]\n  * AnchorStateRegistry [via: ProxyAdmin]\n* Can interact with DelayedWETH\n  * can pull funds from the contract in case of emergency \n* Can interact with SystemConfig\n  * it can update the preconfer address, the batch submitter (Sequencer) address and the gas configuration of the system \n* Can interact with AddressManager\n  * set and change address mappings [via: ProxyAdmin]\n* A Guardian - acting directly","accounts":[{"address":"eth:0xC91482A96e9c2A104d9298D1980eCCf8C4dc764E","type":"Contract","isVerified":true,"name":"0xC914…764E","url":"https://etherscan.io/address/0xC91482A96e9c2A104d9298D1980eCCf8C4dc764E"}],"chain":"ethereum","references":[],"participants":[{"address":"eth:0x32B8325b7f12ADB06763D6D04c951AC94e36C3D7","type":"EOA","isVerified":true,"name":"0x32B8…C3D7","url":"https://etherscan.io/address/0x32B8325b7f12ADB06763D6D04c951AC94e36C3D7"},{"address":"eth:0x3C30D693b23F77d55e14b8e0CFB6C00075ff93aB","type":"EOA","isVerified":true,"name":"0x3C30…93aB","url":"https://etherscan.io/address/0x3C30D693b23F77d55e14b8e0CFB6C00075ff93aB"},{"address":"eth:0xFB771f2640Dfd37B18332a84817B2a6e994f5BF6","type":"EOA","isVerified":true,"name":"0xFB77…5BF6","url":"https://etherscan.io/address/0xFB771f2640Dfd37B18332a84817B2a6e994f5BF6"},{"address":"eth:0x81175155D85377C337d92f1FA52Da166C3A4E7Ac","type":"EOA","isVerified":true,"name":"0x8117…E7Ac","url":"https://etherscan.io/address/0x81175155D85377C337d92f1FA52Da166C3A4E7Ac"},{"address":"eth:0x3840f487A17A41100DD1Bf0946c34f132a57Fd5f","type":"EOA","isVerified":true,"name":"0x3840…Fd5f","url":"https://etherscan.io/address/0x3840f487A17A41100DD1Bf0946c34f132a57Fd5f"},{"address":"eth:0xA0737fea60F0601A192E3d2c98865A883ab0bda2","type":"EOA","isVerified":true,"name":"0xA073…bda2","url":"https://etherscan.io/address/0xA0737fea60F0601A192E3d2c98865A883ab0bda2"}],"discoveryDrivenData":true},{"id":"EOA-1","name":"EOA 1","accounts":[{"address":"eth:0x08F9F14fF43E112B18c96f0986F28Cb1878f1D11","type":"EOA","isVerified":true,"name":"0x08F9…1D11","url":"https://etherscan.io/address/0x08F9F14fF43E112B18c96f0986F28Cb1878f1D11"}],"chain":"ethereum","description":"* A Sequencer - acting directly","discoveryDrivenData":true},{"id":"EOA-2","name":"EOA 2","accounts":[{"address":"eth:0x7cB1022D30b9860C36b243E7B181A1d46f618C69","type":"EOA","isVerified":true,"name":"0x7cB1…8C69","url":"https://etherscan.io/address/0x7cB1022D30b9860C36b243E7B181A1d46f618C69"}],"chain":"ethereum","description":"* Can interact with KailuaTreasury\n  * propose new state roots before anyone else, giving a first-mover advantage on the optimistic clock ","discoveryDrivenData":true},{"id":"EOA-3","name":"EOA 3","accounts":[{"address":"eth:0xF616A4f81857CFEe54A4A049Ec187172574bd412","type":"EOA","isVerified":true,"name":"0xF616…d412","url":"https://etherscan.io/address/0xF616A4f81857CFEe54A4A049Ec187172574bd412"}],"chain":"ethereum","description":"* Can interact with TimelockController\n  * cancel queued transactions \n  * execute transactions that are ready \n  * manage all access control roles **with 3d delay** [via: TimelockController with 3d delay]\n  * propose transactions \n* Can interact with RiscZeroVerifierEmergencyStop\n  * pause the verifier \n* Can interact with RiscZeroVerifierEmergencyStop\n  * pause the verifier \n* Can interact with RiscZeroVerifierRouter\n  * add/remove verifiers and the selectors they are mapped to **with 3d delay** [via: TimelockController with 3d delay]\n* Can interact with RiscZeroVerifierEmergencyStop\n  * pause the verifier ","discoveryDrivenData":true}]}},"contracts":{"addresses":{"ethereum":[{"name":"OptimismPortal2","isVerified":true,"address":"eth:0x8AdeE124447435fE03e3CD24dF3f4cAE32E65a3E","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x0d9f416260598313Be6FDf6B010f2FbC34957Cd0"],"implementations":["eth:0xB250566074B3c0f1B109A531A83f3d9B1a579273"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1712862419,"transactionHash":"0x86a85eda6fa19f4bcfe42bfe648335d93dde76ba0c31e0582608eefe04dd29b5","implementations":["eth:0x994e3B01D130944a3E67BFd3B8Fc73069b959FEc"]},{"timestamp":1752758927,"transactionHash":"0x1d93c182527e3c738f03ffb7baf66bbddfb29e1e60bbd9f5457c7de1a90eaaf1","implementations":["eth:0x6322C2f2D6a4305Fc033754d486A5A067Ee5F9b1"]},{"timestamp":1752758927,"transactionHash":"0x1d93c182527e3c738f03ffb7baf66bbddfb29e1e60bbd9f5457c7de1a90eaaf1","implementations":["eth:0x2D778797049FE9259d947D1ED8e5442226dFB589"]},{"timestamp":1752761915,"transactionHash":"0x5fc7da71db9e1541e3eeeedbc3dd3058bf01b5d03b10eee95eaa5668e9efd74e","implementations":["eth:0xd81f43eDBCAcb4c29a9bA38a13Ee5d79278270cC"]},{"timestamp":1752761915,"transactionHash":"0x5fc7da71db9e1541e3eeeedbc3dd3058bf01b5d03b10eee95eaa5668e9efd74e","implementations":["eth:0xe2F826324b2faf99E513D16D266c3F80aE87832B"]},{"timestamp":1752761915,"transactionHash":"0x5fc7da71db9e1541e3eeeedbc3dd3058bf01b5d03b10eee95eaa5668e9efd74e","implementations":["eth:0x2D7e764a0D9919e16983a46595CfA81fc34fa7Cd"]},{"timestamp":1752761915,"transactionHash":"0x5fc7da71db9e1541e3eeeedbc3dd3058bf01b5d03b10eee95eaa5668e9efd74e","implementations":["eth:0xB443Da3e07052204A02d630a8933dAc05a0d6fB4"]},{"timestamp":1753214303,"transactionHash":"0xa7881069c54f1028d42b83406ac5a768154f8ff34ad37ec7641b4d45766e77c3","implementations":["eth:0xB250566074B3c0f1B109A531A83f3d9B1a579273"]}],"description":"The OptimismPortal contract is the main entry point to deposit funds from L1 to L2. It also allows to prove and finalize withdrawals. It specifies which game type can be used for withdrawals, which currently is the KailuaGame.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Bob Multisig 1","upgradableBy":[{"name":"Bob Multisig 1","delay":"no"}],"discoveryDrivenData":true},{"name":"DisputeGameFactory","isVerified":true,"address":"eth:0x96123dbFC3253185B594c6a7472EE5A21E9B1079","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x0d9f416260598313Be6FDf6B010f2FbC34957Cd0"],"implementations":["eth:0x4bbA758F006Ef09402eF31724203F316ab74e4a0"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1752686063,"transactionHash":"0x3e95a733128abc9cdbd115a77debd0838071a349ac5312955eceda05f647cd6e","implementations":["eth:0xc641A33cab81C559F2bd4b21EA34C290E2440C2B"]},{"timestamp":1752761915,"transactionHash":"0x5fc7da71db9e1541e3eeeedbc3dd3058bf01b5d03b10eee95eaa5668e9efd74e","implementations":["eth:0x4bbA758F006Ef09402eF31724203F316ab74e4a0"]}],"description":"The dispute game factory allows the creation of dispute games, used to propose state roots and eventually challenge them.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Bob Multisig 1","upgradableBy":[{"name":"Bob Multisig 1","delay":"no"}],"discoveryDrivenData":true},{"name":"SystemConfig","isVerified":true,"address":"eth:0xACB886b75D76d1c8d9248cFdDfA09b70C71c5393","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x0d9f416260598313Be6FDf6B010f2FbC34957Cd0"],"implementations":["eth:0x340f923E5c7cbB2171146f64169EC9d5a9FfE647"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1712862287,"transactionHash":"0x0acb268e79a76416f50ff0418ab696ada4497fc8ff33747d5edc352ef1d5d1db","implementations":["eth:0xaa0A1EfD35d6578ea6B5704dbc2c40B36A55B590"]},{"timestamp":1752758927,"transactionHash":"0x1d93c182527e3c738f03ffb7baf66bbddfb29e1e60bbd9f5457c7de1a90eaaf1","implementations":["eth:0x6322C2f2D6a4305Fc033754d486A5A067Ee5F9b1"]},{"timestamp":1752758927,"transactionHash":"0x1d93c182527e3c738f03ffb7baf66bbddfb29e1e60bbd9f5457c7de1a90eaaf1","implementations":["eth:0xba2492e52F45651B60B8B38d4Ea5E2390C64Ffb1"]},{"timestamp":1752759527,"transactionHash":"0xfdd53dea057419dee4a1f773029c57925865a0db916df2eddf1dbc988e6f3d56","implementations":["eth:0xAB9d6cB7A427c0765163A7f45BB91cAfe5f2D375"]},{"timestamp":1752761915,"transactionHash":"0x5fc7da71db9e1541e3eeeedbc3dd3058bf01b5d03b10eee95eaa5668e9efd74e","implementations":["eth:0xd81f43eDBCAcb4c29a9bA38a13Ee5d79278270cC"]},{"timestamp":1752761915,"transactionHash":"0x5fc7da71db9e1541e3eeeedbc3dd3058bf01b5d03b10eee95eaa5668e9efd74e","implementations":["eth:0xAB9d6cB7A427c0765163A7f45BB91cAfe5f2D375"]},{"timestamp":1752761915,"transactionHash":"0x5fc7da71db9e1541e3eeeedbc3dd3058bf01b5d03b10eee95eaa5668e9efd74e","implementations":["eth:0x760C48C62A85045A6B69f07F4a9f22868659CbCc"]},{"timestamp":1752761915,"transactionHash":"0x5fc7da71db9e1541e3eeeedbc3dd3058bf01b5d03b10eee95eaa5668e9efd74e","implementations":["eth:0x340f923E5c7cbB2171146f64169EC9d5a9FfE647"]}],"description":"Contains configuration parameters such as the Sequencer address, gas limit on this chain and the unsafe block signer address.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Bob Multisig 1\n  * **batcherHash**: EOA 1\n  * **owner**: Bob Multisig 1","upgradableBy":[{"name":"Bob Multisig 1","delay":"no"}],"discoveryDrivenData":true},{"name":"SuperchainConfig","isVerified":true,"address":"eth:0xE925205ad05D8d612Ac205C4941CCd61Fc965C46","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0xa70ddfb3e00fCFD083E64B200FE867104f703E1c"],"implementations":["eth:0x4da82a327773965b8d4D85Fa3dB8249b387458E7"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1752682883,"transactionHash":"0x4fa702e7eff31a313f049d76f06b704a40c7c520d09ccbf8f9373ca25a6ec37e","implementations":["eth:0x4da82a327773965b8d4D85Fa3dB8249b387458E7"]}],"description":"This is NOT the shared SuperchainConfig contract of the OP stack Superchain but rather a local fork. It manages the `PAUSED_SLOT`, a boolean value indicating whether the local chain is paused, and `GUARDIAN_SLOT`, the address of the guardian which can pause and unpause the system.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Bob Multisig 1\n  * **guardian**: Bob Multisig 1","upgradableBy":[{"name":"Bob Multisig 1","delay":"no"}],"discoveryDrivenData":true},{"name":"L1StandardBridge","isVerified":true,"address":"eth:0x3F6cE1b36e5120BBc59D0cFe8A5aC8b6464ac1f7","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x0d9f416260598313Be6FDf6B010f2FbC34957Cd0"],"implementations":["eth:0x0b09ba359A106C9ea3b181CBc5F394570c7d2a7A"]},"chain":"ethereum","pastUpgrades":[],"description":"The main entry point to deposit ERC20 tokens from host chain to this chain.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Bob Multisig 1","upgradableBy":[{"name":"Bob Multisig 1","delay":"no"}],"discoveryDrivenData":true},{"name":"L1ERC721Bridge","isVerified":true,"address":"eth:0x5fF93263D5181b2A826f8c51d54BC0da2d20D50a","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x0d9f416260598313Be6FDf6B010f2FbC34957Cd0"],"implementations":["eth:0x7aE1d3BD877a4C5CA257404ce26BE93A02C98013"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1712862323,"transactionHash":"0x4fca0abc9070a610b427308a8db3834aa45a425d87a261c2331eb633974de603","implementations":["eth:0xA67fc05D295d2Be6bC4cBfad4f880c1c58734212"]},{"timestamp":1752758927,"transactionHash":"0x1d93c182527e3c738f03ffb7baf66bbddfb29e1e60bbd9f5457c7de1a90eaaf1","implementations":["eth:0x6322C2f2D6a4305Fc033754d486A5A067Ee5F9b1"]},{"timestamp":1752758927,"transactionHash":"0x1d93c182527e3c738f03ffb7baf66bbddfb29e1e60bbd9f5457c7de1a90eaaf1","implementations":["eth:0xAE2AF01232a6c4a4d3012C5eC5b1b35059caF10d"]},{"timestamp":1752759527,"transactionHash":"0xfdd53dea057419dee4a1f773029c57925865a0db916df2eddf1dbc988e6f3d56","implementations":["eth:0xd81f43eDBCAcb4c29a9bA38a13Ee5d79278270cC"]},{"timestamp":1752759527,"transactionHash":"0xfdd53dea057419dee4a1f773029c57925865a0db916df2eddf1dbc988e6f3d56","implementations":["eth:0xAE2AF01232a6c4a4d3012C5eC5b1b35059caF10d"]},{"timestamp":1752761915,"transactionHash":"0x5fc7da71db9e1541e3eeeedbc3dd3058bf01b5d03b10eee95eaa5668e9efd74e","implementations":["eth:0x276d3730f219f7ec22274f7263180b8452B46d47"]},{"timestamp":1752761915,"transactionHash":"0x5fc7da71db9e1541e3eeeedbc3dd3058bf01b5d03b10eee95eaa5668e9efd74e","implementations":["eth:0x7aE1d3BD877a4C5CA257404ce26BE93A02C98013"]}],"description":"Used to bridge ERC-721 tokens from host chain to this chain.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Bob Multisig 1","upgradableBy":[{"name":"Bob Multisig 1","delay":"no"}],"discoveryDrivenData":true},{"name":"L1CrossDomainMessenger","isVerified":true,"address":"eth:0xE3d981643b806FB8030CDB677D6E60892E547EdA","upgradeability":{"proxyType":"resolved delegate proxy","admins":["eth:0x0d9f416260598313Be6FDf6B010f2FbC34957Cd0"],"implementations":["eth:0x5D5a095665886119693F0B41d8DFeE78da033e8B"],"immutable":false},"chain":"ethereum","pastUpgrades":[{"timestamp":1712862131,"transactionHash":"0x49ca0455d3479f3dec361e05c5b47ac8634c14ca765ad8770401421a038eb39d","implementations":["eth:0xE3d981643b806FB8030CDB677D6E60892E547EdA"]},{"timestamp":1712862371,"transactionHash":"0x352fc46bb0f6c989aeb3dcb8490cd8d4a74bcfe919f9136b60dcfcbd9405a6a4","implementations":["eth:0x237853621998a33Fa5B9B820592F4c6f4c158c12"]},{"timestamp":1752758927,"transactionHash":"0x1d93c182527e3c738f03ffb7baf66bbddfb29e1e60bbd9f5457c7de1a90eaaf1","implementations":["eth:0x6322C2f2D6a4305Fc033754d486A5A067Ee5F9b1"]},{"timestamp":1752758927,"transactionHash":"0x1d93c182527e3c738f03ffb7baf66bbddfb29e1e60bbd9f5457c7de1a90eaaf1","implementations":["eth:0xD3494713A5cfaD3F5359379DfA074E2Ac8C6Fd65"]},{"timestamp":1752759527,"transactionHash":"0xfdd53dea057419dee4a1f773029c57925865a0db916df2eddf1dbc988e6f3d56","implementations":["eth:0xd81f43eDBCAcb4c29a9bA38a13Ee5d79278270cC"]},{"timestamp":1752759527,"transactionHash":"0xfdd53dea057419dee4a1f773029c57925865a0db916df2eddf1dbc988e6f3d56","implementations":["eth:0xD3494713A5cfaD3F5359379DfA074E2Ac8C6Fd65"]},{"timestamp":1752761915,"transactionHash":"0x5fc7da71db9e1541e3eeeedbc3dd3058bf01b5d03b10eee95eaa5668e9efd74e","implementations":["eth:0x3eA6084748ED1b2A9B5D4426181F1ad8C93F6231"]},{"timestamp":1752761915,"transactionHash":"0x5fc7da71db9e1541e3eeeedbc3dd3058bf01b5d03b10eee95eaa5668e9efd74e","implementations":["eth:0x5D5a095665886119693F0B41d8DFeE78da033e8B"]}],"description":"Sends messages from host chain to this chain, and relays messages back onto host chain. In the event that a message sent from host chain to this chain is rejected for exceeding this chain's epoch gas limit, it can be resubmitted via this contract's replay function.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Bob Multisig 1","upgradableBy":[{"name":"Bob Multisig 1","delay":"no"}],"discoveryDrivenData":true},{"name":"L1ERC20TokenBridge","isVerified":true,"address":"eth:0x091dF5E1284E49fA682407096aD34cfD42B95B72","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c"],"implementations":["eth:0xB531445401926029B1647669cFAc8b4e5d8C7777"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1713786239,"transactionHash":"0x5c9f70728478f27141b59caee9f7e5e113aa710ae69566331419b511d6e4638b","implementations":["eth:0xB531445401926029B1647669cFAc8b4e5d8C7777"]}],"description":"Escrow for custom external tokens that use the canonical bridge for messaging but are governed externally.\n","discoveryDrivenData":true},{"name":"TimelockController","isVerified":true,"address":"eth:0x0b144E07A0826182B6b59788c34b32Bfa86Fb711","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"A timelock with access control. The current minimum delay is 3d.\n* Roles:\n  * **canceller**: EOA 3\n  * **defaultAdmin**: TimelockController; ultimately EOA 3\n  * **executor**: EOA 3\n  * **proposer**: EOA 3","discoveryDrivenData":true},{"name":"ProxyAdmin","isVerified":true,"address":"eth:0x0d9f416260598313Be6FDf6B010f2FbC34957Cd0","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"* Roles:\n  * **owner**: Bob Multisig 1","discoveryDrivenData":true},{"name":"KailuaTreasury","isVerified":true,"address":"eth:0x0e4152204995877DF34BD26d6dab78baf9393Ae2","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Entrypoint for state root proposals. Manages bonds (currently 0.5 ETH) and tournaments for the OP Kailua state validation system, wrapping the OP stack native DisputeGameFactory. The current vanguard advantage is defined here as 1mo.\n* Roles:\n  * **vanguard**: EOA 2","discoveryDrivenData":true},{"name":"RiscZeroVerifierEmergencyStop","isVerified":true,"address":"eth:0x1efDd13f831ceeEa14940806705A53D3211CD698","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"A verifier wrapper for the RiscZeroGroth16Verifier that allows pausing (emergency stop) the verifier by its owner.\n* Roles:\n  * **owner**: EOA 3","discoveryDrivenData":true},{"name":"PreimageOracle","isVerified":true,"address":"eth:0x1fb8cdFc6831fc866Ed9C51aF8817Da5c287aDD3","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"The PreimageOracle contract is used to load the required data from L1 for a dispute game.\n","discoveryDrivenData":true},{"name":"RiscZeroGroth16Verifier","isVerified":true,"address":"eth:0x2a098988600d87650Fb061FfAff08B97149Fa84D","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Verifier contract for RISC Zero Groth16 proofs (version 3.0.0).\n","discoveryDrivenData":true},{"name":"DelayedWETH","isVerified":true,"address":"eth:0x3a1D54496cf461fFc96d3b1a8A0B43B091ea3c13","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x0d9f416260598313Be6FDf6B010f2FbC34957Cd0"],"implementations":["eth:0x5e40B9231B86984b5150507046e354dbFbeD3d9e"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1752686099,"transactionHash":"0xcbfb1843e8c6400154f464bfec34c6d89709c3beb847babb1076f7787ea7a116","implementations":["eth:0x71e966Ae981d1ce531a7b6d23DC0f27B38409087"]},{"timestamp":1752761915,"transactionHash":"0x5fc7da71db9e1541e3eeeedbc3dd3058bf01b5d03b10eee95eaa5668e9efd74e","implementations":["eth:0x5e40B9231B86984b5150507046e354dbFbeD3d9e"]}],"description":"Contract designed to hold the bonded ETH for each game. It is designed as a wrapper around WETH to allow an owner to function as a backstop if a game would incorrectly distribute funds.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Bob Multisig 1\n  * **owner**: Bob Multisig 1","upgradableBy":[{"name":"Bob Multisig 1","delay":"no"}],"discoveryDrivenData":true},{"name":"RiscZeroSetVerifier","isVerified":true,"address":"eth:0x5005aBa3DFf7C940fcc1e48DccCAD611a80eEB85","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Set verifier contract for RISC Zero proofs (version 0.9.0). It allows verifying a whole set of proofs identified with a Merkle root at once, afterwards each individual proof could be efficiently verified just by checking Merkle inclusion against the verified root.\n","discoveryDrivenData":true},{"name":"OptimismMintableERC20Factory","isVerified":true,"address":"eth:0x5557408ab14013ce9Dbb300dE0D87D386BB09cb6","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x0d9f416260598313Be6FDf6B010f2FbC34957Cd0"],"implementations":["eth:0x5493f4677A186f64805fe7317D6993ba4863988F"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1712862335,"transactionHash":"0xd74512bff91a91df00074f49532b5b49055c084c7adfece6155d7300013a0eac","implementations":["eth:0x0640c9377a4fAC00225097EACbB0295f4D5fbd76"]},{"timestamp":1752758927,"transactionHash":"0x1d93c182527e3c738f03ffb7baf66bbddfb29e1e60bbd9f5457c7de1a90eaaf1","implementations":["eth:0x6322C2f2D6a4305Fc033754d486A5A067Ee5F9b1"]},{"timestamp":1752758927,"transactionHash":"0x1d93c182527e3c738f03ffb7baf66bbddfb29e1e60bbd9f5457c7de1a90eaaf1","implementations":["eth:0xE01efbeb1089D1d1dB9c6c8b135C934C0734c846"]},{"timestamp":1752759527,"transactionHash":"0xfdd53dea057419dee4a1f773029c57925865a0db916df2eddf1dbc988e6f3d56","implementations":["eth:0xE01efbeb1089D1d1dB9c6c8b135C934C0734c846"]},{"timestamp":1752761915,"transactionHash":"0x5fc7da71db9e1541e3eeeedbc3dd3058bf01b5d03b10eee95eaa5668e9efd74e","implementations":["eth:0x5493f4677A186f64805fe7317D6993ba4863988F"]}],"description":"A helper contract that generates OptimismMintableERC20 contracts on the network it's deployed to. OptimismMintableERC20 is a standard extension of the base ERC20 token contract designed to allow the L1StandardBridge contracts to mint and burn tokens. This makes it possible to use an OptimismMintableERC20 as this chain's representation of a token on the host chain, or vice-versa.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Bob Multisig 1","upgradableBy":[{"name":"Bob Multisig 1","delay":"no"}],"discoveryDrivenData":true},{"name":"RiscZeroVerifierEmergencyStop","isVerified":true,"address":"eth:0x844D5f01161E3559d36f23d0Aa9E9620949aF782","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"A verifier wrapper for the RiscZeroSetVerifier that allows pausing (emergency stop) the verifier by its owner.\n* Roles:\n  * **owner**: EOA 3","discoveryDrivenData":true},{"name":"RiscZeroVerifierRouter","isVerified":true,"address":"eth:0x8EaB2D97Dfce405A1692a21b3ff3A172d593D319","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"A router proxy that routes to verifiers based on selectors. The mapping can be changed by a permissioned owner (TimelockController).\n* Roles:\n  * **owner**: TimelockController; ultimately EOA 3","discoveryDrivenData":true},{"name":"KailuaGame","isVerified":true,"address":"eth:0x9b9f9CD7A6BfCB55c18bfA35392F409F98B35B44","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Implementation of the KailuaGame with type 1337. Based on this implementation, new KailuaGames are created with every new state root proposal.\n","discoveryDrivenData":true},{"name":"RiscZeroVerifierEmergencyStop","isVerified":true,"address":"eth:0x9F9994Eb4Cb5200198FEfb470f8b50301662e696","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"A verifier wrapper for the RiscZeroGroth16Verifier that allows pausing (emergency stop) the verifier by its owner.\n* Roles:\n  * **owner**: EOA 3","discoveryDrivenData":true},{"name":"ProxyAdmin","isVerified":true,"address":"eth:0xa70ddfb3e00fCFD083E64B200FE867104f703E1c","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"* Roles:\n  * **owner**: Bob Multisig 1","discoveryDrivenData":true},{"name":"RiscZeroGroth16Verifier","isVerified":true,"address":"eth:0xafB31f5b70623CDF4b20Ada3f7230916A5A79df9","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Verifier contract for RISC Zero Groth16 proofs (version 2.2.0).\n","discoveryDrivenData":true},{"name":"PermissionedDisputeGame","isVerified":true,"address":"eth:0xe3BD00F57B44E7aa4A6C212878427c85D638702A","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Same as FaultDisputeGame, but only two permissioned addresses are designated as proposer and challenger.\n","discoveryDrivenData":true},{"name":"AnchorStateRegistry","isVerified":true,"address":"eth:0xeBA14d52F1b19cA65455E5ECaB72D2FfD9e43fEF","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x0d9f416260598313Be6FDf6B010f2FbC34957Cd0"],"implementations":["eth:0x7b465370BB7A333f99edd19599EB7Fb1c2D3F8D2"]},"chain":"ethereum","pastUpgrades":[{"timestamp":1752761915,"transactionHash":"0x5fc7da71db9e1541e3eeeedbc3dd3058bf01b5d03b10eee95eaa5668e9efd74e","implementations":["eth:0x7b465370BB7A333f99edd19599EB7Fb1c2D3F8D2"]}],"description":"Contains the latest confirmed state root that can be used as a starting point in a dispute game.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Bob Multisig 1","upgradableBy":[{"name":"Bob Multisig 1","delay":"no"}],"discoveryDrivenData":true},{"name":"MIPS","isVerified":true,"address":"eth:0xF027F4A985560fb13324e943edf55ad6F1d15Dc1","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"The MIPS contract is used to execute the final step of the dispute game which objectively determines the winner of the dispute.\n","discoveryDrivenData":true}]},"risks":[{"category":"Funds can be stolen if","text":"a contract receives a malicious code upgrade. There is no delay on code upgrades.","isCritical":true}],"zkProgramHashes":[{"title":"Kailua fault proof program","description":"Program that executes OP Kona client to derive blocks and generate fault or validity proofs, is a part of ZK non-interactive fault proof system.","proverSystemProject":"risc0","verificationStatus":"notVerified","hash":"0x7ce98c36408e86dac21fc16af301740d07a849be0a80529debcb0797fd66f5e3"},{"title":"Set builder program","description":"Recursively verifies a Merkle tree of zk proofs at once, identified by a Merkle Mountain Range root.","proverSystemProject":"risc0","verificationStatus":"notVerified","hash":"0x70909b25db0db00f1d4b4016aeb876f53568a3e5a8e6397cb562d79947a02cc9"}]},"milestones":[{"title":"Proof System Intervention","url":"https://app.blocksec.com/explorer/tx/eth/0xa065f636adfc7cdf08007ee81303028fa4daf291279a75a5ae1d3a975acce806?line=7","date":"2025-07-24T00:00:00Z","description":"A state root proposal is manually resolved after changing the finalization config.","type":"incident"},{"title":"OP Kailua Upgrade","url":"https://x.com/build_on_bob/status/1948369793796689925","date":"2025-07-17T00:00:00Z","description":"BOB returns to the rollup section by using a hybrid zk fault proof system.","type":"general"},{"title":"Phase 1: Optimistic BOB","url":"https://x.com/build_on_bob/status/1763642185101004914","date":"2024-05-01T00:00:00Z","description":"BOB bootstrapping as an Optimistic Rollup on Ethereum.","type":"general"}],"badges":[{"id":"Conduit","type":"RaaS","name":"Conduit","description":"This project was deployed via the rollup-as-a-service provider Conduit","action":{"type":"scalingFilter","id":"raas","value":"Conduit"}},{"id":"OPKailua","type":"Stack","name":"Built on the OP Kailua stack","description":"The project is built on the OP Kailua stack"},{"id":"Superchain","type":"Infra","name":"Part of the Superchain","description":"The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config","action":{"type":"scalingFilter","id":"infrastructure","value":"Superchain"}},{"id":"EVM","type":"VM","name":"EVM","description":"This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language","action":{"type":"scalingFilter","id":"vm","value":"EVM"}},{"id":"EthereumBlobs","type":"DA","name":"Ethereum with blobs","description":"This project is posting its data to Ethereum as blobs","action":{"type":"publicDaHighlight","slug":"ethereum"}}],"stateValidation":{"categories":[{"title":"State root proposals","description":"Proposers submit state roots as children of any (possibly unresolved) previous state root proposal, by calling the `propose()` function in the KailuaTreasury. A parent state root can have multiple conflicting children, composing a tournament. Each proposer requires to lock a bond, currently set to 0.5 ETH, that can be slashed if any proposal made by them is proven incorrect via a fault proof or a conflicting validity proof. The bond can be withdrawn once the proposer has no more pending proposals that need to be resolved and was not eliminated.\n\nProposals consist of a state root and a reference to their parent and implicitly challenge any sibling proposals who have the same parent. A proposal asserts that the proposed state root constitutes a valid state transition from the parent's state root. To offer efficient zk fault proofs, each proposal must include 3600 intermediate state commitments, each spanning 6 L2 blocks. \n\nProposals target sequential tournament epochs of currently 3600 * 6 L2 blocks. A tournament with a resolved parent tournament, a single child- and no conflicting sibling proposals can be resolved after 3d. \n\nThe **Vanguard** is a privileged actor who can always make the first child proposal on a parent state root. They can, in the worst case, delay each tournament for up to 1mo by not making this first proposal. Sibling proposals made after the Vanguard's initial one or after the 1mo vanguardAdvantage in each tournament are permissionless.","references":[{"title":"'Sequencing' - Kailua Docs","url":"https://risc0.github.io/kailua/design.html#sequencing"},{"title":"Vanguard - Kailua Docs","url":"https://risc0.github.io/kailua/parameters.html#vanguard-advantage"}]},{"title":"Challenges","description":"\nAny conflicting sibling proposals within a tournament that are made within the 3d challenge period of a proposal they are challenging, delay resolving the tournament until sufficient ZK proofs are published to leave one single tournament survivor.\n\nIn the tree of proposed state roots, each parent node can have multiple children. These children are indirectly challenging each other in a tournament, which can only be resolved if but a single child survives. A state root can be resolved if it is **the only remaining proposal** due to any combination of the following elimination methods: \n1. the proposal's challenge period of 3d has ended before a conflicting proposal was made\n2. the proposal is proven correct with a full validity proof (invalidates all conflicting proposals)\n3. a conflicting sibling proposal is proven faulty\n\nProving any of the 3600 intermediate state commitments in a proposal faulty invalidates the entire proposal. Proving a proposal valid invalidates all conflicting siblings. Pruning of a tournament's children happens strictly chronologically, which guarantees that the first faulty proposal of a given proposer is always pruned first. When pruned, an invalid proposal leads to the elimination of its proposer, which invalidates all their subsequent proposals, slashes their bond, and disallows future proposals by the same address. A slashed bond is transferred to an address chosen by the prover who caused the slashing.\n\nA single remaining child in a tournament can be 'resolved' and will be finalized and usable for withdrawals after an execution delay of 1d (time for the Guardian to manually blacklist malicious state roots).","references":[{"url":"https://docs.boundless.network/developers/kailua/how","title":"Disputes - Kailua Docs"}]},{"title":"Validity proofs","description":"Validity proofs and fault proofs both must be accompanied by a ZK proof that ensures that the new state was derived by correctly applying a series of valid user transactions to the previous state. These proofs are then verified on Ethereum by a smart contract.\n\nThe Kailua state validation system is primarily optimistically resolved, so no validity proofs are required in the happy case. But two different zk proofs on unresolved state roots are possible and permissionless: The proveValidity() function proves a state root proposal's full validity, automatically invalidating all conflicting sibling proposals. proveOutputFault() allows any actor to eliminate a state root proposal for which they can prove that any of the 3600 intermediate state transitions in the proposal are not correct. Both are zk proofs of validity, although one is used as an efficient fault proof to invalidate a single conflicting state transition.","references":[{"url":"https://risczero.com/blog/kailua-how-it-works","title":"Risc0 Kailua Docs"},{"url":"https://github.com/risc0/risc0-ethereum/blob/main/contracts/version-management-design.md","title":"Verifier upgrade and deprecation - Kailua Docs"}],"risks":[{"category":"Funds can be stolen if","text":"the validity proof cryptography is broken or implemented incorrectly."},{"category":"Funds can be stolen if","text":"no challenger checks the published state"},{"category":"Funds can be stolen if","text":"the proposer routes proof verification through a malicious or faulty verifier by specifying an unsafe route selector."},{"category":"Funds can be frozen if","text":"a verifier needed for a given proof is paused by its permissioned owner."}]}]},"riskView":{"stateValidation":{"value":"Fraud proofs (1R, ZK)","description":"Fraud proofs allow actors watching the chain to prove that the state is incorrect. Single round proofs (1R) prove the validity of a state proposal, only requiring a single transaction to resolve. A fault proof eliminates a state proposal by proving that any intermediate state transition in the proposal results in a different state root. For either, a ZK proof is used.","sentiment":"good","orderHint":null,"executionDelay":86400,"challengeDelay":259200,"initialBond":"0.5"},"exitWindow":{"value":"None","description":"There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable.","sentiment":"bad","orderHint":-86400},"proposerFailure":{"value":"Self propose","description":"The primary whitelisted proposer has an optimistic advantage, letting them win by default if no conflicting proposals are made. This privilege is dropped after 1mo of inactivity, and anyone can leverage the source available zk prover to prove a fault or a conflicting valid proposal to win against the privileged proposer and/or supply a bond and make a counter proposal at any time.","sentiment":"good","orderHint":2592000},"dataAvailability":{"value":"Onchain","description":"All of the data needed for proof construction is published on Ethereum L1.","sentiment":"good","orderHint":null},"sequencerFailure":{"value":"Self sequence","description":"In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation.","sentiment":"good","orderHint":43200,"secondLine":"12h delay"}},"stage":{"stage":"Stage 0","missing":{"nextStage":"Stage 1","requirements":["Upgrades executed by actors with more centralized control than a Security Council provide less than 7d for users to exit if the permissioned operator is down or censoring."],"principle":"Compromising ≥75% of the Security Council should be the only way (other than bugs) for a rollup to indefinitely block an L2→L1 message (e.g. a withdrawal) or push an invalid L2→L1 message (e.g. an invalid withdrawal) wiith a <7d exit window."},"summary":[{"stage":"Stage 0","requirements":[{"satisfied":true,"description":"A complete and functional proof system is deployed."},{"satisfied":true,"description":"There are at least 5 external actors who can submit fraud proofs."},{"satisfied":true,"description":"The project calls itself a rollup."},{"satisfied":true,"description":"State roots are posted to Ethereum L1."},{"satisfied":true,"description":"Inputs for the state transition function are posted to Ethereum L1."},{"satisfied":"UnderReview","description":"A source-available node exists that can recreate the state from Ethereum L1 data. Please note that the L2BEAT team has not verified the validity of the node source code."}]},{"stage":"Stage 1","requirements":[{"satisfied":true,"description":"Users are able to exit without the help of the permissioned operators."},{"satisfied":false,"description":"Upgrades executed by actors with more centralized control than a Security Council provide less than 7d for users to exit if the permissioned operator is down or censoring."}],"principle":{"satisfied":false,"description":"Compromising ≥75% of the Security Council should be the only way (other than bugs) for a rollup to indefinitely block an L2→L1 message (e.g. a withdrawal) or push an invalid L2→L1 message (e.g. an invalid withdrawal) wiith a <7d exit window."}},{"stage":"Stage 2","requirements":[{"satisfied":true,"description":"Fraud proof submission is open to everyone."},{"satisfied":false,"description":"Upgrades unrelated to onchain provable bugs provide less than 30d to exit."},{"satisfied":false,"description":"The Security Council's actions are not confined to onchain provable bugs."}]}],"message":{"type":"underReview","text":"The requirement for available node software is under review"}},"dataAvailability":{"layer":{"value":"Ethereum","secondLine":"Blobs or Calldata","sentiment":"good","description":"The data is posted to Ethereum as calldata or blobs.","projectId":"ethereum"},"bridge":{"value":"Enshrined","sentiment":"good","description":"The validating bridge has access to all the data, as it is posted onchain.","projectId":"ethereum"},"mode":{"value":"Transaction data","secondLine":"Compressed"}},"discoveryInfo":{"isDiscoDriven":false,"permissionsDiscoDriven":false,"contractsDiscoDriven":false,"baseTimestamp":1759250312,"hasDiscoUi":false}}