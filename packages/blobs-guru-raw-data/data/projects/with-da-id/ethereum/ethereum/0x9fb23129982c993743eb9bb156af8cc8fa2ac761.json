{"type":"layer2","id":"phala","addedAt":1734388655,"capability":"universal","display":{"purposes":["Universal"],"architectureImage":"opstack-rollup-superchain-opfp-opsuccinct","stateValidationImage":"opsuccinct","stacks":["OP Stack"],"name":"Phala","slug":"phala","description":"Phala is cloud computing protocol which aims at offering developers a secure and efficient platform for deploying and managing AI-ready applications in a trusted environment (TEE).\n      Phala rollup on Ethereum leverages the Op-Succinct stack, a combination of OP stack contracts and Zero-Knowledge Proofs (ZK) using the SP1 zkVM.","links":{"websites":["https://phala.network/"],"bridges":["https://subbridge.io"],"documentation":["https://docs.phala.network/"],"explorers":["https://explorer.phala.network"],"repositories":["https://github.com/Phala-Network/"],"socialMedia":["https://x.com/PhalaNetwork","https://discord.com/invite/phala-network","https://t.me/phalanetwork","https://phala.network/blog"]},"liveness":{"warnings":{"stateUpdates":"Please note, the state is not finalized until the finalization period passes."},"explanation":"Phala is a ZK rollup that posts transaction data to the L1. For a transaction to be considered final, it has to be posted within a tx batch on L1 that links to a previous finalized batch. If the previous batch is missing, transaction finalization can be delayed up to 12h or until it gets published. The state root gets confirmed 1h after it has been posted."}},"chainConfig":{"name":"phala","chainId":2035,"explorerUrl":"https://explorer.phala.network","sinceTimestamp":1734387249,"gasTokens":["ETH"],"apis":[{"type":"blockscout","url":"https://explorer.phala.network/api"},{"type":"rpc","url":"https://rpc.phala.network/","callsPerMinute":300}]},"proofSystem":{"type":"Validity","zkCatalogId":"sp1"},"config":{"associatedTokens":["PHA"],"activityConfig":{"type":"block","startBlock":1,"adjustCount":{"type":"SubtractOne"}},"escrows":[{"address":"0x96B124841Eff4Ab1b3C1F654D60402a1405fF51A","sinceTimestamp":1734387299,"tokens":["ETH"],"contract":{"isVerified":true,"address":"eth:0x96B124841Eff4Ab1b3C1F654D60402a1405fF51A","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x198A8e0c220f29d8aF956e4c8A9E8b552096Ab2E"],"implementations":["eth:0x5B172BBfa0140285A02374EC1f5B9f25ef415514"]},"chain":"ethereum","description":"Main entry point for users depositing ETH.","upgradableBy":[{"name":"ProxyAdmin","delay":"no"}]},"chain":"ethereum","includeInTotal":true},{"address":"0x6A3444d11cA2697fe4A19AC8995ABDd8Dd301521","sinceTimestamp":1734387299,"tokens":"*","contract":{"isVerified":true,"address":"eth:0x6A3444d11cA2697fe4A19AC8995ABDd8Dd301521","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x198A8e0c220f29d8aF956e4c8A9E8b552096Ab2E"],"implementations":["eth:0x0b09ba359A106C9ea3b181CBc5F394570c7d2a7A"]},"chain":"ethereum","description":"Main entry point for users depositing ERC20 token that do not require custom gateway.","upgradableBy":[{"name":"ProxyAdmin","delay":"no"}]},"chain":"ethereum","includeInTotal":true},{"address":"0x6A3444d11cA2697fe4A19AC8995ABDd8Dd301521","sinceTimestamp":1734388655,"tokens":"*","contract":{"isVerified":true,"address":"eth:0x6A3444d11cA2697fe4A19AC8995ABDd8Dd301521","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x198A8e0c220f29d8aF956e4c8A9E8b552096Ab2E"],"implementations":["eth:0x0b09ba359A106C9ea3b181CBc5F394570c7d2a7A"]},"chain":"ethereum"},"chain":"ethereum","includeInTotal":true},{"address":"0x96B124841Eff4Ab1b3C1F654D60402a1405fF51A","sinceTimestamp":1734388655,"tokens":["ETH"],"contract":{"isVerified":true,"address":"eth:0x96B124841Eff4Ab1b3C1F654D60402a1405fF51A","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x198A8e0c220f29d8aF956e4c8A9E8b552096Ab2E"],"implementations":["eth:0x5B172BBfa0140285A02374EC1f5B9f25ef415514"]},"chain":"ethereum"},"chain":"ethereum","includeInTotal":true}],"daTracking":[{"type":"ethereum","daLayer":"ethereum","sinceBlock":21418009,"inbox":"0x5A2a0698355D06cd5c4e3872D2Bc6B9f6a89d39B","sequencers":["0x9Fb23129982c993743Eb9bB156af8CC8Fa2aC761"]}],"trackedTxs":[{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"transfer","from":"0x9Fb23129982c993743Eb9bB156af8CC8Fa2aC761","to":"0x5A2a0698355D06cd5c4e3872D2Bc6B9f6a89d39B","sinceTimestamp":1734388655}},{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0xb45440830bd8D288bB2B5B01Be303ae60fc855d8","selector":"0x9ad84880","functionSignature":"function proposeL2Output(bytes32 _outputRoot, uint256 _l2BlockNumber, uint256 _l1BlockNumber, bytes _proof)","sinceTimestamp":1734388655,"untilTimestamp":1746606971}},{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0xb45440830bd8D288bB2B5B01Be303ae60fc855d8","selector":"0x59c3e00a","functionSignature":"function proposeL2Output(bytes32 _outputRoot, uint256 _l2BlockNumber, uint256 _l1BlockNumber, bytes _proof, address _proverAddress)","sinceTimestamp":1746606971,"untilTimestamp":1757405447}},{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0xb45440830bd8D288bB2B5B01Be303ae60fc855d8","selector":"0x9aaab648","functionSignature":"function proposeL2Output(bytes32 _outputRoot, uint256 _l2BlockNumber, bytes32 _l1BlockHash, uint256 _l1BlockNumber)","sinceTimestamp":1746606971}},{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0xb45440830bd8D288bB2B5B01Be303ae60fc855d8","selector":"0xa4ee9d7b","functionSignature":"function proposeL2Output(bytes32 _configName, bytes32 _outputRoot, uint256 _l2BlockNumber, uint256 _l1BlockNumber, bytes _proof, address _proverAddress)","sinceTimestamp":1757405447}}]},"technology":{"dataAvailability":{"name":"All data required for proofs is published on chain","description":"All the data that is used to construct the system state is published on chain in the form of cheap blobs or calldata. This ensures that it will be available for enough time.","risks":[],"references":[{"title":"Derivation: Batch submission - OP Mainnet specs","url":"https://github.com/ethereum-optimism/specs/blob/main/specs/protocol/derivation.md#batch-submission"},{"title":"BatchInbox - address","url":"https://etherscan.io/address/0x5A2a0698355D06cd5c4e3872D2Bc6B9f6a89d39B#code"},{"title":"OptimismPortal2.sol - source code, depositTransaction function","url":"https://etherscan.io/address/0x5B172BBfa0140285A02374EC1f5B9f25ef415514#code"}]},"operator":{"name":"The system has a centralized operator","description":"The operator is the only entity that can propose blocks. A live and trustworthy operator is vital to the health of the system.","risks":[{"category":"MEV can be extracted if","text":"the operator exploits their centralized position and frontruns user transactions."}],"references":[]},"forceTransactions":{"name":"Users can force any transaction","description":"Because the state of the system is based on transactions submitted on the underlying host chain and anyone can submit their transactions there it allows the users to circumvent censorship by interacting with the smart contract on the host chain directly.","risks":[],"references":[{"title":"Sequencing Window - OP Mainnet Specs","url":"https://github.com/ethereum-optimism/optimism/blob/51eeb76efeb32b3df3e978f311188aa29f5e3e94/specs/glossary.md#sequencing-window"},{"title":"OptimismPortal2.sol - source code, depositTransaction function","url":"https://etherscan.io/address/0x5B172BBfa0140285A02374EC1f5B9f25ef415514#code"}]},"exitMechanisms":[{"name":"Forced messaging","description":"If the user experiences censorship from the operator with regular L2->L1 messaging they can submit their messages directly on L1. The system is then obliged to service this request or halt all messages, including forced withdrawals from L1 and regular messages initiated on L2. Once the force operation is submitted and if the request is serviced, the operation follows the flow of a regular message.","risks":[],"references":[{"title":"Forced withdrawal from an OP Stack blockchain","url":"https://docs.optimism.io/stack/transactions/forced-transaction"}]}],"otherConsiderations":[{"name":"EVM compatible smart contracts are supported","description":"OP stack chains are pursuing the EVM Equivalence model. No changes to smart contracts are required regardless of the language they are written in, i.e. anything deployed on L1 can be deployed on L2.","risks":[],"references":[{"title":"Introducing EVM Equivalence","url":"https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306"}]}]},"permissions":{"ethereum":{"roles":[{"name":"Guardian","description":"Allowed to pause withdrawals. In op stack systems with a proof system, the Guardian can also blacklist dispute games and set the respected game type (permissioned / permissionless).","accounts":[{"address":"eth:0x4a4962275DF8C60a80d3a25faEc5AA7De116A746","type":"Contract","isVerified":true,"name":"Conduit Multisig 1","url":"#Conduit Multisig 1"}],"chain":"ethereum","discoveryDrivenData":true},{"name":"Proposer","description":"Allowed to post new state roots of the current layer to the host chain.","accounts":[{"address":"eth:0xF579A1cDfb89D0Aaf240d489EF10aB01A2B7f8F2","type":"EOA","isVerified":true,"name":"0xF579…f8F2","url":"https://etherscan.io/address/0xF579A1cDfb89D0Aaf240d489EF10aB01A2B7f8F2"}],"chain":"ethereum","discoveryDrivenData":true},{"name":"Sequencer","description":"Allowed to commit transactions from the current layer to the host chain.","accounts":[{"address":"eth:0x9Fb23129982c993743Eb9bB156af8CC8Fa2aC761","type":"EOA","isVerified":true,"name":"0x9Fb2…C761","url":"https://etherscan.io/address/0x9Fb23129982c993743Eb9bB156af8CC8Fa2aC761"}],"chain":"ethereum","discoveryDrivenData":true}],"actors":[{"name":"Conduit Multisig 1","description":"A Multisig with 4/11 threshold. \n* Can upgrade **with no delay**\n  * SuperchainConfig [via: ProxyAdmin]\n  * L1CrossDomainMessenger [via: ProxyAdmin]\n  * DisputeGameFactory [via: ProxyAdmin]\n  * L1StandardBridge [via: ProxyAdmin]\n  * OptimismPortal2 [via: ProxyAdmin]\n  * L1ERC721Bridge [via: ProxyAdmin]\n  * DelayedWETH [via: ProxyAdmin]\n  * OPSuccinctL2OutputOracle [via: ProxyAdmin]\n  * SystemConfig [via: ProxyAdmin]\n  * AnchorStateRegistry [via: ProxyAdmin]\n  * OptimismMintableERC20Factory [via: ProxyAdmin]\n* Can interact with AddressManager\n  * set and change address mappings [via: ProxyAdmin]\n* Can interact with DelayedWETH\n  * can pull funds from the contract in case of emergency \n* Can interact with OPSuccinctL2OutputOracle\n  * can toggle between the optimistic mode and not optimistic (ZK) mode \n* Can interact with SystemConfig\n  * it can update the preconfer address, the batch submitter (Sequencer) address and the gas configuration of the system \n* A Guardian - acting directly","accounts":[{"address":"eth:0x4a4962275DF8C60a80d3a25faEc5AA7De116A746","type":"Contract","isVerified":true,"name":"0x4a49…A746","url":"https://etherscan.io/address/0x4a4962275DF8C60a80d3a25faEc5AA7De116A746"}],"chain":"ethereum","references":[],"participants":[{"address":"eth:0xFe0ab87ebE03DD0bF52DaF34Dfda6639c335e2d4","type":"EOA","isVerified":true,"name":"0xFe0a…e2d4","url":"https://etherscan.io/address/0xFe0ab87ebE03DD0bF52DaF34Dfda6639c335e2d4"},{"address":"eth:0x81175155D85377C337d92f1FA52Da166C3A4E7Ac","type":"EOA","isVerified":true,"name":"0x8117…E7Ac","url":"https://etherscan.io/address/0x81175155D85377C337d92f1FA52Da166C3A4E7Ac"},{"address":"eth:0x50930d652266EF4127FA3A1906B7Cb9951076628","type":"EOA","isVerified":true,"name":"0x5093…6628","url":"https://etherscan.io/address/0x50930d652266EF4127FA3A1906B7Cb9951076628"},{"address":"eth:0xA0737fea60F0601A192E3d2c98865A883ab0bda2","type":"EOA","isVerified":true,"name":"0xA073…bda2","url":"https://etherscan.io/address/0xA0737fea60F0601A192E3d2c98865A883ab0bda2"},{"address":"eth:0xF3313C48BD8E17b823d5498D62F37019dFEA647D","type":"EOA","isVerified":true,"name":"0xF331…647D","url":"https://etherscan.io/address/0xF3313C48BD8E17b823d5498D62F37019dFEA647D"},{"address":"eth:0xF0B77EaE7F2dabCC2571c7418406A0dCA3afA4f0","type":"EOA","isVerified":true,"name":"0xF0B7…A4f0","url":"https://etherscan.io/address/0xF0B77EaE7F2dabCC2571c7418406A0dCA3afA4f0"},{"address":"eth:0xa4000bDD2bB92ce6750b31F1eeda47Bd1cB8e6e4","type":"EOA","isVerified":true,"name":"0xa400…e6e4","url":"https://etherscan.io/address/0xa4000bDD2bB92ce6750b31F1eeda47Bd1cB8e6e4"},{"address":"eth:0x3840f487A17A41100DD1Bf0946c34f132a57Fd5f","type":"EOA","isVerified":true,"name":"0x3840…Fd5f","url":"https://etherscan.io/address/0x3840f487A17A41100DD1Bf0946c34f132a57Fd5f"},{"address":"eth:0xa0C600a6e85bf225958FFAcC70B5FDDF9A059038","type":"EOA","isVerified":true,"name":"0xa0C6…9038","url":"https://etherscan.io/address/0xa0C600a6e85bf225958FFAcC70B5FDDF9A059038"},{"address":"eth:0xefCf0c8faFB425997870f845e26fC6cA6EE6dD5C","type":"EOA","isVerified":true,"name":"0xefCf…dD5C","url":"https://etherscan.io/address/0xefCf0c8faFB425997870f845e26fC6cA6EE6dD5C"},{"address":"eth:0x4D8007a0E9f293e62E2b0F43C6Cf4C4B9e135BAe","type":"EOA","isVerified":true,"name":"0x4D80…5BAe","url":"https://etherscan.io/address/0x4D8007a0E9f293e62E2b0F43C6Cf4C4B9e135BAe"}],"discoveryDrivenData":true},{"name":"SP1VerifierGatewayMultisig","description":"A Multisig with 2/3 threshold. \n* Can interact with SP1VerifierGateway\n  * affect the liveness and safety of the gateway - can transfer ownership, add and freeze verifier routes ","accounts":[{"address":"eth:0xCafEf00d348Adbd57c37d1B77e0619C6244C6878","type":"Contract","isVerified":true,"name":"0xCafE…6878","url":"https://etherscan.io/address/0xCafEf00d348Adbd57c37d1B77e0619C6244C6878"}],"chain":"ethereum","references":[],"participants":[{"address":"eth:0xBaB2c2aF5b91695e65955DA60d63aD1b2aE81126","type":"EOA","isVerified":true,"name":"0xBaB2…1126","url":"https://etherscan.io/address/0xBaB2c2aF5b91695e65955DA60d63aD1b2aE81126"},{"address":"eth:0x72Ff26D9517324eEFA89A48B75c5df41132c4f54","type":"EOA","isVerified":true,"name":"0x72Ff…4f54","url":"https://etherscan.io/address/0x72Ff26D9517324eEFA89A48B75c5df41132c4f54"},{"address":"eth:0x9395e83720bf2D8ac6435f9c520b48E289Cb8885","type":"EOA","isVerified":true,"name":"0x9395…8885","url":"https://etherscan.io/address/0x9395e83720bf2D8ac6435f9c520b48E289Cb8885"}],"discoveryDrivenData":true}]},"arbitrum":{"roles":[],"actors":[{"name":"SP1VerifierGatewayMultisig","description":"A Multisig with 2/3 threshold. \n* Can interact with SP1VerifierGateway\n  * affect the liveness and safety of the gateway - can transfer ownership, add and freeze verifier routes ","accounts":[{"address":"arb1:0xCafEf00d348Adbd57c37d1B77e0619C6244C6878","type":"Contract","isVerified":true,"name":"0xCafE…6878","url":"https://arbiscan.io/address/0xCafEf00d348Adbd57c37d1B77e0619C6244C6878"}],"chain":"arbitrum","references":[],"participants":[{"address":"arb1:0xBaB2c2aF5b91695e65955DA60d63aD1b2aE81126","type":"EOA","isVerified":true,"name":"0xBaB2…1126","url":"https://arbiscan.io/address/0xBaB2c2aF5b91695e65955DA60d63aD1b2aE81126"},{"address":"arb1:0x72Ff26D9517324eEFA89A48B75c5df41132c4f54","type":"EOA","isVerified":true,"name":"0x72Ff…4f54","url":"https://arbiscan.io/address/0x72Ff26D9517324eEFA89A48B75c5df41132c4f54"},{"address":"arb1:0x9395e83720bf2D8ac6435f9c520b48E289Cb8885","type":"EOA","isVerified":true,"name":"0x9395…8885","url":"https://arbiscan.io/address/0x9395e83720bf2D8ac6435f9c520b48E289Cb8885"}],"discoveryDrivenData":true}]},"base":{"roles":[],"actors":[{"name":"SP1VerifierGatewayMultisig","description":"A Multisig with 2/3 threshold. \n* Can interact with SP1VerifierGateway\n  * affect the liveness and safety of the gateway - can transfer ownership, add and freeze verifier routes ","accounts":[{"address":"base:0xCafEf00d348Adbd57c37d1B77e0619C6244C6878","type":"Contract","isVerified":true,"name":"0xCafE…6878","url":"https://basescan.org/address/0xCafEf00d348Adbd57c37d1B77e0619C6244C6878"}],"chain":"base","references":[],"participants":[{"address":"base:0xBaB2c2aF5b91695e65955DA60d63aD1b2aE81126","type":"EOA","isVerified":true,"name":"0xBaB2…1126","url":"https://basescan.org/address/0xBaB2c2aF5b91695e65955DA60d63aD1b2aE81126"},{"address":"base:0x72Ff26D9517324eEFA89A48B75c5df41132c4f54","type":"EOA","isVerified":true,"name":"0x72Ff…4f54","url":"https://basescan.org/address/0x72Ff26D9517324eEFA89A48B75c5df41132c4f54"},{"address":"base:0x9395e83720bf2D8ac6435f9c520b48E289Cb8885","type":"EOA","isVerified":true,"name":"0x9395…8885","url":"https://basescan.org/address/0x9395e83720bf2D8ac6435f9c520b48E289Cb8885"}],"discoveryDrivenData":true}]}},"contracts":{"addresses":{"ethereum":[{"name":"DisputeGameFactory","isVerified":true,"address":"eth:0x2157F4d5934c4b12193C4983E99b9D6418798a2E","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x198A8e0c220f29d8aF956e4c8A9E8b552096Ab2E"],"implementations":["eth:0x4bbA758F006Ef09402eF31724203F316ab74e4a0"]},"chain":"ethereum","description":"The dispute game factory allows the creation of dispute games, used to propose state roots and eventually challenge them.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Conduit Multisig 1","upgradableBy":[{"name":"Conduit Multisig 1","delay":"no"}],"discoveryDrivenData":true},{"name":"OptimismPortal2","isVerified":true,"address":"eth:0x96B124841Eff4Ab1b3C1F654D60402a1405fF51A","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x198A8e0c220f29d8aF956e4c8A9E8b552096Ab2E"],"implementations":["eth:0x5B172BBfa0140285A02374EC1f5B9f25ef415514"]},"chain":"ethereum","description":"The OptimismPortal contract is the main entry point to deposit funds from L1 to L2. It also allows to prove and finalize withdrawals. It specifies which game type can be used for withdrawals, which currently is the 6.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Conduit Multisig 1","upgradableBy":[{"name":"Conduit Multisig 1","delay":"no"}],"discoveryDrivenData":true},{"name":"SystemConfig","isVerified":true,"address":"eth:0xeBf5859b7646ca9cf8A981613569bF28394F2571","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x198A8e0c220f29d8aF956e4c8A9E8b552096Ab2E"],"implementations":["eth:0x340f923E5c7cbB2171146f64169EC9d5a9FfE647"]},"chain":"ethereum","description":"Contains configuration parameters such as the Sequencer address, gas limit on this chain and the unsafe block signer address.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Conduit Multisig 1\n  * **batcherHash**: EOA 1\n  * **owner**: Conduit Multisig 1","upgradableBy":[{"name":"Conduit Multisig 1","delay":"no"}],"discoveryDrivenData":true},{"name":"SuperchainConfig","isVerified":true,"address":"eth:0x097f99768A0a4a0A81bAbbCB1ea18193bA9D53cC","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0xb4899FF43Ae727B1E9CB19AC44660e4A43Fad0b5"],"implementations":["eth:0x4da82a327773965b8d4D85Fa3dB8249b387458E7"]},"chain":"ethereum","description":"This is NOT the shared SuperchainConfig contract of the OP stack Superchain but rather a local fork. It manages the `PAUSED_SLOT`, a boolean value indicating whether the local chain is paused, and `GUARDIAN_SLOT`, the address of the guardian which can pause and unpause the system.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Conduit Multisig 1\n  * **guardian**: Conduit Multisig 1","upgradableBy":[{"name":"Conduit Multisig 1","delay":"no"}],"discoveryDrivenData":true},{"name":"L1CrossDomainMessenger","isVerified":true,"address":"eth:0x1549Dd6f86f5bBf0b1Bc691407DE64e8104c1544","upgradeability":{"proxyType":"resolved delegate proxy","admins":["eth:0x198A8e0c220f29d8aF956e4c8A9E8b552096Ab2E"],"implementations":["eth:0x5D5a095665886119693F0B41d8DFeE78da033e8B"],"immutable":false},"chain":"ethereum","description":"Sends messages from host chain to this chain, and relays messages back onto host chain. In the event that a message sent from host chain to this chain is rejected for exceeding this chain's epoch gas limit, it can be resubmitted via this contract's replay function.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Conduit Multisig 1","upgradableBy":[{"name":"Conduit Multisig 1","delay":"no"}],"discoveryDrivenData":true},{"name":"L1StandardBridge","isVerified":true,"address":"eth:0x6A3444d11cA2697fe4A19AC8995ABDd8Dd301521","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x198A8e0c220f29d8aF956e4c8A9E8b552096Ab2E"],"implementations":["eth:0x0b09ba359A106C9ea3b181CBc5F394570c7d2a7A"]},"chain":"ethereum","description":"The main entry point to deposit ERC20 tokens from host chain to this chain.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Conduit Multisig 1","upgradableBy":[{"name":"Conduit Multisig 1","delay":"no"}],"discoveryDrivenData":true},{"name":"L1ERC721Bridge","isVerified":true,"address":"eth:0xa010dE167788ed7d95c770AC478997D3207236AF","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x198A8e0c220f29d8aF956e4c8A9E8b552096Ab2E"],"implementations":["eth:0x7aE1d3BD877a4C5CA257404ce26BE93A02C98013"]},"chain":"ethereum","description":"Used to bridge ERC-721 tokens from host chain to this chain.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Conduit Multisig 1","upgradableBy":[{"name":"Conduit Multisig 1","delay":"no"}],"discoveryDrivenData":true},{"name":"PermissionedDisputeGame","isVerified":true,"address":"eth:0x06B59a1A5314DEF287Cc8E5F371929d46DAc9690","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Same as FaultDisputeGame, but only two permissioned addresses are designated as proposer and challenger.\n","discoveryDrivenData":true},{"name":"ProxyAdmin","isVerified":true,"address":"eth:0x198A8e0c220f29d8aF956e4c8A9E8b552096Ab2E","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"* Roles:\n  * **owner**: Conduit Multisig 1","discoveryDrivenData":true},{"name":"PreimageOracle","isVerified":true,"address":"eth:0x1fb8cdFc6831fc866Ed9C51aF8817Da5c287aDD3","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"The PreimageOracle contract is used to load the required data from L1 for a dispute game.\n","discoveryDrivenData":true},{"name":"DelayedWETH","isVerified":true,"address":"eth:0xa2ba8e456cfb2639C462fD65659868e770c56EaA","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x198A8e0c220f29d8aF956e4c8A9E8b552096Ab2E"],"implementations":["eth:0x5e40B9231B86984b5150507046e354dbFbeD3d9e"]},"chain":"ethereum","description":"Contract designed to hold the bonded ETH for each game. It is designed as a wrapper around WETH to allow an owner to function as a backstop if a game would incorrectly distribute funds.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Conduit Multisig 1\n  * **owner**: Conduit Multisig 1","upgradableBy":[{"name":"Conduit Multisig 1","delay":"no"}],"discoveryDrivenData":true},{"name":"OPSuccinctL2OutputOracle","isVerified":true,"address":"eth:0xb45440830bd8D288bB2B5B01Be303ae60fc855d8","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x198A8e0c220f29d8aF956e4c8A9E8b552096Ab2E"],"implementations":["eth:0x9d843e5b627759e8aB2Db5B95cCA1e5BB91F1174"]},"chain":"ethereum","description":"Contains a list of proposed state roots which Proposers assert to be a result of block execution. The SuccinctL2OutputOracle modifies the L2OutputOracle to support whenNotOptimistic mode, in which a validity proof can be passed as input argument to the proposeL2Output function.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Conduit Multisig 1\n  * **owner**: Conduit Multisig 1\n  * **proposer**: EOA 2","upgradableBy":[{"name":"Conduit Multisig 1","delay":"no"}],"discoveryDrivenData":true},{"name":"OPSuccinctDisputeGame","isVerified":true,"address":"eth:0xb476cC5ECF2472A040DC381552B7a9bd7951A470","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"A dispute game wrapper around OPSuccinctL2OutputOracle. It is needed to comply with OptimismPortal2 requirement to have a DisputeGameFactory. Whenever a new game is created, an SP1 proof is immediately verified, so in fact there is no optimistic dispute game happening.\n","discoveryDrivenData":true},{"name":"ProxyAdmin","isVerified":true,"address":"eth:0xb4899FF43Ae727B1E9CB19AC44660e4A43Fad0b5","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"* Roles:\n  * **owner**: Conduit Multisig 1","discoveryDrivenData":true},{"name":"MIPS","isVerified":true,"address":"eth:0xF027F4A985560fb13324e943edf55ad6F1d15Dc1","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"The MIPS contract is used to execute the final step of the dispute game which objectively determines the winner of the dispute.\n","discoveryDrivenData":true},{"name":"AnchorStateRegistry","isVerified":true,"address":"eth:0xf463af71E3804B172a279B101f31BB67c7030a5F","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x198A8e0c220f29d8aF956e4c8A9E8b552096Ab2E"],"implementations":["eth:0x7b465370BB7A333f99edd19599EB7Fb1c2D3F8D2"]},"chain":"ethereum","description":"Contains the latest confirmed state root that can be used as a starting point in a dispute game.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Conduit Multisig 1","upgradableBy":[{"name":"Conduit Multisig 1","delay":"no"}],"discoveryDrivenData":true},{"name":"OptimismMintableERC20Factory","isVerified":true,"address":"eth:0xF8e8E783fa7A5CCDB77EddC3335cDb00066B515e","upgradeability":{"proxyType":"EIP1967 proxy","admins":["eth:0x198A8e0c220f29d8aF956e4c8A9E8b552096Ab2E"],"implementations":["eth:0x5493f4677A186f64805fe7317D6993ba4863988F"]},"chain":"ethereum","description":"A helper contract that generates OptimismMintableERC20 contracts on the network it's deployed to. OptimismMintableERC20 is a standard extension of the base ERC20 token contract designed to allow the L1StandardBridge contracts to mint and burn tokens. This makes it possible to use an OptimismMintableERC20 as this chain's representation of a token on the host chain, or vice-versa.\n* Roles:\n  * **admin**: ProxyAdmin; ultimately Conduit Multisig 1","upgradableBy":[{"name":"Conduit Multisig 1","delay":"no"}],"discoveryDrivenData":true},{"name":"SP1Verifier","isVerified":true,"address":"eth:0x0459d576A6223fEeA177Fb3DF53C9c77BF84C459","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"Verifier contract for SP1 proofs (v5.0.0).\n","discoveryDrivenData":true},{"name":"SP1VerifierGateway","isVerified":true,"address":"eth:0x3B6041173B80E77f038f3F2C0f9744f04837185e","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"ethereum","description":"This contract is the router for zk proof verification. It stores the mapping between identifiers and the address of onchain verifier contracts, routing each identifier to the corresponding verifier contract.\n* Roles:\n  * **owner**: SP1VerifierGatewayMultisig","discoveryDrivenData":true}],"arbitrum":[{"name":"SP1Verifier","isVerified":true,"address":"arb1:0x0459d576A6223fEeA177Fb3DF53C9c77BF84C459","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"arbitrum","description":"Verifier contract for SP1 proofs (v5.0.0).\n","discoveryDrivenData":true},{"name":"SP1VerifierGateway","isVerified":true,"address":"arb1:0x3B6041173B80E77f038f3F2C0f9744f04837185e","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"arbitrum","description":"This contract is the router for zk proof verification. It stores the mapping between identifiers and the address of onchain verifier contracts, routing each identifier to the corresponding verifier contract.\n* Roles:\n  * **owner**: SP1VerifierGatewayMultisig","discoveryDrivenData":true}],"base":[{"name":"SP1Verifier","isVerified":true,"address":"base:0x0459d576A6223fEeA177Fb3DF53C9c77BF84C459","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"base","description":"Verifier contract for SP1 proofs (v5.0.0).\n","discoveryDrivenData":true},{"name":"SP1VerifierGateway","isVerified":true,"address":"base:0x3B6041173B80E77f038f3F2C0f9744f04837185e","upgradeability":{"proxyType":"immutable","admins":[],"implementations":[],"immutable":true},"chain":"base","description":"This contract is the router for zk proof verification. It stores the mapping between identifiers and the address of onchain verifier contracts, routing each identifier to the corresponding verifier contract.\n* Roles:\n  * **owner**: SP1VerifierGatewayMultisig","discoveryDrivenData":true}]},"risks":[{"category":"Funds can be stolen if","text":"a contract receives a malicious code upgrade. There is no delay on code upgrades.","isCritical":true}]},"milestones":[{"title":"Plonky3 vulnerability patch","url":"https://x.com/SuccinctLabs/status/1929773028034204121","date":"2025-06-04T00:00:00.00Z","description":"SP1 verifier is patched to fix critical vulnerability in Plonky3 proof system (SP1 dependency).","type":"incident"},{"title":"Phala Network Launch","url":"https://x.com/PhalaNetwork/status/1877052813383184606","date":"2025-01-08T00:00:00Z","description":"Phala Network is live on Ethereum mainnet.","type":"general"}],"badges":[{"id":"Conduit","type":"RaaS","name":"Conduit","description":"This project was deployed via the rollup-as-a-service provider Conduit","action":{"type":"scalingFilter","id":"raas","value":"Conduit"}},{"id":"OPSuccinct","type":"Stack","name":"Built on the OP Succinct stack","description":"The project is built on the OP Succinct stack"},{"id":"EthereumBlobs","type":"DA","name":"Ethereum with blobs","description":"This project is posting its data to Ethereum as blobs","action":{"type":"publicDaHighlight","slug":"ethereum"}},{"id":"EVM","type":"VM","name":"EVM","description":"This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language","action":{"type":"scalingFilter","id":"vm","value":"EVM"}}],"stateValidation":{"categories":[{"title":"Validity proofs","description":"Each update to the system state must be accompanied by a ZK proof that ensures that the new state was derived by correctly applying a series of valid user transactions to the previous state. These proofs are then verified on Ethereum by a smart contract.\n        Through the SuccinctL2OutputOracle, the system also allows to switch to an optimistic mode, in which no proofs are required and a challenger can challenge the proposed output state root within the finalization period.","references":[{"url":"https://succinctlabs.github.io/op-succinct/architecture.html","title":"Op-Succinct architecture"}],"risks":[{"category":"Funds can be stolen if","text":"in non-optimistic mode, the validity proof cryptography is broken or implemented incorrectly."},{"category":"Funds can be stolen if","text":"optimistic mode is enabled and no challenger checks the published state."},{"category":"Funds can be stolen if","text":"the proposer routes proof verification through a malicious or faulty verifier by specifying an unsafe route id."},{"category":"Funds can be frozen if","text":"the permissioned proposer fails to publish state roots to the L1."},{"category":"Funds can be frozen if","text":"in non-optimistic mode, the SuccinctGateway is unable to route proof verification to a valid verifier."}]}]},"riskView":{"stateValidation":{"value":"Validity proofs (ST, SN)","description":"STARKs and SNARKs are zero knowledge proofs that ensure state correctness. STARKs proofs are wrapped in SNARKs proofs for efficiency. SNARKs require a trusted setup.","sentiment":"good","orderHint":null,"executionDelay":3600},"exitWindow":{"value":"None","description":"There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable.","sentiment":"bad","orderHint":-3600},"proposerFailure":{"value":"Cannot withdraw","description":"Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen.","sentiment":"bad","orderHint":null},"dataAvailability":{"value":"Onchain","description":"All of the data needed for proof construction is published on Ethereum L1.","sentiment":"good","orderHint":null},"sequencerFailure":{"value":"Self sequence","description":"In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation.","sentiment":"good","orderHint":43200,"secondLine":"12h delay"}},"stage":{"stage":"Stage 0","missing":{"nextStage":"Stage 1","requirements":["Users' withdrawals can be censored by the permissioned operators.","Upgrades executed by actors with more centralized control than a Security Council provide less than 7d for users to exit if the permissioned operator is down or censoring."],"principle":"Compromising ≥75% of the Security Council should be the only way (other than bugs) for a rollup to indefinitely block an L2→L1 message (e.g. a withdrawal) or push an invalid L2→L1 message (e.g. an invalid withdrawal)."},"summary":[{"stage":"Stage 0","requirements":[{"satisfied":true,"description":"A complete and functional proof system is deployed."},{"satisfied":true,"description":"The project calls itself a rollup."},{"satisfied":true,"description":"State roots are posted to Ethereum L1."},{"satisfied":true,"description":"Inputs for the state transition function are posted to Ethereum L1."},{"satisfied":true,"description":"A source-available node exists that can recreate the state from Ethereum L1 data. Please note that the L2BEAT team has not verified the validity of the node source code. [View code](https://github.com/succinctlabs/op-succinct/)"}]},{"stage":"Stage 1","requirements":[{"satisfied":false,"description":"Users' withdrawals can be censored by the permissioned operators."},{"satisfied":false,"description":"Upgrades executed by actors with more centralized control than a Security Council provide less than 7d for users to exit if the permissioned operator is down or censoring."}],"principle":{"satisfied":false,"description":"Compromising ≥75% of the Security Council should be the only way (other than bugs) for a rollup to indefinitely block an L2→L1 message (e.g. a withdrawal) or push an invalid L2→L1 message (e.g. an invalid withdrawal)."}},{"stage":"Stage 2","requirements":[{"satisfied":false,"description":"Upgrades unrelated to onchain provable bugs provide less than 30d to exit."},{"satisfied":false,"description":"The Security Council's actions are not confined to onchain provable bugs."}]}]},"dataAvailability":{"layer":{"value":"Ethereum","secondLine":"Blobs or Calldata","sentiment":"good","description":"The data is posted to Ethereum as calldata or blobs.","projectId":"ethereum"},"bridge":{"value":"Enshrined","sentiment":"good","description":"The validating bridge has access to all the data, as it is posted onchain.","projectId":"ethereum"},"mode":{"value":"Transaction data","secondLine":"Compressed"}},"discoveryInfo":{"isDiscoDriven":false,"permissionsDiscoDriven":false,"contractsDiscoDriven":false,"baseTimestamp":1758309851,"hasDiscoUi":false}}